{"version":3,"file":"downshift.umd.js","sources":["../src/set-a11y-status.js","../src/utils.js","../src/downshift.js","../src/index.js"],"sourcesContent":["// istanbul ignore next\nlet statusDiv =\n  typeof document === 'undefined'\n    ? null\n    : document.getElementById('a11y-status-message')\n\nlet statuses = []\n\nfunction setStatus(status) {\n  const isSameAsLast = statuses[statuses.length - 1] === status\n  if (isSameAsLast) {\n    statuses = [...statuses, status]\n  } else {\n    statuses = [status]\n  }\n  const div = getStatusDiv()\n\n  // Remove previous children\n  while (div.lastChild) {\n    div.removeChild(div.firstChild)\n  }\n\n  statuses.filter(Boolean).forEach((statusItem, index) => {\n    div.appendChild(getStatusChildDiv(statusItem, index))\n  })\n}\n\nfunction getStatusChildDiv(status, index) {\n  const display = index === statuses.length - 1 ? 'block' : 'none'\n\n  const childDiv = document.createElement('div')\n  childDiv.style.display = display\n  childDiv.textContent = status\n\n  return childDiv\n}\n\nfunction getStatusDiv() {\n  if (statusDiv) {\n    return statusDiv\n  }\n  statusDiv = document.createElement('div')\n  statusDiv.setAttribute('id', 'a11y-status-message')\n  statusDiv.setAttribute('role', 'status')\n  statusDiv.setAttribute('aria-live', 'assertive')\n  statusDiv.setAttribute('aria-relevant', 'additions text')\n  Object.assign(statusDiv.style, {\n    border: '0',\n    clip: 'rect(0 0 0 0)',\n    height: '1px',\n    margin: '-1px',\n    overflow: 'hidden',\n    padding: '0',\n    position: 'absolute',\n    width: '1px',\n  })\n  document.body.appendChild(statusDiv)\n  return statusDiv\n}\n\nexport default setStatus\n","let idCounter = 0\n\n/**\n * Accepts a parameter and returns it if it's a function\n * or a noop function if it's not. This allows us to\n * accept a callback, but not worry about it if it's not\n * passed.\n * @param {Function} cb the callback\n * @return {Function} a function\n */\nfunction cbToCb(cb) {\n  return typeof cb === 'function' ? cb : noop\n}\nfunction noop() {}\n\nfunction findParent(finder, node, rootNode) {\n  if (node !== null && node !== rootNode.parentNode) {\n    if (finder(node)) {\n      if (node === document.body && node.scrollTop === 0) {\n        // in chrome body.scrollTop always return 0\n        return document.documentElement\n      }\n      return node\n    } else {\n      return findParent(finder, node.parentNode, rootNode)\n    }\n  } else {\n    return null\n  }\n}\n\n/**\n * Get the closest element that scrolls\n * @param {HTMLElement} node - the child element to start searching for scroll parent at\n * @param {HTMLElement} rootNode - the root element of the component\n * @return {HTMLElement} the closest parentNode that scrolls\n */\nconst getClosestScrollParent = findParent.bind(\n  null,\n  node => node.scrollHeight > node.clientHeight,\n)\n\n/**\n * Scroll node into view if necessary\n * @param {HTMLElement} node - the element that should scroll into view\n * @param {HTMLElement} rootNode - the root element of the component\n * @param {Boolean} alignToTop - align element to the top of the visible area of the scrollable ancestor\n */\n// eslint-disable-next-line complexity\nfunction scrollIntoView(node, rootNode) {\n  const scrollParent = getClosestScrollParent(node, rootNode)\n  if (scrollParent === null) {\n    return\n  }\n  const scrollParentStyles = getComputedStyle(scrollParent)\n  const scrollParentRect = scrollParent.getBoundingClientRect()\n  const scrollParentBorderTopWidth = parseInt(\n    scrollParentStyles.borderTopWidth,\n    10,\n  )\n  const scrollParentBorderBottomWidth = parseInt(\n    scrollParentStyles.borderBottomWidth,\n    10,\n  )\n  const bordersWidth =\n    scrollParentBorderTopWidth + scrollParentBorderBottomWidth\n  const scrollParentTop = scrollParentRect.top + scrollParentBorderTopWidth\n  const nodeRect = node.getBoundingClientRect()\n\n  if (nodeRect.top < 0 && scrollParentRect.top < 0) {\n    scrollParent.scrollTop += nodeRect.top\n    return\n  }\n\n  if (nodeRect.top < 0) {\n    // the item is above the viewport and the parent is not above the viewport\n    scrollParent.scrollTop += nodeRect.top - scrollParentTop\n    return\n  }\n\n  if (nodeRect.top > 0 && scrollParentRect.top < 0) {\n    if (\n      scrollParentRect.bottom > 0 &&\n      nodeRect.bottom + bordersWidth > scrollParentRect.bottom\n    ) {\n      // the item is below scrollable area\n      scrollParent.scrollTop +=\n        nodeRect.bottom - scrollParentRect.bottom + bordersWidth\n    }\n    // item and parent top are on different sides of view top border (do nothing)\n    return\n  }\n\n  const nodeOffsetTop = nodeRect.top + scrollParent.scrollTop\n  const nodeTop = nodeOffsetTop - scrollParentTop\n  if (nodeTop < scrollParent.scrollTop) {\n    // the item is above the scrollable area\n    scrollParent.scrollTop = nodeTop\n  } else if (\n    nodeTop + nodeRect.height + bordersWidth >\n    scrollParent.scrollTop + scrollParentRect.height\n  ) {\n    // the item is below the scrollable area\n    scrollParent.scrollTop =\n      nodeTop + nodeRect.height - scrollParentRect.height + bordersWidth\n  }\n  // the item is within the scrollable area (do nothing)\n}\n\n/**\n * @param {HTMLElement} parent the parent node\n * @param {HTMLElement} child the child node\n * @return {Boolean} whether the parent is the child or the child is in the parent\n */\nfunction isOrContainsNode(parent, child) {\n  return parent === child || parent.contains(child)\n}\n\n/**\n * Simple debounce implementation. Will call the given\n * function once after the time given has passed since\n * it was last called.\n * @param {Function} fn the function to call after the time\n * @param {Number} time the time to wait\n * @return {Function} the debounced function\n */\nfunction debounce(fn, time) {\n  let timeoutId\n  return wrapper\n  function wrapper(...args) {\n    if (timeoutId) {\n      clearTimeout(timeoutId)\n    }\n    timeoutId = setTimeout(() => {\n      timeoutId = null\n      fn(...args)\n    }, time)\n  }\n}\n\n/**\n * This is intended to be used to compose event handlers.\n * They are executed in order until one of them sets\n * `event.preventDownshiftDefault = true`.\n * @param {Function} fns the event handler functions\n * @return {Function} the event handler to add to an element\n */\nfunction composeEventHandlers(...fns) {\n  return (event, ...args) =>\n    fns.some(fn => {\n      fn && fn(event, ...args)\n      // TODO: remove everything after the || in the next breaking change\n      return event.preventDownshiftDefault || event.defaultPrevented\n    })\n}\n\n/**\n * This generates a unique ID for an instance of Downshift\n * @return {String} the unique ID\n */\nfunction generateId() {\n  return String(idCounter++)\n}\n\n/**\n * This is only used in tests\n * @param {Number} num The number to set the idCounter to\n */\nfunction setIdCounter(num) {\n  idCounter = num\n}\n\n/**\n * Resets idCounter to 0. Used for SSR.\n */\nfunction resetIdCounter() {\n  idCounter = 0\n}\n\n/**\n * Returns the first argument that is not undefined\n * @param {...*} args the arguments\n * @return {*} the defined value\n */\nfunction firstDefined(...args) {\n  return args.find(a => typeof a !== 'undefined')\n}\n\n// eslint-disable-next-line complexity\nfunction getA11yStatusMessage({\n  isOpen,\n  highlightedItem,\n  selectedItem,\n  resultCount,\n  previousResultCount,\n  itemToString,\n}) {\n  if (!isOpen) {\n    if (selectedItem) {\n      return itemToString(selectedItem)\n    } else {\n      return ''\n    }\n  }\n  const resultCountChanged = resultCount !== previousResultCount\n  if (!resultCount) {\n    return 'No results.'\n  } else if (!highlightedItem || resultCountChanged) {\n    return `${resultCount} ${\n      resultCount === 1 ? 'result is' : 'results are'\n    } available, use up and down arrow keys to navigate.`\n  }\n  return itemToString(highlightedItem)\n}\n\n/**\n * Takes an argument and if it's an array, returns the first item in the array\n * otherwise returns the argument\n * @param {*} arg the maybe-array\n * @param {*} defaultValue the value if arg is falsey not defined\n * @return {*} the arg or it's first item\n */\nfunction unwrapArray(arg, defaultValue) {\n  arg = Array.isArray(arg) ? /* istanbul ignore next (preact) */ arg[0] : arg\n  if (!arg && defaultValue) {\n    return defaultValue\n  } else {\n    return arg\n  }\n}\n\n/**\n * @param {Object} element (P)react element\n * @return {Boolean} whether it's a DOM element\n */\nfunction isDOMElement(element) {\n  /* istanbul ignore if */\n  if (element.nodeName) {\n    // then this is preact\n    return typeof element.nodeName === 'string'\n  } else {\n    // then we assume this is react\n    return typeof element.type === 'string'\n  }\n}\n\n/**\n * @param {Object} element (P)react element\n * @return {Object} the props\n */\nfunction getElementProps(element) {\n  // props for react, attributes for preact\n  return element.props || /* istanbul ignore next (preact) */ element.attributes\n}\n\n/**\n * Throws a helpful error message for required properties. Useful\n * to be used as a default in destructuring or object params.\n * @param {String} fnName the function name\n * @param {String} propName the prop name\n */\nfunction requiredProp(fnName, propName) {\n  throw new Error(`The property \"${propName}\" is required in \"${fnName}\"`)\n}\n\nconst stateKeys = [\n  'highlightedIndex',\n  'inputValue',\n  'isOpen',\n  'selectedItem',\n  'type',\n]\n/**\n * @param {Object} state The state object\n * @return {Object} State that is relevant to downshift\n */\nfunction pickState(state = {}) {\n  const result = {}\n  stateKeys.forEach(k => {\n    if (state.hasOwnProperty(k)) {\n      result[k] = state[k]\n    }\n  })\n  return result\n}\n\n/**\n * Normalizes the 'key' property of a KeyboardEvent in IE/Edge\n * @param {Object} event a KeyboardEvent object\n * @return {String} keyboard key\n */\nfunction normalizeArrowKey(event) {\n  const {key, keyCode} = event\n  /* istanbul ignore next (ie) */\n  if (keyCode >= 37 && keyCode <= 40 && key.indexOf('Arrow') !== 0) {\n    return `Arrow${key}`\n  }\n  return key\n}\n\nexport {\n  cbToCb,\n  composeEventHandlers,\n  debounce,\n  scrollIntoView,\n  findParent,\n  generateId,\n  firstDefined,\n  getA11yStatusMessage,\n  unwrapArray,\n  isDOMElement,\n  getElementProps,\n  isOrContainsNode,\n  noop,\n  requiredProp,\n  setIdCounter,\n  resetIdCounter,\n  pickState,\n  isPlainObject,\n  normalizeArrowKey,\n}\n\n/**\n * Simple check if the value passed is object literal\n * @param {*} obj any things\n * @return {Boolean} whether it's object literal\n */\nfunction isPlainObject(obj) {\n  return Object.prototype.toString.call(obj) === '[object Object]'\n}\n","/* eslint camelcase:0 */\n\nimport React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport preval from 'preval.macro'\nimport setA11yStatus from './set-a11y-status'\nimport {\n  cbToCb,\n  composeEventHandlers,\n  debounce,\n  scrollIntoView,\n  generateId,\n  firstDefined,\n  getA11yStatusMessage,\n  unwrapArray,\n  isDOMElement,\n  isOrContainsNode,\n  getElementProps,\n  noop,\n  requiredProp,\n  pickState,\n  isPlainObject,\n  normalizeArrowKey,\n} from './utils'\n\nclass Downshift extends Component {\n  static propTypes = {\n    children: PropTypes.func,\n    render: PropTypes.func,\n    defaultHighlightedIndex: PropTypes.number,\n    defaultSelectedItem: PropTypes.any,\n    defaultInputValue: PropTypes.string,\n    defaultIsOpen: PropTypes.bool,\n    getA11yStatusMessage: PropTypes.func,\n    itemToString: PropTypes.func,\n    onChange: PropTypes.func,\n    onSelect: PropTypes.func,\n    onStateChange: PropTypes.func,\n    onInputValueChange: PropTypes.func,\n    onUserAction: PropTypes.func,\n    onOuterClick: PropTypes.func,\n    selectedItemChanged: PropTypes.func,\n    stateReducer: PropTypes.func,\n    itemCount: PropTypes.number,\n    id: PropTypes.string,\n    environment: PropTypes.shape({\n      addEventListener: PropTypes.func,\n      removeEventListener: PropTypes.func,\n      document: PropTypes.shape({\n        getElementById: PropTypes.func,\n        activeElement: PropTypes.any,\n        body: PropTypes.any,\n      }),\n    }),\n    // things we keep in state for uncontrolled components\n    // but can accept as props for controlled components\n    /* eslint-disable react/no-unused-prop-types */\n    selectedItem: PropTypes.any,\n    isOpen: PropTypes.bool,\n    inputValue: PropTypes.string,\n    highlightedIndex: PropTypes.number,\n    breakingChanges: PropTypes.shape({\n      resetInputOnSelection: PropTypes.bool,\n    }),\n    /* eslint-enable */\n  }\n\n  static defaultProps = {\n    defaultHighlightedIndex: null,\n    defaultSelectedItem: null,\n    defaultInputValue: '',\n    defaultIsOpen: false,\n    getA11yStatusMessage,\n    itemToString: i => {\n      if (i == null) {\n        return ''\n      }\n      if (process.env.NODE_ENV !== 'production' && isPlainObject(i)) {\n        //eslint-disable-next-line no-console\n        console.warn(\n          'downshift: An object was passed to the default implementation of `itemToString`. You should probably provide your own `itemToString` implementation. Please refer to the `itemToString` API documentation.',\n          'The object that was passed:',\n          i,\n        )\n      }\n      return String(i)\n    },\n    onStateChange: () => {},\n    onInputValueChange: () => {},\n    onUserAction: () => {},\n    onChange: () => {},\n    onSelect: () => {},\n    onOuterClick: () => {},\n    selectedItemChanged: (prevItem, item) => prevItem !== item,\n    environment:\n      typeof window === 'undefined' /* istanbul ignore next (ssr) */\n        ? {}\n        : window,\n    stateReducer: (state, stateToSet) => stateToSet,\n    breakingChanges: {},\n  }\n\n  static stateChangeTypes = {\n    unknown: '__autocomplete_unknown__',\n    mouseUp: '__autocomplete_mouseup__',\n    itemMouseEnter: '__autocomplete_item_mouseenter__',\n    keyDownArrowUp: '__autocomplete_keydown_arrow_up__',\n    keyDownArrowDown: '__autocomplete_keydown_arrow_down__',\n    keyDownEscape: '__autocomplete_keydown_escape__',\n    keyDownEnter: '__autocomplete_keydown_enter__',\n    clickItem: '__autocomplete_click_item__',\n    blurInput: '__autocomplete_blur_input__',\n    changeInput: '__autocomplete_change_input__',\n    keyDownSpaceButton: '__autocomplete_keydown_space_button__',\n    clickButton: '__autocomplete_click_button__',\n    blurButton: '__autocomplete_blur_button__',\n    controlledPropUpdatedSelectedItem:\n      '__autocomplete_controlled_prop_updated_selected_item__',\n    touchStart: '__autocomplete_touchstart__',\n  }\n\n  constructor(...args) {\n    super(...args)\n    const state = this.getState({\n      highlightedIndex: this.props.defaultHighlightedIndex,\n      isOpen: this.props.defaultIsOpen,\n      inputValue: this.props.defaultInputValue,\n      selectedItem: this.props.defaultSelectedItem,\n    })\n    if (state.selectedItem != null) {\n      state.inputValue = this.props.itemToString(state.selectedItem)\n    }\n    this.state = state\n    this.id = this.props.id || `downshift-${generateId()}`\n  }\n\n  input = null\n  items = []\n  // itemCount can be changed asynchronously\n  // from within downshift (so it can't come from a prop)\n  // this is why we store it as an instance and use\n  // getItemCount rather than just use items.length\n  // (to support windowing + async)\n  itemCount = null\n  previousResultCount = 0\n\n  /**\n   * Gets the state based on internal state or props\n   * If a state value is passed via props, then that\n   * is the value given, otherwise it's retrieved from\n   * stateToMerge\n   *\n   * This will perform a shallow merge of the given state object\n   * with the state coming from props\n   * (for the controlled component scenario)\n   * This is used in state updater functions so they're referencing\n   * the right state regardless of where it comes from.\n   *\n   * @param {Object} stateToMerge defaults to this.state\n   * @return {Object} the state\n   */\n  getState(stateToMerge = this.state) {\n    return Object.keys(stateToMerge).reduce((state, key) => {\n      state[key] = this.isControlledProp(key)\n        ? this.props[key]\n        : stateToMerge[key]\n      return state\n    }, {})\n  }\n\n  /**\n   * This determines whether a prop is a \"controlled prop\" meaning it is\n   * state which is controlled by the outside of this component rather\n   * than within this component.\n   * @param {String} key the key to check\n   * @return {Boolean} whether it is a controlled controlled prop\n   */\n  isControlledProp(key) {\n    return this.props[key] !== undefined\n  }\n\n  getItemCount() {\n    // things read better this way. They're in priority order:\n    // 1. `this.itemCount`\n    // 2. `this.props.itemCount`\n    // 3. `this.items.length`\n    /* eslint-disable no-negated-condition */\n    if (this.itemCount != null) {\n      return this.itemCount\n    } else if (this.props.itemCount !== undefined) {\n      return this.props.itemCount\n    } else {\n      return this.items.length\n    }\n    /* eslint-enable no-negated-condition */\n  }\n\n  setItemCount = count => (this.itemCount = count)\n  unsetItemCount = () => (this.itemCount = null)\n\n  getItemNodeFromIndex(index) {\n    return this.props.environment.document.getElementById(this.getItemId(index))\n  }\n\n  setHighlightedIndex = (\n    highlightedIndex = this.props.defaultHighlightedIndex,\n    otherStateToSet = {},\n  ) => {\n    otherStateToSet = pickState(otherStateToSet)\n    this.internalSetState({highlightedIndex, ...otherStateToSet})\n  }\n\n  scrollHighlightedItemIntoView() {\n    /* istanbul ignore else (react-native) */\n    if (preval`module.exports = process.env.BUILD_REACT_NATIVE !== 'true'`) {\n      const node = this.getItemNodeFromIndex(this.getState().highlightedIndex)\n      scrollIntoView(node, this._rootNode)\n    }\n  }\n\n  moveHighlightedIndex(amount, otherStateToSet) {\n    if (this.getState().isOpen) {\n      this.changeHighlightedIndex(amount, otherStateToSet)\n    } else {\n      this.setHighlightedIndex(undefined, {isOpen: true, ...otherStateToSet})\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  changeHighlightedIndex(moveAmount, otherStateToSet) {\n    const itemsLastIndex = this.getItemCount() - 1\n    if (itemsLastIndex < 0) {\n      return\n    }\n    const {highlightedIndex} = this.getState()\n    let baseIndex = highlightedIndex\n    if (baseIndex === null) {\n      baseIndex = moveAmount > 0 ? -1 : itemsLastIndex + 1\n    }\n    let newIndex = baseIndex + moveAmount\n    if (newIndex < 0) {\n      newIndex = itemsLastIndex\n    } else if (newIndex > itemsLastIndex) {\n      newIndex = 0\n    }\n    this.setHighlightedIndex(newIndex, otherStateToSet)\n  }\n\n  clearSelection = cb => {\n    this.internalSetState(\n      {\n        selectedItem: null,\n        inputValue: '',\n        isOpen: false,\n      },\n      cb,\n    )\n  }\n\n  selectItem = (item, otherStateToSet, cb) => {\n    otherStateToSet = pickState(otherStateToSet)\n    this.internalSetState(\n      {\n        isOpen: false,\n        highlightedIndex: this.props.defaultHighlightedIndex,\n        selectedItem: item,\n        inputValue:\n          this.isControlledProp('selectedItem') &&\n          this.props.breakingChanges.resetInputOnSelection\n            ? this.props.defaultInputValue\n            : this.props.itemToString(item),\n        ...otherStateToSet,\n      },\n      cb,\n    )\n  }\n\n  selectItemAtIndex = (itemIndex, otherStateToSet, cb) => {\n    const item = this.items[itemIndex]\n    if (item == null) {\n      return\n    }\n    this.selectItem(item, otherStateToSet, cb)\n  }\n\n  selectHighlightedItem = (otherStateToSet, cb) => {\n    return this.selectItemAtIndex(\n      this.getState().highlightedIndex,\n      otherStateToSet,\n      cb,\n    )\n  }\n\n  // any piece of our state can live in two places:\n  // 1. Uncontrolled: it's internal (this.state)\n  //    We will call this.setState to update that state\n  // 2. Controlled: it's external (this.props)\n  //    We will call this.props.onStateChange to update that state\n  //\n  // In addition, we'll call this.props.onChange if the\n  // selectedItem is changed.\n  internalSetState = (stateToSet, cb) => {\n    let isItemSelected, onChangeArg\n\n    const onStateChangeArg = {}\n    const isStateToSetFunction = typeof stateToSet === 'function'\n\n    // we want to call `onInputValueChange` before the `setState` call\n    // so someone controlling the `inputValue` state gets notified of\n    // the input change as soon as possible. This avoids issues with\n    // preserving the cursor position.\n    // See https://github.com/paypal/downshift/issues/217 for more info.\n    if (!isStateToSetFunction && stateToSet.hasOwnProperty('inputValue')) {\n      this.props.onInputValueChange(stateToSet.inputValue, {\n        ...this.getStateAndHelpers(),\n        ...stateToSet,\n      })\n    }\n    return this.setState(\n      state => {\n        state = this.getState(state)\n        let newStateToSet = isStateToSetFunction\n          ? stateToSet(state)\n          : stateToSet\n\n        // Your own function that could modify the state that will be set.\n        newStateToSet = this.props.stateReducer(state, newStateToSet)\n\n        // checks if an item is selected, regardless of if it's different from\n        // what was selected before\n        // used to determine if onSelect and onChange callbacks should be called\n        isItemSelected = newStateToSet.hasOwnProperty('selectedItem')\n        // this keeps track of the object we want to call with setState\n        const nextState = {}\n        // this is just used to tell whether the state changed\n        const nextFullState = {}\n        // we need to call on change if the outside world is controlling any of our state\n        // and we're trying to update that state. OR if the selection has changed and we're\n        // trying to update the selection\n        if (\n          isItemSelected &&\n          newStateToSet.selectedItem !== state.selectedItem\n        ) {\n          onChangeArg = newStateToSet.selectedItem\n        }\n        newStateToSet.type =\n          newStateToSet.type || Downshift.stateChangeTypes.unknown\n\n        Object.keys(newStateToSet).forEach(key => {\n          // onStateChangeArg should only have the state that is\n          // actually changing\n          if (state[key] !== newStateToSet[key]) {\n            onStateChangeArg[key] = newStateToSet[key]\n          }\n          // the type is useful for the onStateChangeArg\n          // but we don't actually want to set it in internal state.\n          // this is an undocumented feature for now... Not all internalSetState\n          // calls support it and I'm not certain we want them to yet.\n          // But it enables users controlling the isOpen state to know when\n          // the isOpen state changes due to mouseup events which is quite handy.\n          if (key === 'type') {\n            return\n          }\n          nextFullState[key] = newStateToSet[key]\n          // if it's coming from props, then we don't care to set it internally\n          if (!this.isControlledProp(key)) {\n            nextState[key] = newStateToSet[key]\n          }\n        })\n\n        // if stateToSet is a function, then we weren't able to call onInputValueChange\n        // earlier, so we'll call it now that we know what the inputValue state will be.\n        if (\n          isStateToSetFunction &&\n          newStateToSet.hasOwnProperty('inputValue')\n        ) {\n          this.props.onInputValueChange(newStateToSet.inputValue, {\n            ...this.getStateAndHelpers(),\n            ...newStateToSet,\n          })\n        }\n\n        return nextState\n      },\n      () => {\n        // call the provided callback if it's a callback\n        cbToCb(cb)()\n\n        // only call the onStateChange and onChange callbacks if\n        // we have relevant information to pass them.\n        const hasMoreStateThanType = Object.keys(onStateChangeArg).length > 1\n        if (hasMoreStateThanType) {\n          this.props.onStateChange(onStateChangeArg, this.getStateAndHelpers())\n        }\n\n        if (isItemSelected) {\n          this.props.onSelect(\n            stateToSet.selectedItem,\n            this.getStateAndHelpers(),\n          )\n        }\n\n        if (onChangeArg !== undefined) {\n          this.props.onChange(onChangeArg, this.getStateAndHelpers())\n        }\n        // this is currently undocumented and therefore subject to change\n        // We'll try to not break it, but just be warned.\n        this.props.onUserAction(onStateChangeArg, this.getStateAndHelpers())\n      },\n    )\n  }\n\n  getStateAndHelpers() {\n    const {highlightedIndex, inputValue, selectedItem, isOpen} = this.getState()\n    const {itemToString} = this.props\n    const {id} = this\n    const {\n      getRootProps,\n      getButtonProps,\n      getToggleButtonProps,\n      getLabelProps,\n      getInputProps,\n      getItemProps,\n      openMenu,\n      closeMenu,\n      toggleMenu,\n      selectItem,\n      selectItemAtIndex,\n      selectHighlightedItem,\n      setHighlightedIndex,\n      clearSelection,\n      clearItems,\n      reset,\n      setItemCount,\n      unsetItemCount,\n      internalSetState: setState,\n    } = this\n    return {\n      // prop getters\n      getRootProps,\n      getButtonProps,\n      getToggleButtonProps,\n      getLabelProps,\n      getInputProps,\n      getItemProps,\n\n      // actions\n      reset,\n      openMenu,\n      closeMenu,\n      toggleMenu,\n      selectItem,\n      selectItemAtIndex,\n      selectHighlightedItem,\n      setHighlightedIndex,\n      clearSelection,\n      clearItems,\n      setItemCount,\n      unsetItemCount,\n      setState,\n\n      //props\n      itemToString,\n\n      //derived\n      id,\n\n      // state\n      highlightedIndex,\n      inputValue,\n      isOpen,\n      selectedItem,\n    }\n  }\n\n  //////////////////////////// ROOT\n\n  rootRef = node => (this._rootNode = node)\n\n  getRootProps = (\n    {refKey = 'ref', ...rest} = {},\n    {suppressRefError = false} = {},\n  ) => {\n    // this is used in the render to know whether the user has called getRootProps.\n    // It uses that to know whether to apply the props automatically\n    this.getRootProps.called = true\n    this.getRootProps.refKey = refKey\n    this.getRootProps.suppressRefError = suppressRefError\n    return {\n      [refKey]: this.rootRef,\n      ...rest,\n    }\n  }\n\n  //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ ROOT\n\n  keyDownHandlers = {\n    ArrowDown(event) {\n      event.preventDefault()\n      const amount = event.shiftKey ? 5 : 1\n      this.moveHighlightedIndex(amount, {\n        type: Downshift.stateChangeTypes.keyDownArrowDown,\n      })\n    },\n\n    ArrowUp(event) {\n      event.preventDefault()\n      const amount = event.shiftKey ? -5 : -1\n      this.moveHighlightedIndex(amount, {\n        type: Downshift.stateChangeTypes.keyDownArrowUp,\n      })\n    },\n\n    Enter(event) {\n      if (this.getState().isOpen) {\n        event.preventDefault()\n        const itemIndex = this.getState().highlightedIndex\n        const item = this.items[itemIndex]\n        const itemNode = this.getItemNodeFromIndex(itemIndex)\n        if (item == null || (itemNode && itemNode.hasAttribute('disabled'))) {\n          return\n        }\n        this.selectHighlightedItem({\n          type: Downshift.stateChangeTypes.keyDownEnter,\n        })\n      }\n    },\n\n    Escape(event) {\n      event.preventDefault()\n      this.reset({type: Downshift.stateChangeTypes.keyDownEscape})\n    },\n  }\n\n  //////////////////////////// BUTTON\n\n  buttonKeyDownHandlers = {\n    ...this.keyDownHandlers,\n\n    ' '(event) {\n      event.preventDefault()\n      this.toggleMenu({type: Downshift.stateChangeTypes.keyDownSpaceButton})\n    },\n  }\n\n  getToggleButtonProps = ({onClick, onKeyDown, onBlur, ...rest} = {}) => {\n    const {isOpen} = this.getState()\n    const enabledEventHandlers = preval`module.exports = process.env.BUILD_REACT_NATIVE === 'true'`\n      ? /* istanbul ignore next (react-native) */\n        {\n          onPress: composeEventHandlers(onClick, this.button_handleClick),\n        }\n      : {\n          onClick: composeEventHandlers(onClick, this.button_handleClick),\n          onKeyDown: composeEventHandlers(onKeyDown, this.button_handleKeyDown),\n          onBlur: composeEventHandlers(onBlur, this.button_handleBlur),\n        }\n    const eventHandlers = rest.disabled ? {} : enabledEventHandlers\n    return {\n      type: 'button',\n      role: 'button',\n      'aria-label': isOpen ? 'close menu' : 'open menu',\n      'aria-expanded': isOpen,\n      'aria-haspopup': true,\n      'data-toggle': true,\n      ...eventHandlers,\n      ...rest,\n    }\n  }\n  // TODO: remove this in 2.0.0 and just call it `getToggleButtonProps`\n  getButtonProps = this.getToggleButtonProps\n\n  button_handleKeyDown = event => {\n    const key = normalizeArrowKey(event)\n    if (this.buttonKeyDownHandlers[key]) {\n      this.buttonKeyDownHandlers[key].call(this, event)\n    }\n  }\n\n  button_handleClick = event => {\n    event.preventDefault()\n    // handle odd case for Safari and Firefox which\n    // don't give the button the focus properly.\n    /* istanbul ignore if (can't reasonably test this) */\n    if (\n      this.props.environment.document.activeElement ===\n      this.props.environment.document.body\n    ) {\n      event.target.focus()\n    }\n    // to simplify testing components that use downshift, we'll not wrap this in a setTimeout\n    // if the NODE_ENV is test. With the proper build system, this should be dead code eliminated\n    // when building for production and should therefore have no impact on production code.\n    if (process.env.NODE_ENV === 'test') {\n      this.toggleMenu({type: Downshift.stateChangeTypes.clickButton})\n    } else {\n      // Ensure that toggle of menu occurs after the potential blur event in iOS\n      setTimeout(() =>\n        this.toggleMenu({type: Downshift.stateChangeTypes.clickButton}),\n      )\n    }\n  }\n\n  button_handleBlur = event => {\n    const blurTarget = event.target // Save blur target for comparison with activeElement later\n    // Need setTimeout, so that when the user presses Tab, the activeElement is the next focused element, not body element\n    setTimeout(() => {\n      if (\n        !this.isMouseDown &&\n        (this.props.environment.document.activeElement == null ||\n          this.props.environment.document.activeElement.id !== this.inputId) &&\n        this.props.environment.document.activeElement !== blurTarget // Do nothing if we refocus the same element again (to solve issue in Safari on iOS)\n      ) {\n        this.reset({type: Downshift.stateChangeTypes.blurButton})\n      }\n    })\n  }\n\n  //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ BUTTON\n\n  /////////////////////////////// LABEL\n\n  getLabelProps = (props = {}) => {\n    this.getLabelProps.called = true\n    if (\n      this.getInputProps.called &&\n      props.htmlFor &&\n      props.htmlFor !== this.inputId\n    ) {\n      throw new Error(\n        `downshift: You provided the htmlFor of \"${\n          props.htmlFor\n        }\" for your label, but the id of your input is \"${\n          this.inputId\n        }\". You must either remove the id from your input or set the htmlFor of the label equal to the input id.`,\n      )\n    }\n    this.inputId = firstDefined(this.inputId, props.htmlFor, `${this.id}-input`)\n    return {\n      ...props,\n      htmlFor: this.inputId,\n    }\n  }\n\n  //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ LABEL\n\n  /////////////////////////////// INPUT\n\n  getInputProps = ({onKeyDown, onBlur, onChange, onInput, ...rest} = {}) => {\n    this.getInputProps.called = true\n    if (this.getLabelProps.called && rest.id && rest.id !== this.inputId) {\n      throw new Error(\n        `downshift: You provided the id of \"${\n          rest.id\n        }\" for your input, but the htmlFor of your label is \"${\n          this.inputId\n        }\". You must either remove the id from your input or set the htmlFor of the label equal to the input id.`,\n      )\n    }\n    this.inputId = firstDefined(this.inputId, rest.id, `${this.id}-input`)\n    let onChangeKey\n    /* istanbul ignore next (preact) */\n    if (preval`module.exports = process.env.BUILD_PREACT === 'true'`) {\n      onChangeKey = 'onInput'\n      /* istanbul ignore next (react-native) */\n    } else if (\n      preval`module.exports = process.env.BUILD_REACT_NATIVE === 'true'`\n    ) {\n      onChangeKey = 'onChangeText'\n    } else {\n      onChangeKey = 'onChange'\n    }\n    const {inputValue, isOpen, highlightedIndex} = this.getState()\n    const eventHandlers = rest.disabled\n      ? {}\n      : {\n          [onChangeKey]: composeEventHandlers(\n            onChange,\n            onInput,\n            this.input_handleChange,\n          ),\n          onKeyDown: composeEventHandlers(onKeyDown, this.input_handleKeyDown),\n          onBlur: composeEventHandlers(onBlur, this.input_handleBlur),\n        }\n    return {\n      role: 'combobox',\n      'aria-autocomplete': 'list',\n      'aria-expanded': isOpen,\n      'aria-activedescendant':\n        isOpen && typeof highlightedIndex === 'number' && highlightedIndex >= 0\n          ? this.getItemId(highlightedIndex)\n          : null,\n      autoComplete: 'off',\n      value: inputValue,\n      ...eventHandlers,\n      ...rest,\n      id: this.inputId,\n    }\n  }\n\n  input_handleKeyDown = event => {\n    const key = normalizeArrowKey(event)\n    if (key && this.keyDownHandlers[key]) {\n      this.keyDownHandlers[key].call(this, event)\n    }\n  }\n\n  input_handleChange = event => {\n    this.internalSetState({\n      type: Downshift.stateChangeTypes.changeInput,\n      isOpen: true,\n      inputValue: preval`module.exports = process.env.BUILD_REACT_NATIVE === 'true'`\n        ? /* istanbul ignore next (react-native) */ event\n        : event.target.value,\n    })\n  }\n\n  input_handleBlur = () => {\n    // Need setTimeout, so that when the user presses Tab, the activeElement is the next focused element, not the body element\n    setTimeout(() => {\n      const downshiftButtonIsActive =\n        this.props.environment.document.activeElement.dataset.toggle &&\n        (this._rootNode &&\n          this._rootNode.contains(\n            this.props.environment.document.activeElement,\n          ))\n      if (!this.isMouseDown && !downshiftButtonIsActive) {\n        this.reset({type: Downshift.stateChangeTypes.blurInput})\n      }\n    })\n  }\n\n  //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ INPUT\n\n  /////////////////////////////// ITEM\n  getItemId(index) {\n    return `${this.id}-item-${index}`\n  }\n\n  getItemProps = ({\n    onMouseMove,\n    onMouseDown,\n    onClick,\n    index,\n    item = requiredProp('getItemProps', 'item'),\n    ...rest\n  } = {}) => {\n    if (index === undefined) {\n      this.items.push(item)\n      index = this.items.indexOf(item)\n    } else {\n      this.items[index] = item\n    }\n\n    const onSelectKey = preval`module.exports = process.env.BUILD_REACT_NATIVE === 'true'`\n      ? /* istanbul ignore next (react-native) */ 'onPress'\n      : 'onClick'\n\n    const enabledEventHandlers = {\n      // onMouseMove is used over onMouseEnter here. onMouseMove\n      // is only triggered on actual mouse movement while onMouseEnter\n      // can fire on DOM changes, interrupting keyboard navigation\n      onMouseMove: composeEventHandlers(onMouseMove, () => {\n        if (index === this.getState().highlightedIndex) {\n          return\n        }\n        this.setHighlightedIndex(index, {\n          type: Downshift.stateChangeTypes.itemMouseEnter,\n        })\n\n        // We never want to manually scroll when changing state based\n        // on `onMouseMove` because we will be moving the element out\n        // from under the user which is currently scrolling/moving the\n        // cursor\n        this.avoidScrolling = true\n        setTimeout(() => (this.avoidScrolling = false), 250)\n      }),\n      onMouseDown: composeEventHandlers(onMouseDown, event => {\n        // This prevents the activeElement from being changed\n        // to the item so it can remain with the current activeElement\n        // which is a more common use case.\n        event.preventDefault()\n      }),\n      [onSelectKey]: composeEventHandlers(onClick, () => {\n        this.selectItemAtIndex(index, {\n          type: Downshift.stateChangeTypes.clickItem,\n        })\n      }),\n    }\n\n    const eventHandlers = rest.disabled ? {} : enabledEventHandlers\n\n    return {\n      id: this.getItemId(index),\n      ...eventHandlers,\n      ...rest,\n    }\n  }\n  //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ ITEM\n\n  clearItems = () => {\n    this.items = []\n  }\n\n  reset = (otherStateToSet = {}, cb) => {\n    otherStateToSet = pickState(otherStateToSet)\n    this.internalSetState(\n      ({selectedItem}) => ({\n        isOpen: false,\n        highlightedIndex: this.props.defaultHighlightedIndex,\n        inputValue: this.props.itemToString(selectedItem),\n        ...otherStateToSet,\n      }),\n      cbToCb(cb),\n    )\n  }\n\n  toggleMenu = (otherStateToSet = {}, cb) => {\n    otherStateToSet = pickState(otherStateToSet)\n    this.internalSetState(\n      ({isOpen}) => {\n        return {isOpen: !isOpen, ...otherStateToSet}\n      },\n      () => {\n        const {isOpen} = this.getState()\n        if (isOpen) {\n          // highlight default index\n          this.setHighlightedIndex(undefined, otherStateToSet)\n        }\n        cbToCb(cb)()\n      },\n    )\n  }\n\n  openMenu = cb => {\n    this.internalSetState({isOpen: true}, cbToCb(cb))\n  }\n\n  closeMenu = cb => {\n    this.internalSetState({isOpen: false}, cbToCb(cb))\n  }\n\n  updateStatus = debounce(() => {\n    if (!this._isMounted) {\n      return\n    }\n    const state = this.getState()\n    const item = this.items[state.highlightedIndex]\n    const resultCount = this.getItemCount()\n    const status = this.props.getA11yStatusMessage({\n      itemToString: this.props.itemToString,\n      previousResultCount: this.previousResultCount,\n      resultCount,\n      highlightedItem: item,\n      ...state,\n    })\n    this.previousResultCount = resultCount\n    /* istanbul ignore else (react-native) */\n    if (preval`module.exports = process.env.BUILD_REACT_NATIVE !== 'true'`) {\n      setA11yStatus(status)\n    }\n  }, 200)\n\n  componentDidMount() {\n    // the _isMounted property is because we have `updateStatus` in a `debounce`\n    // and we don't want to update the status if the component has been umounted\n    this._isMounted = true\n    /* istanbul ignore if (react-native) */\n    if (preval`module.exports = process.env.BUILD_REACT_NATIVE === 'true'`) {\n      this.cleanup = () => {\n        this._isMounted = false\n      }\n    } else {\n      // this.isMouseDown helps us track whether the mouse is currently held down.\n      // This is useful when the user clicks on an item in the list, but holds the mouse\n      // down long enough for the list to disappear (because the blur event fires on the input)\n      // this.isMouseDown is used in the blur handler on the input to determine whether the blur event should\n      // trigger hiding the menu.\n      const onMouseDown = () => {\n        this.isMouseDown = true\n      }\n      const onMouseUp = event => {\n        const {document} = this.props.environment\n        this.isMouseDown = false\n        const targetInDownshift =\n          this._rootNode && isOrContainsNode(this._rootNode, event.target)\n        const activeElementInDownshift =\n          this._rootNode &&\n          isOrContainsNode(this._rootNode, document.activeElement)\n        if (\n          !targetInDownshift &&\n          !activeElementInDownshift &&\n          this.getState().isOpen\n        ) {\n          this.reset({type: Downshift.stateChangeTypes.mouseUp}, () =>\n            this.props.onOuterClick(this.getStateAndHelpers()),\n          )\n        }\n      }\n      // Touching an element in iOS gives focus and hover states, but touching out of\n      // the element will remove hover, and persist the focus state, resulting in the\n      // blur event not being triggered.\n      const onTouchStart = event => {\n        const targetInDownshift =\n          this._rootNode && isOrContainsNode(this._rootNode, event.target)\n        if (!targetInDownshift && this.getState().isOpen) {\n          this.reset({type: Downshift.stateChangeTypes.touchStart}, () =>\n            this.props.onOuterClick(this.getStateAndHelpers()),\n          )\n        }\n      }\n\n      this.props.environment.addEventListener('mousedown', onMouseDown)\n      this.props.environment.addEventListener('mouseup', onMouseUp)\n      this.props.environment.addEventListener('touchstart', onTouchStart)\n\n      this.cleanup = () => {\n        this._isMounted = false\n        this.props.environment.removeEventListener('mousedown', onMouseDown)\n        this.props.environment.removeEventListener('mouseup', onMouseUp)\n        this.props.environment.removeEventListener('touchstart', onTouchStart)\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.isControlledProp('selectedItem') &&\n      this.props.selectedItemChanged(\n        prevProps.selectedItem,\n        this.props.selectedItem,\n      )\n    ) {\n      this.internalSetState({\n        type: Downshift.stateChangeTypes.controlledPropUpdatedSelectedItem,\n        inputValue: this.props.itemToString(this.props.selectedItem),\n      })\n    }\n\n    const current =\n      this.props.highlightedIndex === undefined ? this.state : this.props\n    const prev =\n      prevProps.highlightedIndex === undefined ? prevState : prevProps\n\n    if (\n      current.highlightedIndex !== prev.highlightedIndex &&\n      !this.avoidScrolling\n    ) {\n      this.scrollHighlightedItemIntoView()\n    }\n\n    this.updateStatus()\n  }\n\n  componentWillUnmount() {\n    this.cleanup() // avoids memory leak\n  }\n\n  // eslint-disable-next-line complexity\n  render() {\n    const children = unwrapArray(this.props.render || this.props.children, noop)\n    // because the items are rerendered every time we call the children\n    // we clear this out each render and\n    this.clearItems()\n    // we reset this so we know whether the user calls getRootProps during\n    // this render. If they do then we don't need to do anything,\n    // if they don't then we need to clone the element they return and\n    // apply the props for them.\n    this.getRootProps.called = false\n    this.getRootProps.refKey = undefined\n    this.getRootProps.suppressRefError = undefined\n    // we do something similar for getLabelProps\n    this.getLabelProps.called = false\n    // and something similar for getInputProps\n    this.getInputProps.called = false\n    const element = unwrapArray(children(this.getStateAndHelpers()))\n    if (!element) {\n      return null\n    }\n    if (this.getRootProps.called) {\n      if (!this.getRootProps.suppressRefError) {\n        validateGetRootPropsCalledCorrectly(element, this.getRootProps)\n      }\n      return element\n    } else if (isDOMElement(element)) {\n      // they didn't apply the root props, but we can clone\n      // this and apply the props ourselves\n      return React.cloneElement(\n        element,\n        this.getRootProps(getElementProps(element)),\n      )\n    } else {\n      // they didn't apply the root props, but they need to\n      // otherwise we can't query around the autocomplete\n      throw new Error(\n        'downshift: If you return a non-DOM element, you must use apply the getRootProps function',\n      )\n    }\n  }\n}\n\nexport default Downshift\n\nfunction validateGetRootPropsCalledCorrectly(element, {refKey}) {\n  const refKeySpecified = refKey !== 'ref'\n  const isComposite = !isDOMElement(element)\n  if (isComposite && !refKeySpecified) {\n    throw new Error(\n      'downshift: You returned a non-DOM element. You must specify a refKey in getRootProps',\n    )\n  } else if (!isComposite && refKeySpecified) {\n    throw new Error(\n      `downshift: You returned a DOM element. You should not specify a refKey in getRootProps. You specified \"${refKey}\"`,\n    )\n  }\n  if (!getElementProps(element)[refKey]) {\n    throw new Error(\n      `downshift: You must apply the ref prop \"${refKey}\" from getRootProps onto your root element.`,\n    )\n  }\n}\n","import Downshift from './downshift'\nimport {resetIdCounter} from './utils'\n\n/*\n * Fix importing in typescript after rollup compilation\n * https://github.com/rollup/rollup/issues/1156\n * https://github.com/Microsoft/TypeScript/issues/13017#issuecomment-268657860\n */\nDownshift.default = Downshift\nDownshift.resetIdCounter = resetIdCounter\n\nexport default Downshift\n"],"names":["statusDiv","document","getElementById","statuses","setStatus","status","isSameAsLast","length","div","getStatusDiv","lastChild","removeChild","firstChild","filter","Boolean","forEach","statusItem","index","appendChild","getStatusChildDiv","display","childDiv","createElement","style","textContent","setAttribute","Object","assign","border","clip","height","margin","overflow","padding","position","width","body","idCounter","cbToCb","cb","noop","findParent","finder","node","rootNode","parentNode","scrollTop","documentElement","getClosestScrollParent","bind","scrollHeight","clientHeight","scrollIntoView","scrollParent","scrollParentStyles","getComputedStyle","scrollParentRect","getBoundingClientRect","scrollParentBorderTopWidth","parseInt","borderTopWidth","scrollParentBorderBottomWidth","borderBottomWidth","bordersWidth","scrollParentTop","top","nodeRect","bottom","nodeOffsetTop","nodeTop","isOrContainsNode","parent","child","contains","debounce","fn","time","timeoutId","wrapper","args","clearTimeout","setTimeout","composeEventHandlers","fns","event","some","preventDownshiftDefault","defaultPrevented","generateId","String","resetIdCounter","firstDefined","find","a","getA11yStatusMessage","isOpen","highlightedItem","selectedItem","resultCount","previousResultCount","itemToString","unwrapArray","arg","defaultValue","Array","isArray","isDOMElement","element","nodeName","type","getElementProps","props","attributes","requiredProp","fnName","propName","Error","stateKeys","pickState","state","result","hasOwnProperty","k","normalizeArrowKey","key","keyCode","indexOf","isPlainObject","obj","prototype","toString","call","Downshift","getState","highlightedIndex","defaultHighlightedIndex","defaultIsOpen","inputValue","defaultInputValue","defaultSelectedItem","id","stateToMerge","keys","reduce","isControlledProp","undefined","getItemCount","itemCount","items","getItemNodeFromIndex","environment","getItemId","scrollHighlightedItemIntoView","_rootNode","moveHighlightedIndex","amount","otherStateToSet","changeHighlightedIndex","setHighlightedIndex","moveAmount","itemsLastIndex","baseIndex","newIndex","getStateAndHelpers","getRootProps","getButtonProps","getToggleButtonProps","getLabelProps","getInputProps","getItemProps","openMenu","closeMenu","toggleMenu","selectItem","selectItemAtIndex","selectHighlightedItem","clearSelection","clearItems","reset","setItemCount","unsetItemCount","setState","internalSetState","componentDidMount","_isMounted","onMouseDown","isMouseDown","onMouseUp","targetInDownshift","target","activeElementInDownshift","activeElement","stateChangeTypes","mouseUp","onOuterClick","onTouchStart","touchStart","addEventListener","cleanup","removeEventListener","componentDidUpdate","prevProps","prevState","selectedItemChanged","controlledPropUpdatedSelectedItem","current","prev","avoidScrolling","updateStatus","componentWillUnmount","render","children","called","refKey","suppressRefError","validateGetRootPropsCalledCorrectly","React","cloneElement","Component","defaultProps","i","console","warn","onStateChange","onInputValueChange","onUserAction","onChange","onSelect","prevItem","item","window","stateReducer","stateToSet","breakingChanges","unknown","itemMouseEnter","keyDownArrowUp","keyDownArrowDown","keyDownEscape","keyDownEnter","clickItem","blurInput","changeInput","keyDownSpaceButton","clickButton","blurButton","input","count","resetInputOnSelection","itemIndex","isItemSelected","onChangeArg","onStateChangeArg","isStateToSetFunction","newStateToSet","nextState","nextFullState","hasMoreStateThanType","rootRef","rest","keyDownHandlers","ArrowDown","preventDefault","shiftKey","ArrowUp","Enter","itemNode","hasAttribute","Escape","buttonKeyDownHandlers","onClick","onKeyDown","onBlur","enabledEventHandlers","button_handleClick","button_handleKeyDown","button_handleBlur","eventHandlers","disabled","role","focus","blurTarget","inputId","htmlFor","onInput","onChangeKey","input_handleChange","input_handleKeyDown","input_handleBlur","autoComplete","value","downshiftButtonIsActive","dataset","toggle","onMouseMove","push","onSelectKey","setA11yStatus","propTypes","PropTypes","func","number","any","string","bool","shape","refKeySpecified","isComposite","default"],"mappings":"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"}