{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * `createChainableTypeChecker` is used inside of our custom prop validators to\n * add in chaining `isRequired` on a given prop validator.\n */\nvar createChainableTypeChecker = function createChainableTypeChecker(validate) {\n  // `checkType` is borrowed heavily from the `prop-types` package\n  var checkType = function checkType(isRequired, props, propName, componentName, location) {\n    if (props[propName] == null) {\n      if (isRequired) {\n        if (props[propName] === null) {\n          return new Error(\"The \".concat(location, \" `\").concat(propName, \"` is marked as required in \") + \"\".concat(componentName, \", but its value is `null`.\"));\n        }\n\n        return new Error(\"The \".concat(location, \" `\").concat(propName, \"` is marked as required in \") + \"\".concat(componentName, \", but its value is `undefined`.\"));\n      }\n\n      return null;\n    } else {\n      return validate(props, propName, componentName, location);\n    }\n  }; // By default, the validator will have `isRequired` set to false. However, we\n  // also define the `isRequired` property on the validtor so that consumers can\n  // chain their prop validator and assert that the property is required.\n\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n  return chainedCheckType;\n};\n\nexport default createChainableTypeChecker;","map":{"version":3,"sources":["/Users/khadijaal-selini/call-for-code/policy-truth-frontend/node_modules/carbon-components-react/es/prop-types/tools/createChainableTypeChecker.js"],"names":["createChainableTypeChecker","validate","checkType","isRequired","props","propName","componentName","location","Error","concat","chainedCheckType","bind"],"mappings":"AAAA;;;;;;;AAOA;;;;AAIA,IAAIA,0BAA0B,GAAG,SAASA,0BAAT,CAAoCC,QAApC,EAA8C;AAC7E;AACA,MAAIC,SAAS,GAAG,SAASA,SAAT,CAAmBC,UAAnB,EAA+BC,KAA/B,EAAsCC,QAAtC,EAAgDC,aAAhD,EAA+DC,QAA/D,EAAyE;AACvF,QAAIH,KAAK,CAACC,QAAD,CAAL,IAAmB,IAAvB,EAA6B;AAC3B,UAAIF,UAAJ,EAAgB;AACd,YAAIC,KAAK,CAACC,QAAD,CAAL,KAAoB,IAAxB,EAA8B;AAC5B,iBAAO,IAAIG,KAAJ,CAAU,OAAOC,MAAP,CAAcF,QAAd,EAAwB,IAAxB,EAA8BE,MAA9B,CAAqCJ,QAArC,EAA+C,6BAA/C,IAAgF,GAAGI,MAAH,CAAUH,aAAV,EAAyB,4BAAzB,CAA1F,CAAP;AACD;;AAED,eAAO,IAAIE,KAAJ,CAAU,OAAOC,MAAP,CAAcF,QAAd,EAAwB,IAAxB,EAA8BE,MAA9B,CAAqCJ,QAArC,EAA+C,6BAA/C,IAAgF,GAAGI,MAAH,CAAUH,aAAV,EAAyB,iCAAzB,CAA1F,CAAP;AACD;;AAED,aAAO,IAAP;AACD,KAVD,MAUO;AACL,aAAOL,QAAQ,CAACG,KAAD,EAAQC,QAAR,EAAkBC,aAAlB,EAAiCC,QAAjC,CAAf;AACD;AACF,GAdD,CAF6E,CAgB1E;AACH;AACA;;;AAGA,MAAIG,gBAAgB,GAAGR,SAAS,CAACS,IAAV,CAAe,IAAf,EAAqB,KAArB,CAAvB;AACAD,EAAAA,gBAAgB,CAACP,UAAjB,GAA8BD,SAAS,CAACS,IAAV,CAAe,IAAf,EAAqB,IAArB,CAA9B;AACA,SAAOD,gBAAP;AACD,CAxBD;;AA0BA,eAAeV,0BAAf","sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * `createChainableTypeChecker` is used inside of our custom prop validators to\n * add in chaining `isRequired` on a given prop validator.\n */\nvar createChainableTypeChecker = function createChainableTypeChecker(validate) {\n  // `checkType` is borrowed heavily from the `prop-types` package\n  var checkType = function checkType(isRequired, props, propName, componentName, location) {\n    if (props[propName] == null) {\n      if (isRequired) {\n        if (props[propName] === null) {\n          return new Error(\"The \".concat(location, \" `\").concat(propName, \"` is marked as required in \") + \"\".concat(componentName, \", but its value is `null`.\"));\n        }\n\n        return new Error(\"The \".concat(location, \" `\").concat(propName, \"` is marked as required in \") + \"\".concat(componentName, \", but its value is `undefined`.\"));\n      }\n\n      return null;\n    } else {\n      return validate(props, propName, componentName, location);\n    }\n  }; // By default, the validator will have `isRequired` set to false. However, we\n  // also define the `isRequired` property on the validtor so that consumers can\n  // chain their prop validator and assert that the property is required.\n\n\n  var chainedCheckType = checkType.bind(null, false);\n  chainedCheckType.isRequired = checkType.bind(null, true);\n  return chainedCheckType;\n};\n\nexport default createChainableTypeChecker;"]},"metadata":{},"sourceType":"module"}