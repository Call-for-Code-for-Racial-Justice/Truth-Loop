{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { settings } from 'carbon-components';\nvar prefix = settings.prefix;\n\nvar StructuredListSkeleton = function StructuredListSkeleton(_ref) {\n  var _classNames;\n\n  var rowCount = _ref.rowCount,\n      border = _ref.border;\n  var StructuredListSkeletonClasses = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--skeleton\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--structured-list\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--structured-list--border\"), border), _classNames));\n  var rows = [];\n\n  for (var i = 0; i < rowCount; i++) {\n    rows.push(React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--structured-list-row\"),\n      key: i\n    }, React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--structured-list-td\")\n    }), React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--structured-list-td\")\n    }), React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--structured-list-td\")\n    })));\n  }\n\n  return React.createElement(\"section\", {\n    className: StructuredListSkeletonClasses\n  }, React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--structured-list-thead\")\n  }, React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--structured-list-row \").concat(prefix, \"--structured-list-row--header-row\")\n  }, React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--structured-list-th\")\n  }, React.createElement(\"span\", null)), React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--structured-list-th\")\n  }, React.createElement(\"span\", null)), React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--structured-list-th\")\n  }, React.createElement(\"span\", null)))), React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--structured-list-tbody\")\n  }, rows));\n};\n\nStructuredListSkeleton.propTypes = {\n  /**\n   * number of table rows\n   */\n  rowCount: PropTypes.number,\n\n  /**\n   * Specify whether a border should be added to your StructuredListSkeleton\n   */\n  border: PropTypes.bool\n};\nStructuredListSkeleton.defaultProps = {\n  rowCount: 5,\n  border: false\n};\nexport default StructuredListSkeleton;","map":{"version":3,"sources":["/Users/khadijaal-selini/call-for-code/policy-truth-frontend/node_modules/carbon-components-react/es/components/StructuredList/StructuredList.Skeleton.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","PropTypes","React","classNames","settings","prefix","StructuredListSkeleton","_ref","_classNames","rowCount","border","StructuredListSkeletonClasses","concat","rows","i","push","createElement","className","propTypes","number","bool","defaultProps"],"mappings":"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","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { settings } from 'carbon-components';\nvar prefix = settings.prefix;\n\nvar StructuredListSkeleton = function StructuredListSkeleton(_ref) {\n  var _classNames;\n\n  var rowCount = _ref.rowCount,\n      border = _ref.border;\n  var StructuredListSkeletonClasses = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--skeleton\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--structured-list\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--structured-list--border\"), border), _classNames));\n  var rows = [];\n\n  for (var i = 0; i < rowCount; i++) {\n    rows.push(React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--structured-list-row\"),\n      key: i\n    }, React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--structured-list-td\")\n    }), React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--structured-list-td\")\n    }), React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--structured-list-td\")\n    })));\n  }\n\n  return React.createElement(\"section\", {\n    className: StructuredListSkeletonClasses\n  }, React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--structured-list-thead\")\n  }, React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--structured-list-row \").concat(prefix, \"--structured-list-row--header-row\")\n  }, React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--structured-list-th\")\n  }, React.createElement(\"span\", null)), React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--structured-list-th\")\n  }, React.createElement(\"span\", null)), React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--structured-list-th\")\n  }, React.createElement(\"span\", null)))), React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--structured-list-tbody\")\n  }, rows));\n};\n\nStructuredListSkeleton.propTypes = {\n  /**\n   * number of table rows\n   */\n  rowCount: PropTypes.number,\n\n  /**\n   * Specify whether a border should be added to your StructuredListSkeleton\n   */\n  border: PropTypes.bool\n};\nStructuredListSkeleton.defaultProps = {\n  rowCount: 5,\n  border: false\n};\nexport default StructuredListSkeleton;"]},"metadata":{},"sourceType":"module"}