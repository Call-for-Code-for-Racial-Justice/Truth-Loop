{"ast":null,"code":"function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport React, { useState, useRef } from 'react';\nimport { settings } from 'carbon-components';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { AriaLabelPropType } from '../../prop-types/AriaPropTypes';\nimport SideNavFooter from './SideNavFooter';\nvar prefix = settings.prefix;\nvar SideNav = React.forwardRef(function SideNav(props, ref) {\n  var _cx;\n\n  var expandedProp = props.expanded,\n      defaultExpanded = props.defaultExpanded,\n      isChildOfHeader = props.isChildOfHeader,\n      ariaLabel = props['aria-label'],\n      ariaLabelledBy = props['aria-labelledby'],\n      children = props.children,\n      onToggle = props.onToggle,\n      customClassName = props.className,\n      t = props.translateById,\n      isFixedNav = props.isFixedNav;\n\n  var _useRef = useRef(expandedProp !== undefined),\n      controlled = _useRef.current;\n\n  var _useState = useState(defaultExpanded),\n      _useState2 = _slicedToArray(_useState, 2),\n      expandedState = _useState2[0],\n      setExpandedState = _useState2[1];\n\n  var expanded = controlled ? expandedProp : expandedState;\n\n  var handleToggle = function handleToggle(event) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !expanded;\n\n    if (!controlled) {\n      setExpandedState(value);\n    }\n\n    if (onToggle) {\n      onToggle(event, value);\n    }\n  };\n\n  var accessibilityLabel = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy\n  };\n  var assistiveText = expanded ? t('carbon.sidenav.state.open') : t('carbon.sidenav.state.closed');\n  var className = cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--side-nav\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav--expanded\"), expanded), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav--collapsed\"), !expanded && isFixedNav), _defineProperty(_cx, customClassName, !!customClassName), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav--ux\"), isChildOfHeader), _cx));\n  return React.createElement(\"nav\", _extends({\n    ref: ref,\n    className: \"\".concat(prefix, \"--side-nav__navigation \").concat(className)\n  }, accessibilityLabel, {\n    onFocus: function onFocus(event) {\n      return handleToggle(event, true);\n    },\n    onBlur: function onBlur(event) {\n      return handleToggle(event, false);\n    }\n  }), children, isFixedNav ? null : React.createElement(SideNavFooter, {\n    assistiveText: assistiveText,\n    expanded: expanded,\n    onToggle: handleToggle\n  }));\n});\nSideNav.defaultProps = {\n  translateById: function translateById(id) {\n    var translations = {\n      'carbon.sidenav.state.open': 'Close',\n      'carbon.sidenav.state.closed': 'Open'\n    };\n    return translations[id];\n  },\n  defaultExpanded: false,\n  isChildOfHeader: true\n};\nSideNav.propTypes = _objectSpread({\n  /**\n   * If `true`, the SideNav will be expanded, otherwise it will be collapsed.\n   * Using this prop causes SideNav to become a controled component.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * If `true`, the SideNav will be open on initial render.\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * An optional listener that is called when an event that would cause\n   * toggling the SideNav occurs.\n   *\n   * @param {object} event\n   * @param {boolean} value\n   */\n  onToggle: PropTypes.func\n}, AriaLabelPropType, {\n  /**\n   * Optionally provide a custom class to apply to the underlying <li> node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Provide a custom function for translating all message ids within this\n   * component. This function will take in two arguments: the mesasge Id and the\n   * state of the component. From this, you should return a string representing\n   * the label you want displayed or read by screen readers.\n   */\n  translateById: PropTypes.func,\n\n  /**\n   * Optionally provide a custom class to apply to the underlying <li> node\n   */\n  isChildOfHeader: PropTypes.bool\n});\nexport default SideNav;","map":{"version":3,"sources":["/Users/khadijaal-selini/call-for-code/policy-truth-frontend/node_modules/carbon-components-react/es/components/UIShell/SideNav.js"],"names":["_objectSpread","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","_defineProperty","_extends","assign","prototype","hasOwnProperty","call","apply","obj","value","defineProperty","configurable","writable","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","TypeError","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","err","Array","isArray","React","useState","useRef","settings","cx","PropTypes","AriaLabelPropType","SideNavFooter","prefix","SideNav","forwardRef","props","ref","_cx","expandedProp","expanded","defaultExpanded","isChildOfHeader","ariaLabel","ariaLabelledBy","children","onToggle","customClassName","className","t","translateById","isFixedNav","_useRef","controlled","current","_useState","_useState2","expandedState","setExpandedState","handleToggle","event","accessibilityLabel","assistiveText","createElement","onFocus","onBlur","defaultProps","id","translations","propTypes","bool","func","string"],"mappings":"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","sourcesContent":["function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React, { useState, useRef } from 'react';\nimport { settings } from 'carbon-components';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport { AriaLabelPropType } from '../../prop-types/AriaPropTypes';\nimport SideNavFooter from './SideNavFooter';\nvar prefix = settings.prefix;\nvar SideNav = React.forwardRef(function SideNav(props, ref) {\n  var _cx;\n\n  var expandedProp = props.expanded,\n      defaultExpanded = props.defaultExpanded,\n      isChildOfHeader = props.isChildOfHeader,\n      ariaLabel = props['aria-label'],\n      ariaLabelledBy = props['aria-labelledby'],\n      children = props.children,\n      onToggle = props.onToggle,\n      customClassName = props.className,\n      t = props.translateById,\n      isFixedNav = props.isFixedNav;\n\n  var _useRef = useRef(expandedProp !== undefined),\n      controlled = _useRef.current;\n\n  var _useState = useState(defaultExpanded),\n      _useState2 = _slicedToArray(_useState, 2),\n      expandedState = _useState2[0],\n      setExpandedState = _useState2[1];\n\n  var expanded = controlled ? expandedProp : expandedState;\n\n  var handleToggle = function handleToggle(event) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !expanded;\n\n    if (!controlled) {\n      setExpandedState(value);\n    }\n\n    if (onToggle) {\n      onToggle(event, value);\n    }\n  };\n\n  var accessibilityLabel = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledBy\n  };\n  var assistiveText = expanded ? t('carbon.sidenav.state.open') : t('carbon.sidenav.state.closed');\n  var className = cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--side-nav\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav--expanded\"), expanded), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav--collapsed\"), !expanded && isFixedNav), _defineProperty(_cx, customClassName, !!customClassName), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav--ux\"), isChildOfHeader), _cx));\n  return React.createElement(\"nav\", _extends({\n    ref: ref,\n    className: \"\".concat(prefix, \"--side-nav__navigation \").concat(className)\n  }, accessibilityLabel, {\n    onFocus: function onFocus(event) {\n      return handleToggle(event, true);\n    },\n    onBlur: function onBlur(event) {\n      return handleToggle(event, false);\n    }\n  }), children, isFixedNav ? null : React.createElement(SideNavFooter, {\n    assistiveText: assistiveText,\n    expanded: expanded,\n    onToggle: handleToggle\n  }));\n});\nSideNav.defaultProps = {\n  translateById: function translateById(id) {\n    var translations = {\n      'carbon.sidenav.state.open': 'Close',\n      'carbon.sidenav.state.closed': 'Open'\n    };\n    return translations[id];\n  },\n  defaultExpanded: false,\n  isChildOfHeader: true\n};\nSideNav.propTypes = _objectSpread({\n  /**\n   * If `true`, the SideNav will be expanded, otherwise it will be collapsed.\n   * Using this prop causes SideNav to become a controled component.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * If `true`, the SideNav will be open on initial render.\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * An optional listener that is called when an event that would cause\n   * toggling the SideNav occurs.\n   *\n   * @param {object} event\n   * @param {boolean} value\n   */\n  onToggle: PropTypes.func\n}, AriaLabelPropType, {\n  /**\n   * Optionally provide a custom class to apply to the underlying <li> node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Provide a custom function for translating all message ids within this\n   * component. This function will take in two arguments: the mesasge Id and the\n   * state of the component. From this, you should return a string representing\n   * the label you want displayed or read by screen readers.\n   */\n  translateById: PropTypes.func,\n\n  /**\n   * Optionally provide a custom class to apply to the underlying <li> node\n   */\n  isChildOfHeader: PropTypes.bool\n});\nexport default SideNav;"]},"metadata":{},"sourceType":"module"}