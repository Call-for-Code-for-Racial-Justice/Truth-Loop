{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport invariant from 'invariant';\n\nvar itemToString = function itemToString(item) {\n  !(typeof item.label === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, '[MultiSelect] the default `itemToString` method expected to receive ' + 'an item with a `label` field of type `string`. Instead received: `%s`', _typeof(item.label)) : invariant(false) : void 0;\n  return item.label || '';\n};\n\nexport var defaultItemToString = function defaultItemToString(item) {\n  if (Array.isArray(item)) {\n    return item.map(itemToString);\n  }\n\n  return itemToString(item);\n};","map":{"version":3,"sources":["/Users/khadijaal-selini/call-for-code/policy-truth-frontend/node_modules/carbon-components-react/es/components/MultiSelect/tools/itemToString.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","invariant","itemToString","item","label","process","env","NODE_ENV","defaultItemToString","Array","isArray","map"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,MAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,MAAM,CAACC,QAAd,KAA2B,QAA/D,EAAyE;AAAEH,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,aAAO,OAAOA,GAAd;AAAoB,KAAtD;AAAyD,GAApI,MAA0I;AAAED,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAAE,aAAOA,GAAG,IAAI,OAAOC,MAAP,KAAkB,UAAzB,IAAuCD,GAAG,CAACG,WAAJ,KAAoBF,MAA3D,IAAqED,GAAG,KAAKC,MAAM,CAACG,SAApF,GAAgG,QAAhG,GAA2G,OAAOJ,GAAzH;AAA+H,KAAjK;AAAoK;;AAAC,SAAOD,OAAO,CAACC,GAAD,CAAd;AAAsB;AAE/V;;;;;;;;AAMA,OAAOK,SAAP,MAAsB,WAAtB;;AAEA,IAAIC,YAAY,GAAG,SAASA,YAAT,CAAsBC,IAAtB,EAA4B;AAC7C,IAAE,OAAOA,IAAI,CAACC,KAAZ,KAAsB,QAAxB,IAAoCC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCN,SAAS,CAAC,KAAD,EAAQ,yEAAyE,uEAAjF,EAA0JN,OAAO,CAACQ,IAAI,CAACC,KAAN,CAAjK,CAAjD,GAAkOH,SAAS,CAAC,KAAD,CAA/Q,GAAyR,KAAK,CAA9R;AACA,SAAOE,IAAI,CAACC,KAAL,IAAc,EAArB;AACD,CAHD;;AAKA,OAAO,IAAII,mBAAmB,GAAG,SAASA,mBAAT,CAA6BL,IAA7B,EAAmC;AAClE,MAAIM,KAAK,CAACC,OAAN,CAAcP,IAAd,CAAJ,EAAyB;AACvB,WAAOA,IAAI,CAACQ,GAAL,CAAST,YAAT,CAAP;AACD;;AAED,SAAOA,YAAY,CAACC,IAAD,CAAnB;AACD,CANM","sourcesContent":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport invariant from 'invariant';\n\nvar itemToString = function itemToString(item) {\n  !(typeof item.label === 'string') ? process.env.NODE_ENV !== \"production\" ? invariant(false, '[MultiSelect] the default `itemToString` method expected to receive ' + 'an item with a `label` field of type `string`. Instead received: `%s`', _typeof(item.label)) : invariant(false) : void 0;\n  return item.label || '';\n};\n\nexport var defaultItemToString = function defaultItemToString(item) {\n  if (Array.isArray(item)) {\n    return item.map(itemToString);\n  }\n\n  return itemToString(item);\n};"]},"metadata":{},"sourceType":"module"}