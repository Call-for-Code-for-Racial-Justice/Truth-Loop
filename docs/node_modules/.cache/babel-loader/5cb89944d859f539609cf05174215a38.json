{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport Close20 from '@carbon/icons-react/lib/close/20';\nimport ChevronRight20 from '@carbon/icons-react/lib/chevron--right/20';\nimport { settings } from 'carbon-components';\nimport cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nvar prefix = settings.prefix;\n/**\n * SideNavFooter is used for rendering the button at the bottom of the side\n * navigation that is a part of the UI Shell. It is responsible for handling the\n * user interaction to expand or collapse the side navigation.\n */\n\nvar SideNavFooter = function SideNavFooter(_ref) {\n  var assistiveText = _ref.assistiveText,\n      customClassName = _ref.className,\n      expanded = _ref.expanded,\n      onToggle = _ref.onToggle;\n  var className = cx(\"\".concat(prefix, \"--side-nav__footer\"), customClassName);\n  return React.createElement(\"footer\", {\n    className: className\n  }, React.createElement(\"button\", {\n    className: \"\".concat(prefix, \"--side-nav__toggle\"),\n    type: \"button\",\n    onClick: function onClick(evt) {\n      return onToggle(evt);\n    },\n    title: assistiveText\n  }, React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--side-nav__icon\")\n  }, expanded ? React.createElement(Close20, null) : React.createElement(ChevronRight20, null)), React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--assistive-text\")\n  }, assistiveText)));\n};\n\nSideNavFooter.propTypes = {\n  /**\n   * Provide text to be read to screen readers and shown as a tooltip when\n   * interacting with the toggle button in the footer\n   */\n  assistiveText: PropTypes.string.isRequired,\n\n  /**\n   * Specify whether the side navigation is expanded or collapsed\n   */\n  expanded: PropTypes.bool.isRequired,\n\n  /**\n   * Provide a function that is called when the toggle button is interacted\n   * with. Useful for controlling the expansion state of the side navigation.\n   */\n  onToggle: PropTypes.func.isRequired\n};\nSideNavFooter.defaultProps = {\n  assistiveText: 'Toggle opening or closing the side navigation'\n};\nexport default SideNavFooter;","map":{"version":3,"sources":["/Users/khadijaal-selini/call-for-code/policy-truth-frontend/node_modules/carbon-components-react/es/components/UIShell/SideNavFooter.js"],"names":["Close20","ChevronRight20","settings","cx","React","PropTypes","prefix","SideNavFooter","_ref","assistiveText","customClassName","className","expanded","onToggle","concat","createElement","type","onClick","evt","title","propTypes","string","isRequired","bool","func","defaultProps"],"mappings":"AAAA;;;;;;AAMA,OAAOA,OAAP,MAAoB,kCAApB;AACA,OAAOC,cAAP,MAA2B,2CAA3B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,IAAIC,MAAM,GAAGJ,QAAQ,CAACI,MAAtB;AACA;;;;;;AAMA,IAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBC,IAAvB,EAA6B;AAC/C,MAAIC,aAAa,GAAGD,IAAI,CAACC,aAAzB;AAAA,MACIC,eAAe,GAAGF,IAAI,CAACG,SAD3B;AAAA,MAEIC,QAAQ,GAAGJ,IAAI,CAACI,QAFpB;AAAA,MAGIC,QAAQ,GAAGL,IAAI,CAACK,QAHpB;AAIA,MAAIF,SAAS,GAAGR,EAAE,CAAC,GAAGW,MAAH,CAAUR,MAAV,EAAkB,oBAAlB,CAAD,EAA0CI,eAA1C,CAAlB;AACA,SAAON,KAAK,CAACW,aAAN,CAAoB,QAApB,EAA8B;AACnCJ,IAAAA,SAAS,EAAEA;AADwB,GAA9B,EAEJP,KAAK,CAACW,aAAN,CAAoB,QAApB,EAA8B;AAC/BJ,IAAAA,SAAS,EAAE,GAAGG,MAAH,CAAUR,MAAV,EAAkB,oBAAlB,CADoB;AAE/BU,IAAAA,IAAI,EAAE,QAFyB;AAG/BC,IAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAC7B,aAAOL,QAAQ,CAACK,GAAD,CAAf;AACD,KAL8B;AAM/BC,IAAAA,KAAK,EAAEV;AANwB,GAA9B,EAOAL,KAAK,CAACW,aAAN,CAAoB,KAApB,EAA2B;AAC5BJ,IAAAA,SAAS,EAAE,GAAGG,MAAH,CAAUR,MAAV,EAAkB,kBAAlB;AADiB,GAA3B,EAEAM,QAAQ,GAAGR,KAAK,CAACW,aAAN,CAAoBf,OAApB,EAA6B,IAA7B,CAAH,GAAwCI,KAAK,CAACW,aAAN,CAAoBd,cAApB,EAAoC,IAApC,CAFhD,CAPA,EAS4FG,KAAK,CAACW,aAAN,CAAoB,MAApB,EAA4B;AACzHJ,IAAAA,SAAS,EAAE,GAAGG,MAAH,CAAUR,MAAV,EAAkB,kBAAlB;AAD8G,GAA5B,EAE5FG,aAF4F,CAT5F,CAFI,CAAP;AAcD,CApBD;;AAsBAF,aAAa,CAACa,SAAd,GAA0B;AACxB;;;;AAIAX,EAAAA,aAAa,EAAEJ,SAAS,CAACgB,MAAV,CAAiBC,UALR;;AAOxB;;;AAGAV,EAAAA,QAAQ,EAAEP,SAAS,CAACkB,IAAV,CAAeD,UAVD;;AAYxB;;;;AAIAT,EAAAA,QAAQ,EAAER,SAAS,CAACmB,IAAV,CAAeF;AAhBD,CAA1B;AAkBAf,aAAa,CAACkB,YAAd,GAA6B;AAC3BhB,EAAAA,aAAa,EAAE;AADY,CAA7B;AAGA,eAAeF,aAAf","sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport Close20 from '@carbon/icons-react/lib/close/20';\nimport ChevronRight20 from '@carbon/icons-react/lib/chevron--right/20';\nimport { settings } from 'carbon-components';\nimport cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nvar prefix = settings.prefix;\n/**\n * SideNavFooter is used for rendering the button at the bottom of the side\n * navigation that is a part of the UI Shell. It is responsible for handling the\n * user interaction to expand or collapse the side navigation.\n */\n\nvar SideNavFooter = function SideNavFooter(_ref) {\n  var assistiveText = _ref.assistiveText,\n      customClassName = _ref.className,\n      expanded = _ref.expanded,\n      onToggle = _ref.onToggle;\n  var className = cx(\"\".concat(prefix, \"--side-nav__footer\"), customClassName);\n  return React.createElement(\"footer\", {\n    className: className\n  }, React.createElement(\"button\", {\n    className: \"\".concat(prefix, \"--side-nav__toggle\"),\n    type: \"button\",\n    onClick: function onClick(evt) {\n      return onToggle(evt);\n    },\n    title: assistiveText\n  }, React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--side-nav__icon\")\n  }, expanded ? React.createElement(Close20, null) : React.createElement(ChevronRight20, null)), React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--assistive-text\")\n  }, assistiveText)));\n};\n\nSideNavFooter.propTypes = {\n  /**\n   * Provide text to be read to screen readers and shown as a tooltip when\n   * interacting with the toggle button in the footer\n   */\n  assistiveText: PropTypes.string.isRequired,\n\n  /**\n   * Specify whether the side navigation is expanded or collapsed\n   */\n  expanded: PropTypes.bool.isRequired,\n\n  /**\n   * Provide a function that is called when the toggle button is interacted\n   * with. Useful for controlling the expansion state of the side navigation.\n   */\n  onToggle: PropTypes.func.isRequired\n};\nSideNavFooter.defaultProps = {\n  assistiveText: 'Toggle opening or closing the side navigation'\n};\nexport default SideNavFooter;"]},"metadata":{},"sourceType":"module"}