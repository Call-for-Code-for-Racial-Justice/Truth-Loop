{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { settings } from 'carbon-components';\nvar prefix = settings.prefix;\n\nvar DropdownSkeleton = function DropdownSkeleton(_ref) {\n  var _classNames;\n\n  var inline = _ref.inline;\n  var wrapperClasses = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--skeleton\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--dropdown-v2\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--list-box\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--form-item\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--list-box--inline\"), inline), _classNames));\n  return React.createElement(\"div\", {\n    className: wrapperClasses\n  }, React.createElement(\"div\", {\n    role: \"button\",\n    className: \"\".concat(prefix, \"--list-box__field\")\n  }, React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--list-box__label\")\n  })));\n};\n\nDropdownSkeleton.propTypes = {\n  /**\n   * Specify whether you want the inline version of this control\n   */\n  inline: PropTypes.bool\n};\nDropdownSkeleton.defaultProps = {\n  inline: false\n};\nexport default DropdownSkeleton;","map":{"version":3,"sources":["/Users/khadijaal-selini/call-for-code/policy-truth-frontend/node_modules/carbon-components-react/es/components/Dropdown/Dropdown.Skeleton.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","PropTypes","React","classNames","settings","prefix","DropdownSkeleton","_ref","_classNames","inline","wrapperClasses","concat","createElement","className","role","propTypes","bool","defaultProps"],"mappings":"AAAA,SAASA,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,KAAnC,EAA0C;AAAE,MAAID,GAAG,IAAID,GAAX,EAAgB;AAAEG,IAAAA,MAAM,CAACC,cAAP,CAAsBJ,GAAtB,EAA2BC,GAA3B,EAAgC;AAAEC,MAAAA,KAAK,EAAEA,KAAT;AAAgBG,MAAAA,UAAU,EAAE,IAA5B;AAAkCC,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEP,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWC,KAAX;AAAmB;;AAAC,SAAOF,GAAP;AAAa;AAEjN;;;;;;;;AAMA,OAAOQ,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,IAAIC,MAAM,GAAGD,QAAQ,CAACC,MAAtB;;AAEA,IAAIC,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,IAA1B,EAAgC;AACrD,MAAIC,WAAJ;;AAEA,MAAIC,MAAM,GAAGF,IAAI,CAACE,MAAlB;AACA,MAAIC,cAAc,GAAGP,UAAU,EAAEK,WAAW,GAAG,EAAd,EAAkBhB,eAAe,CAACgB,WAAD,EAAc,GAAGG,MAAH,CAAUN,MAAV,EAAkB,YAAlB,CAAd,EAA+C,IAA/C,CAAjC,EAAuFb,eAAe,CAACgB,WAAD,EAAc,GAAGG,MAAH,CAAUN,MAAV,EAAkB,eAAlB,CAAd,EAAkD,IAAlD,CAAtG,EAA+Jb,eAAe,CAACgB,WAAD,EAAc,GAAGG,MAAH,CAAUN,MAAV,EAAkB,YAAlB,CAAd,EAA+C,IAA/C,CAA9K,EAAoOb,eAAe,CAACgB,WAAD,EAAc,GAAGG,MAAH,CAAUN,MAAV,EAAkB,aAAlB,CAAd,EAAgD,IAAhD,CAAnP,EAA0Sb,eAAe,CAACgB,WAAD,EAAc,GAAGG,MAAH,CAAUN,MAAV,EAAkB,oBAAlB,CAAd,EAAuDI,MAAvD,CAAzT,EAAyXD,WAA3X,EAA/B;AACA,SAAON,KAAK,CAACU,aAAN,CAAoB,KAApB,EAA2B;AAChCC,IAAAA,SAAS,EAAEH;AADqB,GAA3B,EAEJR,KAAK,CAACU,aAAN,CAAoB,KAApB,EAA2B;AAC5BE,IAAAA,IAAI,EAAE,QADsB;AAE5BD,IAAAA,SAAS,EAAE,GAAGF,MAAH,CAAUN,MAAV,EAAkB,mBAAlB;AAFiB,GAA3B,EAGAH,KAAK,CAACU,aAAN,CAAoB,MAApB,EAA4B;AAC7BC,IAAAA,SAAS,EAAE,GAAGF,MAAH,CAAUN,MAAV,EAAkB,mBAAlB;AADkB,GAA5B,CAHA,CAFI,CAAP;AAQD,CAbD;;AAeAC,gBAAgB,CAACS,SAAjB,GAA6B;AAC3B;;;AAGAN,EAAAA,MAAM,EAAER,SAAS,CAACe;AAJS,CAA7B;AAMAV,gBAAgB,CAACW,YAAjB,GAAgC;AAC9BR,EAAAA,MAAM,EAAE;AADsB,CAAhC;AAGA,eAAeH,gBAAf","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { settings } from 'carbon-components';\nvar prefix = settings.prefix;\n\nvar DropdownSkeleton = function DropdownSkeleton(_ref) {\n  var _classNames;\n\n  var inline = _ref.inline;\n  var wrapperClasses = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--skeleton\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--dropdown-v2\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--list-box\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--form-item\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--list-box--inline\"), inline), _classNames));\n  return React.createElement(\"div\", {\n    className: wrapperClasses\n  }, React.createElement(\"div\", {\n    role: \"button\",\n    className: \"\".concat(prefix, \"--list-box__field\")\n  }, React.createElement(\"span\", {\n    className: \"\".concat(prefix, \"--list-box__label\")\n  })));\n};\n\nDropdownSkeleton.propTypes = {\n  /**\n   * Specify whether you want the inline version of this control\n   */\n  inline: PropTypes.bool\n};\nDropdownSkeleton.defaultProps = {\n  inline: false\n};\nexport default DropdownSkeleton;"]},"metadata":{},"sourceType":"module"}