{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Generic utility to compose event handlers so that consumers can supply their\n * own event listeners on table components. The default heuristic here is to\n * iterate through the given functions until `preventDefault` is called on the\n * given event.\n *\n * @param {Array<Function>} fns array of functions to apply to the event\n * @returns {Function}\n */\nexport var composeEventHandlers = function composeEventHandlers(fns) {\n  return function (event) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    for (var i = 0; i < fns.length; i++) {\n      if (event.defaultPrevented) {\n        break;\n      }\n\n      if (typeof fns[i] === 'function') {\n        fns[i].apply(fns, [event].concat(args));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["/Users/khadijaal-selini/call-for-code/policy-truth-frontend/node_modules/carbon-components-react/es/tools/events.js"],"names":["composeEventHandlers","fns","event","_len","arguments","length","args","Array","_key","i","defaultPrevented","apply","concat"],"mappings":"AAAA;;;;;;;AAOA;;;;;;;;;AASA,OAAO,IAAIA,oBAAoB,GAAG,SAASA,oBAAT,CAA8BC,GAA9B,EAAmC;AACnE,SAAO,UAAUC,KAAV,EAAiB;AACtB,SAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAG,IAAIC,KAAJ,CAAUJ,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAhC,CAApC,EAAwEK,IAAI,GAAG,CAApF,EAAuFA,IAAI,GAAGL,IAA9F,EAAoGK,IAAI,EAAxG,EAA4G;AAC1GF,MAAAA,IAAI,CAACE,IAAI,GAAG,CAAR,CAAJ,GAAiBJ,SAAS,CAACI,IAAD,CAA1B;AACD;;AAED,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,GAAG,CAACI,MAAxB,EAAgCI,CAAC,EAAjC,EAAqC;AACnC,UAAIP,KAAK,CAACQ,gBAAV,EAA4B;AAC1B;AACD;;AAED,UAAI,OAAOT,GAAG,CAACQ,CAAD,CAAV,KAAkB,UAAtB,EAAkC;AAChCR,QAAAA,GAAG,CAACQ,CAAD,CAAH,CAAOE,KAAP,CAAaV,GAAb,EAAkB,CAACC,KAAD,EAAQU,MAAR,CAAeN,IAAf,CAAlB;AACD;AACF;AACF,GAdD;AAeD,CAhBM","sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Generic utility to compose event handlers so that consumers can supply their\n * own event listeners on table components. The default heuristic here is to\n * iterate through the given functions until `preventDefault` is called on the\n * given event.\n *\n * @param {Array<Function>} fns array of functions to apply to the event\n * @returns {Function}\n */\nexport var composeEventHandlers = function composeEventHandlers(fns) {\n  return function (event) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    for (var i = 0; i < fns.length; i++) {\n      if (event.defaultPrevented) {\n        break;\n      }\n\n      if (typeof fns[i] === 'function') {\n        fns[i].apply(fns, [event].concat(args));\n      }\n    }\n  };\n};"]},"metadata":{},"sourceType":"module"}