{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport settings from '../../globals/js/settings';\nimport mixin from '../../globals/js/misc/mixin';\nimport createComponent from '../../globals/js/mixins/create-component';\nimport initComponentBySearch from '../../globals/js/mixins/init-component-by-search';\nimport handles from '../../globals/js/mixins/handles';\nimport on from '../../globals/js/misc/on';\nvar stateChangeTypes = {\n  true: 'true',\n  false: 'false',\n  mixed: 'mixed'\n};\n\nvar Checkbox = /*#__PURE__*/function (_mixin) {\n  _inherits(Checkbox, _mixin);\n  /**\n   * Checkbox UI.\n   * @extends CreateComponent\n   * @extends InitComponentBySearch\n   * @extends Handles\n   * @param {HTMLElement} element The element working as a checkbox UI.\n   */\n\n\n  function Checkbox(element, options) {\n    var _this;\n\n    _classCallCheck(this, Checkbox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Checkbox).call(this, element, options));\n\n    _this.manage(on(_this.element, 'click', function (event) {\n      _this._handleClick(event);\n    }));\n\n    _this.manage(on(_this.element, 'focus', function (event) {\n      _this._handleFocus(event);\n    }));\n\n    _this.manage(on(_this.element, 'blur', function (event) {\n      _this._handleBlur(event);\n    }));\n\n    _this._indeterminateCheckbox();\n\n    _this._initCheckbox();\n\n    return _this;\n  }\n\n  _createClass(Checkbox, [{\n    key: \"_handleClick\",\n    value: function _handleClick() {\n      if (this.element.checked === true) {\n        this.element.setAttribute('checked', '');\n        this.element.setAttribute('aria-checked', 'true');\n        this.element.checked = true; // nested checkboxes inside labels\n\n        if (this.element.parentElement.classList.contains(this.options.classLabel)) {\n          this.element.parentElement.setAttribute(this.options.attribContainedCheckboxState, 'true');\n        }\n      } else if (this.element.checked === false) {\n        this.element.removeAttribute('checked');\n        this.element.setAttribute('aria-checked', 'false');\n        this.element.checked = false; // nested checkboxes inside labels\n\n        if (this.element.parentElement.classList.contains(this.options.classLabel)) {\n          this.element.parentElement.setAttribute(this.options.attribContainedCheckboxState, 'false');\n        }\n      }\n    }\n  }, {\n    key: \"_handleFocus\",\n    value: function _handleFocus() {\n      if (this.element.parentElement.classList.contains(this.options.classLabel)) {\n        this.element.parentElement.classList.add(this.options.classLabelFocused);\n      }\n    }\n  }, {\n    key: \"_handleBlur\",\n    value: function _handleBlur() {\n      if (this.element.parentElement.classList.contains(this.options.classLabel)) {\n        this.element.parentElement.classList.remove(this.options.classLabelFocused);\n      }\n    }\n    /**\n     * Sets the new checkbox state.\n     * @param {boolean|string} [state]\n     *   The new checkbox state to set. `mixed` to put checkbox in indeterminate state.\n     *   If omitted, this method simply makes the style reflect `aria-checked` attribute.\n     */\n\n  }, {\n    key: \"setState\",\n    value: function setState(state) {\n      if (state === undefined || stateChangeTypes[state] === undefined) {\n        throw new TypeError('setState expects a value of true, false or mixed.');\n      }\n\n      this.element.setAttribute('aria-checked', state);\n      this.element.indeterminate = state === stateChangeTypes.mixed;\n      this.element.checked = state === stateChangeTypes.true;\n      var container = this.element.closest(this.options.selectorContainedCheckboxState);\n\n      if (container) {\n        container.setAttribute(this.options.attribContainedCheckboxState, state);\n      }\n    }\n  }, {\n    key: \"setDisabled\",\n    value: function setDisabled(value) {\n      if (value === undefined) {\n        throw new TypeError('setDisabled expects a boolean value of true or false');\n      }\n\n      if (value === true) {\n        this.element.setAttribute('disabled', true);\n      } else if (value === false) {\n        this.element.removeAttribute('disabled');\n      }\n\n      var container = this.element.closest(this.options.selectorContainedCheckboxDisabled);\n\n      if (container) {\n        container.setAttribute(this.options.attribContainedCheckboxDisabled, value);\n      }\n    }\n  }, {\n    key: \"_indeterminateCheckbox\",\n    value: function _indeterminateCheckbox() {\n      if (this.element.getAttribute('aria-checked') === 'mixed') {\n        this.element.indeterminate = true;\n      }\n\n      if (this.element.indeterminate === true) {\n        this.element.setAttribute('aria-checked', 'mixed');\n      }\n\n      if (this.element.parentElement.classList.contains(this.options.classLabel) && this.element.indeterminate === true) {\n        this.element.parentElement.setAttribute(this.options.attribContainedCheckboxState, 'mixed');\n      }\n    }\n  }, {\n    key: \"_initCheckbox\",\n    value: function _initCheckbox() {\n      if (this.element.checked === true) {\n        this.element.setAttribute('aria-checked', 'true');\n      }\n\n      if (this.element.parentElement.classList.contains(this.options.classLabel) && this.element.checked) {\n        this.element.parentElement.setAttribute(this.options.attribContainedCheckboxState, 'true');\n      }\n\n      if (this.element.parentElement.classList.contains(this.options.classLabel)) {\n        this.element.parentElement.setAttribute(this.options.attribContainedCheckboxDisabled, 'false');\n      }\n\n      if (this.element.parentElement.classList.contains(this.options.classLabel) && this.element.disabled) {\n        this.element.parentElement.setAttribute(this.options.attribContainedCheckboxDisabled, 'true');\n      }\n    }\n    /**\n     * The map associating DOM element and copy button UI instance.\n     * @member Checkbox.components\n     * @type {WeakMap}\n     */\n\n  }], [{\n    key: \"options\",\n\n    /**\n     * The component options.\n     * If `options` is specified in the constructor, {@linkcode Checkbox.create .create()}, or {@linkcode Checkbox.init .init()},\n     * properties in this object are overriden for the instance being create and how {@linkcode Checkbox.init .init()} works.\n     * @member Checkbox.options\n     * @type {Object}\n     * @property {string} selectorInit The data attribute to find copy button UIs.\n     * @property {string} selectorContainedCheckboxState The CSS selector to find a container of checkbox preserving checked state.\n     * @property {string} selectorContainedCheckboxDisabled\n     *   The CSS selector to find a container of checkbox preserving disabled state.\n     * @property {string} classLabel The CSS class for the label.\n     * @property {string} classLabelFocused The CSS class for the focused label.\n     * @property {string} attribContainedCheckboxState The attribute name for the checked state of contained checkbox.\n     * @property {string} attribContainedCheckboxDisabled The attribute name for the disabled state of contained checkbox.\n     */\n    get: function get() {\n      var prefix = settings.prefix;\n      return {\n        selectorInit: \".\".concat(prefix, \"--checkbox\"),\n        selectorContainedCheckboxState: '[data-contained-checkbox-state]',\n        selectorContainedCheckboxDisabled: '[data-contained-checkbox-disabled]',\n        classLabel: \"\".concat(prefix, \"--checkbox-label\"),\n        classLabelFocused: \"\".concat(prefix, \"--checkbox-label__focus\"),\n        attribContainedCheckboxState: 'data-contained-checkbox-state',\n        attribContainedCheckboxDisabled: 'data-contained-checkbox-disabled'\n      };\n    }\n  }]);\n\n  Checkbox.components = new WeakMap();\n  Checkbox.stateChangeTypes = stateChangeTypes;\n  return Checkbox;\n}(mixin(createComponent, initComponentBySearch, handles));\n\nexport default Checkbox;","map":{"version":3,"sources":["/Users/khadijaal-selini/call-for-code/policy-truth-frontend/node_modules/carbon-components/es/components/checkbox/checkbox.js"],"names":["_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_possibleConstructorReturn","self","call","_assertThisInitialized","ReferenceError","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_inherits","subClass","superClass","create","value","_setPrototypeOf","p","settings","mixin","createComponent","initComponentBySearch","handles","on","stateChangeTypes","true","false","mixed","Checkbox","_mixin","element","options","_this","manage","event","_handleClick","_handleFocus","_handleBlur","_indeterminateCheckbox","_initCheckbox","checked","setAttribute","parentElement","classList","contains","classLabel","attribContainedCheckboxState","removeAttribute","add","classLabelFocused","remove","setState","state","undefined","indeterminate","container","closest","selectorContainedCheckboxState","setDisabled","selectorContainedCheckboxDisabled","attribContainedCheckboxDisabled","getAttribute","disabled","get","prefix","selectorInit","concat","components","WeakMap"],"mappings":"AAAA,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AACpB,MAAI,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,MAAM,CAACC,QAAd,KAA2B,QAA/D,EAAyE;AACvEH,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAC9B,aAAO,OAAOA,GAAd;AACD,KAFD;AAGD,GAJD,MAIO;AACLD,IAAAA,OAAO,GAAG,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;AAC9B,aAAOA,GAAG,IAAI,OAAOC,MAAP,KAAkB,UAAzB,IAAuCD,GAAG,CAACG,WAAJ,KAAoBF,MAA3D,IAAqED,GAAG,KAAKC,MAAM,CAACG,SAApF,GAAgG,QAAhG,GAA2G,OAAOJ,GAAzH;AACD,KAFD;AAGD;;AAED,SAAOD,OAAO,CAACC,GAAD,CAAd;AACD;;AAED,SAASK,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAC9C,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AACtC,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AACD;AACF;;AAED,SAASC,iBAAT,CAA2BC,MAA3B,EAAmCC,KAAnC,EAA0C;AACxC,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,QAAIE,UAAU,GAAGH,KAAK,CAACC,CAAD,CAAtB;AACAE,IAAAA,UAAU,CAACC,UAAX,GAAwBD,UAAU,CAACC,UAAX,IAAyB,KAAjD;AACAD,IAAAA,UAAU,CAACE,YAAX,GAA0B,IAA1B;AACA,QAAI,WAAWF,UAAf,EAA2BA,UAAU,CAACG,QAAX,GAAsB,IAAtB;AAC3BC,IAAAA,MAAM,CAACC,cAAP,CAAsBT,MAAtB,EAA8BI,UAAU,CAACM,GAAzC,EAA8CN,UAA9C;AACD;AACF;;AAED,SAASO,YAAT,CAAsBd,WAAtB,EAAmCe,UAAnC,EAA+CC,WAA/C,EAA4D;AAC1D,MAAID,UAAJ,EAAgBb,iBAAiB,CAACF,WAAW,CAACH,SAAb,EAAwBkB,UAAxB,CAAjB;AAChB,MAAIC,WAAJ,EAAiBd,iBAAiB,CAACF,WAAD,EAAcgB,WAAd,CAAjB;AACjB,SAAOhB,WAAP;AACD;;AAED,SAASiB,0BAAT,CAAoCC,IAApC,EAA0CC,IAA1C,EAAgD;AAC9C,MAAIA,IAAI,KAAK3B,OAAO,CAAC2B,IAAD,CAAP,KAAkB,QAAlB,IAA8B,OAAOA,IAAP,KAAgB,UAAnD,CAAR,EAAwE;AACtE,WAAOA,IAAP;AACD;;AAED,SAAOC,sBAAsB,CAACF,IAAD,CAA7B;AACD;;AAED,SAASE,sBAAT,CAAgCF,IAAhC,EAAsC;AACpC,MAAIA,IAAI,KAAK,KAAK,CAAlB,EAAqB;AACnB,UAAM,IAAIG,cAAJ,CAAmB,2DAAnB,CAAN;AACD;;AAED,SAAOH,IAAP;AACD;;AAED,SAASI,eAAT,CAAyBC,CAAzB,EAA4B;AAC1BD,EAAAA,eAAe,GAAGX,MAAM,CAACa,cAAP,GAAwBb,MAAM,CAACc,cAA/B,GAAgD,SAASH,eAAT,CAAyBC,CAAzB,EAA4B;AAC5F,WAAOA,CAAC,CAACG,SAAF,IAAef,MAAM,CAACc,cAAP,CAAsBF,CAAtB,CAAtB;AACD,GAFD;AAGA,SAAOD,eAAe,CAACC,CAAD,CAAtB;AACD;;AAED,SAASI,SAAT,CAAmBC,QAAnB,EAA6BC,UAA7B,EAAyC;AACvC,MAAI,OAAOA,UAAP,KAAsB,UAAtB,IAAoCA,UAAU,KAAK,IAAvD,EAA6D;AAC3D,UAAM,IAAI5B,SAAJ,CAAc,oDAAd,CAAN;AACD;;AAED2B,EAAAA,QAAQ,CAAC/B,SAAT,GAAqBc,MAAM,CAACmB,MAAP,CAAcD,UAAU,IAAIA,UAAU,CAAChC,SAAvC,EAAkD;AACrED,IAAAA,WAAW,EAAE;AACXmC,MAAAA,KAAK,EAAEH,QADI;AAEXlB,MAAAA,QAAQ,EAAE,IAFC;AAGXD,MAAAA,YAAY,EAAE;AAHH;AADwD,GAAlD,CAArB;AAOA,MAAIoB,UAAJ,EAAgBG,eAAe,CAACJ,QAAD,EAAWC,UAAX,CAAf;AACjB;;AAED,SAASG,eAAT,CAAyBT,CAAzB,EAA4BU,CAA5B,EAA+B;AAC7BD,EAAAA,eAAe,GAAGrB,MAAM,CAACa,cAAP,IAAyB,SAASQ,eAAT,CAAyBT,CAAzB,EAA4BU,CAA5B,EAA+B;AACxEV,IAAAA,CAAC,CAACG,SAAF,GAAcO,CAAd;AACA,WAAOV,CAAP;AACD,GAHD;;AAKA,SAAOS,eAAe,CAACT,CAAD,EAAIU,CAAJ,CAAtB;AACD;AACD;;;;;;;;AAQA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAOC,eAAP,MAA4B,0CAA5B;AACA,OAAOC,qBAAP,MAAkC,kDAAlC;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,EAAP,MAAe,0BAAf;AACA,IAAIC,gBAAgB,GAAG;AACrBC,EAAAA,IAAI,EAAE,MADe;AAErBC,EAAAA,KAAK,EAAE,OAFc;AAGrBC,EAAAA,KAAK,EAAE;AAHc,CAAvB;;AAMA,IAAIC,QAAQ,GACZ,aACA,UAAUC,MAAV,EAAkB;AAChBlB,EAAAA,SAAS,CAACiB,QAAD,EAAWC,MAAX,CAAT;AACA;;;;;;;;;AASA,WAASD,QAAT,CAAkBE,OAAlB,EAA2BC,OAA3B,EAAoC;AAClC,QAAIC,KAAJ;;AAEAlD,IAAAA,eAAe,CAAC,IAAD,EAAO8C,QAAP,CAAf;;AAEAI,IAAAA,KAAK,GAAG/B,0BAA0B,CAAC,IAAD,EAAOK,eAAe,CAACsB,QAAD,CAAf,CAA0BzB,IAA1B,CAA+B,IAA/B,EAAqC2B,OAArC,EAA8CC,OAA9C,CAAP,CAAlC;;AAEAC,IAAAA,KAAK,CAACC,MAAN,CAAaV,EAAE,CAACS,KAAK,CAACF,OAAP,EAAgB,OAAhB,EAAyB,UAAUI,KAAV,EAAiB;AACvDF,MAAAA,KAAK,CAACG,YAAN,CAAmBD,KAAnB;AACD,KAFc,CAAf;;AAIAF,IAAAA,KAAK,CAACC,MAAN,CAAaV,EAAE,CAACS,KAAK,CAACF,OAAP,EAAgB,OAAhB,EAAyB,UAAUI,KAAV,EAAiB;AACvDF,MAAAA,KAAK,CAACI,YAAN,CAAmBF,KAAnB;AACD,KAFc,CAAf;;AAIAF,IAAAA,KAAK,CAACC,MAAN,CAAaV,EAAE,CAACS,KAAK,CAACF,OAAP,EAAgB,MAAhB,EAAwB,UAAUI,KAAV,EAAiB;AACtDF,MAAAA,KAAK,CAACK,WAAN,CAAkBH,KAAlB;AACD,KAFc,CAAf;;AAIAF,IAAAA,KAAK,CAACM,sBAAN;;AAEAN,IAAAA,KAAK,CAACO,aAAN;;AAEA,WAAOP,KAAP;AACD;;AAEDlC,EAAAA,YAAY,CAAC8B,QAAD,EAAW,CAAC;AACtB/B,IAAAA,GAAG,EAAE,cADiB;AAEtBkB,IAAAA,KAAK,EAAE,SAASoB,YAAT,GAAwB;AAC7B,UAAI,KAAKL,OAAL,CAAaU,OAAb,KAAyB,IAA7B,EAAmC;AACjC,aAAKV,OAAL,CAAaW,YAAb,CAA0B,SAA1B,EAAqC,EAArC;AACA,aAAKX,OAAL,CAAaW,YAAb,CAA0B,cAA1B,EAA0C,MAA1C;AACA,aAAKX,OAAL,CAAaU,OAAb,GAAuB,IAAvB,CAHiC,CAGJ;;AAE7B,YAAI,KAAKV,OAAL,CAAaY,aAAb,CAA2BC,SAA3B,CAAqCC,QAArC,CAA8C,KAAKb,OAAL,CAAac,UAA3D,CAAJ,EAA4E;AAC1E,eAAKf,OAAL,CAAaY,aAAb,CAA2BD,YAA3B,CAAwC,KAAKV,OAAL,CAAae,4BAArD,EAAmF,MAAnF;AACD;AACF,OARD,MAQO,IAAI,KAAKhB,OAAL,CAAaU,OAAb,KAAyB,KAA7B,EAAoC;AACzC,aAAKV,OAAL,CAAaiB,eAAb,CAA6B,SAA7B;AACA,aAAKjB,OAAL,CAAaW,YAAb,CAA0B,cAA1B,EAA0C,OAA1C;AACA,aAAKX,OAAL,CAAaU,OAAb,GAAuB,KAAvB,CAHyC,CAGX;;AAE9B,YAAI,KAAKV,OAAL,CAAaY,aAAb,CAA2BC,SAA3B,CAAqCC,QAArC,CAA8C,KAAKb,OAAL,CAAac,UAA3D,CAAJ,EAA4E;AAC1E,eAAKf,OAAL,CAAaY,aAAb,CAA2BD,YAA3B,CAAwC,KAAKV,OAAL,CAAae,4BAArD,EAAmF,OAAnF;AACD;AACF;AACF;AApBqB,GAAD,EAqBpB;AACDjD,IAAAA,GAAG,EAAE,cADJ;AAEDkB,IAAAA,KAAK,EAAE,SAASqB,YAAT,GAAwB;AAC7B,UAAI,KAAKN,OAAL,CAAaY,aAAb,CAA2BC,SAA3B,CAAqCC,QAArC,CAA8C,KAAKb,OAAL,CAAac,UAA3D,CAAJ,EAA4E;AAC1E,aAAKf,OAAL,CAAaY,aAAb,CAA2BC,SAA3B,CAAqCK,GAArC,CAAyC,KAAKjB,OAAL,CAAakB,iBAAtD;AACD;AACF;AANA,GArBoB,EA4BpB;AACDpD,IAAAA,GAAG,EAAE,aADJ;AAEDkB,IAAAA,KAAK,EAAE,SAASsB,WAAT,GAAuB;AAC5B,UAAI,KAAKP,OAAL,CAAaY,aAAb,CAA2BC,SAA3B,CAAqCC,QAArC,CAA8C,KAAKb,OAAL,CAAac,UAA3D,CAAJ,EAA4E;AAC1E,aAAKf,OAAL,CAAaY,aAAb,CAA2BC,SAA3B,CAAqCO,MAArC,CAA4C,KAAKnB,OAAL,CAAakB,iBAAzD;AACD;AACF;AACD;;;;;;;AAPC,GA5BoB,EA0CpB;AACDpD,IAAAA,GAAG,EAAE,UADJ;AAEDkB,IAAAA,KAAK,EAAE,SAASoC,QAAT,CAAkBC,KAAlB,EAAyB;AAC9B,UAAIA,KAAK,KAAKC,SAAV,IAAuB7B,gBAAgB,CAAC4B,KAAD,CAAhB,KAA4BC,SAAvD,EAAkE;AAChE,cAAM,IAAIpE,SAAJ,CAAc,mDAAd,CAAN;AACD;;AAED,WAAK6C,OAAL,CAAaW,YAAb,CAA0B,cAA1B,EAA0CW,KAA1C;AACA,WAAKtB,OAAL,CAAawB,aAAb,GAA6BF,KAAK,KAAK5B,gBAAgB,CAACG,KAAxD;AACA,WAAKG,OAAL,CAAaU,OAAb,GAAuBY,KAAK,KAAK5B,gBAAgB,CAACC,IAAlD;AACA,UAAI8B,SAAS,GAAG,KAAKzB,OAAL,CAAa0B,OAAb,CAAqB,KAAKzB,OAAL,CAAa0B,8BAAlC,CAAhB;;AAEA,UAAIF,SAAJ,EAAe;AACbA,QAAAA,SAAS,CAACd,YAAV,CAAuB,KAAKV,OAAL,CAAae,4BAApC,EAAkEM,KAAlE;AACD;AACF;AAfA,GA1CoB,EA0DpB;AACDvD,IAAAA,GAAG,EAAE,aADJ;AAEDkB,IAAAA,KAAK,EAAE,SAAS2C,WAAT,CAAqB3C,KAArB,EAA4B;AACjC,UAAIA,KAAK,KAAKsC,SAAd,EAAyB;AACvB,cAAM,IAAIpE,SAAJ,CAAc,sDAAd,CAAN;AACD;;AAED,UAAI8B,KAAK,KAAK,IAAd,EAAoB;AAClB,aAAKe,OAAL,CAAaW,YAAb,CAA0B,UAA1B,EAAsC,IAAtC;AACD,OAFD,MAEO,IAAI1B,KAAK,KAAK,KAAd,EAAqB;AAC1B,aAAKe,OAAL,CAAaiB,eAAb,CAA6B,UAA7B;AACD;;AAED,UAAIQ,SAAS,GAAG,KAAKzB,OAAL,CAAa0B,OAAb,CAAqB,KAAKzB,OAAL,CAAa4B,iCAAlC,CAAhB;;AAEA,UAAIJ,SAAJ,EAAe;AACbA,QAAAA,SAAS,CAACd,YAAV,CAAuB,KAAKV,OAAL,CAAa6B,+BAApC,EAAqE7C,KAArE;AACD;AACF;AAlBA,GA1DoB,EA6EpB;AACDlB,IAAAA,GAAG,EAAE,wBADJ;AAEDkB,IAAAA,KAAK,EAAE,SAASuB,sBAAT,GAAkC;AACvC,UAAI,KAAKR,OAAL,CAAa+B,YAAb,CAA0B,cAA1B,MAA8C,OAAlD,EAA2D;AACzD,aAAK/B,OAAL,CAAawB,aAAb,GAA6B,IAA7B;AACD;;AAED,UAAI,KAAKxB,OAAL,CAAawB,aAAb,KAA+B,IAAnC,EAAyC;AACvC,aAAKxB,OAAL,CAAaW,YAAb,CAA0B,cAA1B,EAA0C,OAA1C;AACD;;AAED,UAAI,KAAKX,OAAL,CAAaY,aAAb,CAA2BC,SAA3B,CAAqCC,QAArC,CAA8C,KAAKb,OAAL,CAAac,UAA3D,KAA0E,KAAKf,OAAL,CAAawB,aAAb,KAA+B,IAA7G,EAAmH;AACjH,aAAKxB,OAAL,CAAaY,aAAb,CAA2BD,YAA3B,CAAwC,KAAKV,OAAL,CAAae,4BAArD,EAAmF,OAAnF;AACD;AACF;AAdA,GA7EoB,EA4FpB;AACDjD,IAAAA,GAAG,EAAE,eADJ;AAEDkB,IAAAA,KAAK,EAAE,SAASwB,aAAT,GAAyB;AAC9B,UAAI,KAAKT,OAAL,CAAaU,OAAb,KAAyB,IAA7B,EAAmC;AACjC,aAAKV,OAAL,CAAaW,YAAb,CAA0B,cAA1B,EAA0C,MAA1C;AACD;;AAED,UAAI,KAAKX,OAAL,CAAaY,aAAb,CAA2BC,SAA3B,CAAqCC,QAArC,CAA8C,KAAKb,OAAL,CAAac,UAA3D,KAA0E,KAAKf,OAAL,CAAaU,OAA3F,EAAoG;AAClG,aAAKV,OAAL,CAAaY,aAAb,CAA2BD,YAA3B,CAAwC,KAAKV,OAAL,CAAae,4BAArD,EAAmF,MAAnF;AACD;;AAED,UAAI,KAAKhB,OAAL,CAAaY,aAAb,CAA2BC,SAA3B,CAAqCC,QAArC,CAA8C,KAAKb,OAAL,CAAac,UAA3D,CAAJ,EAA4E;AAC1E,aAAKf,OAAL,CAAaY,aAAb,CAA2BD,YAA3B,CAAwC,KAAKV,OAAL,CAAa6B,+BAArD,EAAsF,OAAtF;AACD;;AAED,UAAI,KAAK9B,OAAL,CAAaY,aAAb,CAA2BC,SAA3B,CAAqCC,QAArC,CAA8C,KAAKb,OAAL,CAAac,UAA3D,KAA0E,KAAKf,OAAL,CAAagC,QAA3F,EAAqG;AACnG,aAAKhC,OAAL,CAAaY,aAAb,CAA2BD,YAA3B,CAAwC,KAAKV,OAAL,CAAa6B,+BAArD,EAAsF,MAAtF;AACD;AACF;AACD;;;;;;AAnBC,GA5FoB,CAAX,EAqHR,CAAC;AACH/D,IAAAA,GAAG,EAAE,SADF;;AAGH;;;;;;;;;;;;;;;AAeAkE,IAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,UAAIC,MAAM,GAAG9C,QAAQ,CAAC8C,MAAtB;AACA,aAAO;AACLC,QAAAA,YAAY,EAAE,IAAIC,MAAJ,CAAWF,MAAX,EAAmB,YAAnB,CADT;AAELP,QAAAA,8BAA8B,EAAE,iCAF3B;AAGLE,QAAAA,iCAAiC,EAAE,oCAH9B;AAILd,QAAAA,UAAU,EAAE,GAAGqB,MAAH,CAAUF,MAAV,EAAkB,kBAAlB,CAJP;AAKLf,QAAAA,iBAAiB,EAAE,GAAGiB,MAAH,CAAUF,MAAV,EAAkB,yBAAlB,CALd;AAMLlB,QAAAA,4BAA4B,EAAE,+BANzB;AAOLc,QAAAA,+BAA+B,EAAE;AAP5B,OAAP;AASD;AA7BE,GAAD,CArHQ,CAAZ;;AAqJAhC,EAAAA,QAAQ,CAACuC,UAAT,GAAsB,IAAIC,OAAJ,EAAtB;AACAxC,EAAAA,QAAQ,CAACJ,gBAAT,GAA4BA,gBAA5B;AACA,SAAOI,QAAP;AACD,CA7LD,CA6LET,KAAK,CAACC,eAAD,EAAkBC,qBAAlB,EAAyCC,OAAzC,CA7LP,CAFA;;AAiMA,eAAeM,QAAf","sourcesContent":["function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport settings from '../../globals/js/settings';\nimport mixin from '../../globals/js/misc/mixin';\nimport createComponent from '../../globals/js/mixins/create-component';\nimport initComponentBySearch from '../../globals/js/mixins/init-component-by-search';\nimport handles from '../../globals/js/mixins/handles';\nimport on from '../../globals/js/misc/on';\nvar stateChangeTypes = {\n  true: 'true',\n  false: 'false',\n  mixed: 'mixed'\n};\n\nvar Checkbox =\n/*#__PURE__*/\nfunction (_mixin) {\n  _inherits(Checkbox, _mixin);\n  /**\n   * Checkbox UI.\n   * @extends CreateComponent\n   * @extends InitComponentBySearch\n   * @extends Handles\n   * @param {HTMLElement} element The element working as a checkbox UI.\n   */\n\n\n  function Checkbox(element, options) {\n    var _this;\n\n    _classCallCheck(this, Checkbox);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Checkbox).call(this, element, options));\n\n    _this.manage(on(_this.element, 'click', function (event) {\n      _this._handleClick(event);\n    }));\n\n    _this.manage(on(_this.element, 'focus', function (event) {\n      _this._handleFocus(event);\n    }));\n\n    _this.manage(on(_this.element, 'blur', function (event) {\n      _this._handleBlur(event);\n    }));\n\n    _this._indeterminateCheckbox();\n\n    _this._initCheckbox();\n\n    return _this;\n  }\n\n  _createClass(Checkbox, [{\n    key: \"_handleClick\",\n    value: function _handleClick() {\n      if (this.element.checked === true) {\n        this.element.setAttribute('checked', '');\n        this.element.setAttribute('aria-checked', 'true');\n        this.element.checked = true; // nested checkboxes inside labels\n\n        if (this.element.parentElement.classList.contains(this.options.classLabel)) {\n          this.element.parentElement.setAttribute(this.options.attribContainedCheckboxState, 'true');\n        }\n      } else if (this.element.checked === false) {\n        this.element.removeAttribute('checked');\n        this.element.setAttribute('aria-checked', 'false');\n        this.element.checked = false; // nested checkboxes inside labels\n\n        if (this.element.parentElement.classList.contains(this.options.classLabel)) {\n          this.element.parentElement.setAttribute(this.options.attribContainedCheckboxState, 'false');\n        }\n      }\n    }\n  }, {\n    key: \"_handleFocus\",\n    value: function _handleFocus() {\n      if (this.element.parentElement.classList.contains(this.options.classLabel)) {\n        this.element.parentElement.classList.add(this.options.classLabelFocused);\n      }\n    }\n  }, {\n    key: \"_handleBlur\",\n    value: function _handleBlur() {\n      if (this.element.parentElement.classList.contains(this.options.classLabel)) {\n        this.element.parentElement.classList.remove(this.options.classLabelFocused);\n      }\n    }\n    /**\n     * Sets the new checkbox state.\n     * @param {boolean|string} [state]\n     *   The new checkbox state to set. `mixed` to put checkbox in indeterminate state.\n     *   If omitted, this method simply makes the style reflect `aria-checked` attribute.\n     */\n\n  }, {\n    key: \"setState\",\n    value: function setState(state) {\n      if (state === undefined || stateChangeTypes[state] === undefined) {\n        throw new TypeError('setState expects a value of true, false or mixed.');\n      }\n\n      this.element.setAttribute('aria-checked', state);\n      this.element.indeterminate = state === stateChangeTypes.mixed;\n      this.element.checked = state === stateChangeTypes.true;\n      var container = this.element.closest(this.options.selectorContainedCheckboxState);\n\n      if (container) {\n        container.setAttribute(this.options.attribContainedCheckboxState, state);\n      }\n    }\n  }, {\n    key: \"setDisabled\",\n    value: function setDisabled(value) {\n      if (value === undefined) {\n        throw new TypeError('setDisabled expects a boolean value of true or false');\n      }\n\n      if (value === true) {\n        this.element.setAttribute('disabled', true);\n      } else if (value === false) {\n        this.element.removeAttribute('disabled');\n      }\n\n      var container = this.element.closest(this.options.selectorContainedCheckboxDisabled);\n\n      if (container) {\n        container.setAttribute(this.options.attribContainedCheckboxDisabled, value);\n      }\n    }\n  }, {\n    key: \"_indeterminateCheckbox\",\n    value: function _indeterminateCheckbox() {\n      if (this.element.getAttribute('aria-checked') === 'mixed') {\n        this.element.indeterminate = true;\n      }\n\n      if (this.element.indeterminate === true) {\n        this.element.setAttribute('aria-checked', 'mixed');\n      }\n\n      if (this.element.parentElement.classList.contains(this.options.classLabel) && this.element.indeterminate === true) {\n        this.element.parentElement.setAttribute(this.options.attribContainedCheckboxState, 'mixed');\n      }\n    }\n  }, {\n    key: \"_initCheckbox\",\n    value: function _initCheckbox() {\n      if (this.element.checked === true) {\n        this.element.setAttribute('aria-checked', 'true');\n      }\n\n      if (this.element.parentElement.classList.contains(this.options.classLabel) && this.element.checked) {\n        this.element.parentElement.setAttribute(this.options.attribContainedCheckboxState, 'true');\n      }\n\n      if (this.element.parentElement.classList.contains(this.options.classLabel)) {\n        this.element.parentElement.setAttribute(this.options.attribContainedCheckboxDisabled, 'false');\n      }\n\n      if (this.element.parentElement.classList.contains(this.options.classLabel) && this.element.disabled) {\n        this.element.parentElement.setAttribute(this.options.attribContainedCheckboxDisabled, 'true');\n      }\n    }\n    /**\n     * The map associating DOM element and copy button UI instance.\n     * @member Checkbox.components\n     * @type {WeakMap}\n     */\n\n  }], [{\n    key: \"options\",\n\n    /**\n     * The component options.\n     * If `options` is specified in the constructor, {@linkcode Checkbox.create .create()}, or {@linkcode Checkbox.init .init()},\n     * properties in this object are overriden for the instance being create and how {@linkcode Checkbox.init .init()} works.\n     * @member Checkbox.options\n     * @type {Object}\n     * @property {string} selectorInit The data attribute to find copy button UIs.\n     * @property {string} selectorContainedCheckboxState The CSS selector to find a container of checkbox preserving checked state.\n     * @property {string} selectorContainedCheckboxDisabled\n     *   The CSS selector to find a container of checkbox preserving disabled state.\n     * @property {string} classLabel The CSS class for the label.\n     * @property {string} classLabelFocused The CSS class for the focused label.\n     * @property {string} attribContainedCheckboxState The attribute name for the checked state of contained checkbox.\n     * @property {string} attribContainedCheckboxDisabled The attribute name for the disabled state of contained checkbox.\n     */\n    get: function get() {\n      var prefix = settings.prefix;\n      return {\n        selectorInit: \".\".concat(prefix, \"--checkbox\"),\n        selectorContainedCheckboxState: '[data-contained-checkbox-state]',\n        selectorContainedCheckboxDisabled: '[data-contained-checkbox-disabled]',\n        classLabel: \"\".concat(prefix, \"--checkbox-label\"),\n        classLabelFocused: \"\".concat(prefix, \"--checkbox-label__focus\"),\n        attribContainedCheckboxState: 'data-contained-checkbox-state',\n        attribContainedCheckboxDisabled: 'data-contained-checkbox-disabled'\n      };\n    }\n  }]);\n\n  Checkbox.components = new WeakMap();\n  Checkbox.stateChangeTypes = stateChangeTypes;\n  return Checkbox;\n}(mixin(createComponent, initComponentBySearch, handles));\n\nexport default Checkbox;"]},"metadata":{},"sourceType":"module"}