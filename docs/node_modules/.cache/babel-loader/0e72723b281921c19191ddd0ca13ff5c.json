{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// mdn resize function\nimport window from 'window-or-global';\n\nvar OptimizedResize = function optimizedResize() {\n  var callbacks = [];\n  var running = false; // run the actual callbacks\n\n  function runCallbacks() {\n    callbacks.forEach(function (callback) {\n      callback();\n    });\n    running = false;\n  } // fired on resize event\n\n\n  function resize() {\n    if (!running) {\n      running = true;\n      window.requestAnimationFrame(runCallbacks);\n    }\n  } // adds callback to loop\n\n\n  function addCallback(callback) {\n    if (callback) {\n      var index = callbacks.indexOf(callback);\n\n      if (index < 0) {\n        callbacks.push(callback);\n      }\n    }\n  }\n\n  return {\n    // public method to add additional callback\n    add: function add(callback) {\n      if (!callbacks.length) {\n        window.addEventListener('resize', resize);\n      }\n\n      addCallback(callback);\n      return {\n        release: function release() {\n          var index = callbacks.indexOf(callback);\n\n          if (index >= 0) {\n            callbacks.splice(index, 1);\n          }\n        }\n      };\n    }\n  };\n}();\n\nexport default OptimizedResize;","map":{"version":3,"sources":["/Users/khadijaal-selini/call-for-code/policy-truth-frontend/node_modules/carbon-components-react/es/internal/OptimizedResize.js"],"names":["window","OptimizedResize","optimizedResize","callbacks","running","runCallbacks","forEach","callback","resize","requestAnimationFrame","addCallback","index","indexOf","push","add","length","addEventListener","release","splice"],"mappings":"AAAA;;;;;;AAMA;AACA,OAAOA,MAAP,MAAmB,kBAAnB;;AAEA,IAAIC,eAAe,GAAG,SAASC,eAAT,GAA2B;AAC/C,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,OAAO,GAAG,KAAd,CAF+C,CAE1B;;AAErB,WAASC,YAAT,GAAwB;AACtBF,IAAAA,SAAS,CAACG,OAAV,CAAkB,UAAUC,QAAV,EAAoB;AACpCA,MAAAA,QAAQ;AACT,KAFD;AAGAH,IAAAA,OAAO,GAAG,KAAV;AACD,GAT8C,CAS7C;;;AAGF,WAASI,MAAT,GAAkB;AAChB,QAAI,CAACJ,OAAL,EAAc;AACZA,MAAAA,OAAO,GAAG,IAAV;AACAJ,MAAAA,MAAM,CAACS,qBAAP,CAA6BJ,YAA7B;AACD;AACF,GAjB8C,CAiB7C;;;AAGF,WAASK,WAAT,CAAqBH,QAArB,EAA+B;AAC7B,QAAIA,QAAJ,EAAc;AACZ,UAAII,KAAK,GAAGR,SAAS,CAACS,OAAV,CAAkBL,QAAlB,CAAZ;;AAEA,UAAII,KAAK,GAAG,CAAZ,EAAe;AACbR,QAAAA,SAAS,CAACU,IAAV,CAAeN,QAAf;AACD;AACF;AACF;;AAED,SAAO;AACL;AACAO,IAAAA,GAAG,EAAE,SAASA,GAAT,CAAaP,QAAb,EAAuB;AAC1B,UAAI,CAACJ,SAAS,CAACY,MAAf,EAAuB;AACrBf,QAAAA,MAAM,CAACgB,gBAAP,CAAwB,QAAxB,EAAkCR,MAAlC;AACD;;AAEDE,MAAAA,WAAW,CAACH,QAAD,CAAX;AACA,aAAO;AACLU,QAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB;AAC1B,cAAIN,KAAK,GAAGR,SAAS,CAACS,OAAV,CAAkBL,QAAlB,CAAZ;;AAEA,cAAII,KAAK,IAAI,CAAb,EAAgB;AACdR,YAAAA,SAAS,CAACe,MAAV,CAAiBP,KAAjB,EAAwB,CAAxB;AACD;AACF;AAPI,OAAP;AASD;AAjBI,GAAP;AAmBD,CAjDqB,EAAtB;;AAmDA,eAAeV,eAAf","sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// mdn resize function\nimport window from 'window-or-global';\n\nvar OptimizedResize = function optimizedResize() {\n  var callbacks = [];\n  var running = false; // run the actual callbacks\n\n  function runCallbacks() {\n    callbacks.forEach(function (callback) {\n      callback();\n    });\n    running = false;\n  } // fired on resize event\n\n\n  function resize() {\n    if (!running) {\n      running = true;\n      window.requestAnimationFrame(runCallbacks);\n    }\n  } // adds callback to loop\n\n\n  function addCallback(callback) {\n    if (callback) {\n      var index = callbacks.indexOf(callback);\n\n      if (index < 0) {\n        callbacks.push(callback);\n      }\n    }\n  }\n\n  return {\n    // public method to add additional callback\n    add: function add(callback) {\n      if (!callbacks.length) {\n        window.addEventListener('resize', resize);\n      }\n\n      addCallback(callback);\n      return {\n        release: function release() {\n          var index = callbacks.indexOf(callback);\n\n          if (index >= 0) {\n            callbacks.splice(index, 1);\n          }\n        }\n      };\n    }\n  };\n}();\n\nexport default OptimizedResize;"]},"metadata":{},"sourceType":"module"}