{"ast":null,"code":"function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * @param {Array} a An array.\n * @returns {Array} The flattened version of the given array.\n */\n\n\nfunction flatten(a) {\n  return a.reduce(function (result, item) {\n    if (Array.isArray(item)) {\n      result.push.apply(result, _toConsumableArray(flatten(item)));\n    } else {\n      result.push(item);\n    }\n\n    return result;\n  }, []);\n}\n/**\n * An interface for defining mix-in classes. Used with {@link mixin}.\n * @function mixinfn\n * @param {Class} ToMix The class to mix.\n * @returns {Class} The class mixed-in with the given ToMix class.\n */\n\n/**\n * @function mixin\n * @param {...mixinfn} mixinfns The functions generating mix-ins.\n * @returns {Class} The class generated with the given mix-ins.\n */\n\n\nexport default function mixin() {\n  for (var _len = arguments.length, mixinfns = new Array(_len), _key = 0; _key < _len; _key++) {\n    mixinfns[_key] = arguments[_key];\n  }\n\n  return flatten(mixinfns).reduce(function (Class, mixinfn) {\n    return mixinfn(Class);\n  }, /*#__PURE__*/function () {\n    function _class() {\n      _classCallCheck(this, _class);\n    }\n\n    return _class;\n  }());\n}","map":{"version":3,"sources":["/Users/khadijaal-selini/call-for-code/policy-truth-frontend/node_modules/carbon-components/es/globals/js/misc/mixin.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","iter","Symbol","iterator","Object","prototype","toString","call","Array","from","isArray","i","arr2","length","flatten","a","reduce","result","item","push","apply","mixin","_len","arguments","mixinfns","_key","Class","mixinfn","_class"],"mappings":"AAAA,SAASA,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAC9C,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AACtC,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AACD;AACF;;AAED,SAASC,kBAAT,CAA4BC,GAA5B,EAAiC;AAC/B,SAAOC,kBAAkB,CAACD,GAAD,CAAlB,IAA2BE,gBAAgB,CAACF,GAAD,CAA3C,IAAoDG,kBAAkB,EAA7E;AACD;;AAED,SAASA,kBAAT,GAA8B;AAC5B,QAAM,IAAIL,SAAJ,CAAc,iDAAd,CAAN;AACD;;AAED,SAASI,gBAAT,CAA0BE,IAA1B,EAAgC;AAC9B,MAAIC,MAAM,CAACC,QAAP,IAAmBC,MAAM,CAACH,IAAD,CAAzB,IAAmCG,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BN,IAA/B,MAAyC,oBAAhF,EAAsG,OAAOO,KAAK,CAACC,IAAN,CAAWR,IAAX,CAAP;AACvG;;AAED,SAASH,kBAAT,CAA4BD,GAA5B,EAAiC;AAC/B,MAAIW,KAAK,CAACE,OAAN,CAAcb,GAAd,CAAJ,EAAwB;AACtB,SAAK,IAAIc,CAAC,GAAG,CAAR,EAAWC,IAAI,GAAG,IAAIJ,KAAJ,CAAUX,GAAG,CAACgB,MAAd,CAAvB,EAA8CF,CAAC,GAAGd,GAAG,CAACgB,MAAtD,EAA8DF,CAAC,EAA/D,EAAmE;AACjEC,MAAAA,IAAI,CAACD,CAAD,CAAJ,GAAUd,GAAG,CAACc,CAAD,CAAb;AACD;;AAED,WAAOC,IAAP;AACD;AACF;AACD;;;;;;;AAOA;;;;;;AAMA,SAASE,OAAT,CAAiBC,CAAjB,EAAoB;AAClB,SAAOA,CAAC,CAACC,MAAF,CAAS,UAAUC,MAAV,EAAkBC,IAAlB,EAAwB;AACtC,QAAIV,KAAK,CAACE,OAAN,CAAcQ,IAAd,CAAJ,EAAyB;AACvBD,MAAAA,MAAM,CAACE,IAAP,CAAYC,KAAZ,CAAkBH,MAAlB,EAA0BrB,kBAAkB,CAACkB,OAAO,CAACI,IAAD,CAAR,CAA5C;AACD,KAFD,MAEO;AACLD,MAAAA,MAAM,CAACE,IAAP,CAAYD,IAAZ;AACD;;AAED,WAAOD,MAAP;AACD,GARM,EAQJ,EARI,CAAP;AASD;AACD;;;;;;;AAOA;;;;;;;AAOA,eAAe,SAASI,KAAT,GAAiB;AAC9B,OAAK,IAAIC,IAAI,GAAGC,SAAS,CAACV,MAArB,EAA6BW,QAAQ,GAAG,IAAIhB,KAAJ,CAAUc,IAAV,CAAxC,EAAyDG,IAAI,GAAG,CAArE,EAAwEA,IAAI,GAAGH,IAA/E,EAAqFG,IAAI,EAAzF,EAA6F;AAC3FD,IAAAA,QAAQ,CAACC,IAAD,CAAR,GAAiBF,SAAS,CAACE,IAAD,CAA1B;AACD;;AAED,SAAOX,OAAO,CAACU,QAAD,CAAP,CAAkBR,MAAlB,CAAyB,UAAUU,KAAV,EAAiBC,OAAjB,EAA0B;AACxD,WAAOA,OAAO,CAACD,KAAD,CAAd;AACD,GAFM,EAGP,aACA,YAAY;AACV,aAASE,MAAT,GAAkB;AAChBpC,MAAAA,eAAe,CAAC,IAAD,EAAOoC,MAAP,CAAf;AACD;;AAED,WAAOA,MAAP;AACD,GAND,EAJO,CAAP;AAWD","sourcesContent":["function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * @param {Array} a An array.\n * @returns {Array} The flattened version of the given array.\n */\n\n\nfunction flatten(a) {\n  return a.reduce(function (result, item) {\n    if (Array.isArray(item)) {\n      result.push.apply(result, _toConsumableArray(flatten(item)));\n    } else {\n      result.push(item);\n    }\n\n    return result;\n  }, []);\n}\n/**\n * An interface for defining mix-in classes. Used with {@link mixin}.\n * @function mixinfn\n * @param {Class} ToMix The class to mix.\n * @returns {Class} The class mixed-in with the given ToMix class.\n */\n\n/**\n * @function mixin\n * @param {...mixinfn} mixinfns The functions generating mix-ins.\n * @returns {Class} The class generated with the given mix-ins.\n */\n\n\nexport default function mixin() {\n  for (var _len = arguments.length, mixinfns = new Array(_len), _key = 0; _key < _len; _key++) {\n    mixinfns[_key] = arguments[_key];\n  }\n\n  return flatten(mixinfns).reduce(function (Class, mixinfn) {\n    return mixinfn(Class);\n  },\n  /*#__PURE__*/\n  function () {\n    function _class() {\n      _classCallCheck(this, _class);\n    }\n\n    return _class;\n  }());\n}"]},"metadata":{},"sourceType":"module"}