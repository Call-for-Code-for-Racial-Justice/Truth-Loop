{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { settings } from 'carbon-components';\nvar prefix = settings.prefix;\nvar randoms = [0.973051493507435, 0.15334737213558558, 0.5671034553053769];\n\nfunction getRandomInt(min, max, n) {\n  return Math.floor(randoms[n % 3] * (max - min + 1)) + min;\n}\n\nvar SkeletonText = function SkeletonText(_ref) {\n  var _classNames;\n\n  var paragraph = _ref.paragraph,\n      lineCount = _ref.lineCount,\n      width = _ref.width,\n      heading = _ref.heading,\n      className = _ref.className,\n      other = _objectWithoutProperties(_ref, [\"paragraph\", \"lineCount\", \"width\", \"heading\", \"className\"]);\n\n  var skeletonTextClasses = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--skeleton__text\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--skeleton__heading\"), heading), _defineProperty(_classNames, className, className), _classNames));\n  var widthNum = parseInt(width, 10);\n  var widthPx = width.includes('px');\n  var widthPercent = width.includes('%');\n\n  if (widthPercent && paragraph) {\n    var lines = [];\n\n    for (var i = 0; i < lineCount; i++) {\n      var randomWidth = getRandomInt(0, 75, i) + 'px';\n      lines.push(React.createElement(\"p\", _extends({\n        className: skeletonTextClasses,\n        style: {\n          width: \"calc(\".concat(width, \" - \").concat(randomWidth, \")\")\n        },\n        key: i\n      }, other)));\n    }\n\n    return React.createElement(\"div\", null, lines);\n  }\n\n  if (widthPx && paragraph) {\n    var _lines = [];\n\n    for (var j = 0; j < lineCount; j++) {\n      var _randomWidth = getRandomInt(widthNum - 75, widthNum, j) + 'px';\n\n      _lines.push(React.createElement(\"p\", _extends({\n        className: skeletonTextClasses,\n        style: {\n          width: _randomWidth\n        },\n        key: j\n      }, other)));\n    }\n\n    return React.createElement(\"div\", null, _lines);\n  }\n\n  return React.createElement(\"p\", _extends({\n    className: skeletonTextClasses,\n    style: {\n      width: width\n    }\n  }, other));\n};\n\nSkeletonText.propTypes = {\n  /**\n   * will generate multiple lines of text\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * the number of lines in a paragraph\n   */\n  lineCount: PropTypes.number,\n\n  /**\n   * width (in px or %) of single line of text or max-width of paragraph lines\n   */\n  width: PropTypes.string,\n\n  /**\n   * generates skeleton text at a larger size\n   */\n  heading: PropTypes.bool,\n\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string\n};\nSkeletonText.defaultProps = {\n  paragraph: false,\n  width: '100%',\n  heading: false,\n  lineCount: 3\n};\nexport default SkeletonText;","map":{"version":3,"sources":["/Users/khadijaal-selini/call-for-code/policy-truth-frontend/node_modules/carbon-components-react/es/components/SkeletonText/SkeletonText.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","PropTypes","React","classNames","settings","prefix","randoms","getRandomInt","min","max","n","Math","floor","SkeletonText","_ref","_classNames","paragraph","lineCount","width","heading","className","other","skeletonTextClasses","concat","widthNum","parseInt","widthPx","includes","widthPercent","lines","randomWidth","push","createElement","style","_lines","j","_randomWidth","propTypes","bool","number","string","defaultProps"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { settings } from 'carbon-components';\nvar prefix = settings.prefix;\nvar randoms = [0.973051493507435, 0.15334737213558558, 0.5671034553053769];\n\nfunction getRandomInt(min, max, n) {\n  return Math.floor(randoms[n % 3] * (max - min + 1)) + min;\n}\n\nvar SkeletonText = function SkeletonText(_ref) {\n  var _classNames;\n\n  var paragraph = _ref.paragraph,\n      lineCount = _ref.lineCount,\n      width = _ref.width,\n      heading = _ref.heading,\n      className = _ref.className,\n      other = _objectWithoutProperties(_ref, [\"paragraph\", \"lineCount\", \"width\", \"heading\", \"className\"]);\n\n  var skeletonTextClasses = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--skeleton__text\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--skeleton__heading\"), heading), _defineProperty(_classNames, className, className), _classNames));\n  var widthNum = parseInt(width, 10);\n  var widthPx = width.includes('px');\n  var widthPercent = width.includes('%');\n\n  if (widthPercent && paragraph) {\n    var lines = [];\n\n    for (var i = 0; i < lineCount; i++) {\n      var randomWidth = getRandomInt(0, 75, i) + 'px';\n      lines.push(React.createElement(\"p\", _extends({\n        className: skeletonTextClasses,\n        style: {\n          width: \"calc(\".concat(width, \" - \").concat(randomWidth, \")\")\n        },\n        key: i\n      }, other)));\n    }\n\n    return React.createElement(\"div\", null, lines);\n  }\n\n  if (widthPx && paragraph) {\n    var _lines = [];\n\n    for (var j = 0; j < lineCount; j++) {\n      var _randomWidth = getRandomInt(widthNum - 75, widthNum, j) + 'px';\n\n      _lines.push(React.createElement(\"p\", _extends({\n        className: skeletonTextClasses,\n        style: {\n          width: _randomWidth\n        },\n        key: j\n      }, other)));\n    }\n\n    return React.createElement(\"div\", null, _lines);\n  }\n\n  return React.createElement(\"p\", _extends({\n    className: skeletonTextClasses,\n    style: {\n      width: width\n    }\n  }, other));\n};\n\nSkeletonText.propTypes = {\n  /**\n   * will generate multiple lines of text\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * the number of lines in a paragraph\n   */\n  lineCount: PropTypes.number,\n\n  /**\n   * width (in px or %) of single line of text or max-width of paragraph lines\n   */\n  width: PropTypes.string,\n\n  /**\n   * generates skeleton text at a larger size\n   */\n  heading: PropTypes.bool,\n\n  /**\n   * Specify an optional className to be applied to the container node\n   */\n  className: PropTypes.string\n};\nSkeletonText.defaultProps = {\n  paragraph: false,\n  width: '100%',\n  heading: false,\n  lineCount: 3\n};\nexport default SkeletonText;"]},"metadata":{},"sourceType":"module"}