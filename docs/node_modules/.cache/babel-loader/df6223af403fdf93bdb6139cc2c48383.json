{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * @param {Event} event The event.\n * @param {string} selector The selector.\n * @returns {Element}\n *   The closest ancestor of the event target (or the event target itself) which matches the selectors given in parameter.\n */\nexport default function eventMatches(event, selector) {\n  // <svg> in IE does not have `Element#msMatchesSelector()` (that should be copied to `Element#matches()` by a polyfill).\n  // Also a weird behavior is seen in IE where DOM tree seems broken when `event.target` is on <svg>.\n  // Therefore this function simply returns `undefined` when `event.target` is on <svg>.\n  var target = event.target,\n      currentTarget = event.currentTarget;\n\n  if (typeof target.matches === 'function') {\n    if (target.matches(selector)) {\n      // If event target itself matches the given selector, return it\n      return target;\n    }\n\n    if (target.matches(\"\".concat(selector, \" *\"))) {\n      var closest = target.closest(selector);\n\n      if ((currentTarget.nodeType === Node.DOCUMENT_NODE ? currentTarget.documentElement : currentTarget).contains(closest)) {\n        return closest;\n      }\n    }\n  }\n\n  return undefined;\n}","map":{"version":3,"sources":["/Users/khadijaal-selini/call-for-code/policy-truth-frontend/node_modules/carbon-components/es/globals/js/misc/event-matches.js"],"names":["eventMatches","event","selector","target","currentTarget","matches","concat","closest","nodeType","Node","DOCUMENT_NODE","documentElement","contains","undefined"],"mappings":"AAAA;;;;;;;AAOA;;;;;;AAMA,eAAe,SAASA,YAAT,CAAsBC,KAAtB,EAA6BC,QAA7B,EAAuC;AACpD;AACA;AACA;AACA,MAAIC,MAAM,GAAGF,KAAK,CAACE,MAAnB;AAAA,MACIC,aAAa,GAAGH,KAAK,CAACG,aAD1B;;AAGA,MAAI,OAAOD,MAAM,CAACE,OAAd,KAA0B,UAA9B,EAA0C;AACxC,QAAIF,MAAM,CAACE,OAAP,CAAeH,QAAf,CAAJ,EAA8B;AAC5B;AACA,aAAOC,MAAP;AACD;;AAED,QAAIA,MAAM,CAACE,OAAP,CAAe,GAAGC,MAAH,CAAUJ,QAAV,EAAoB,IAApB,CAAf,CAAJ,EAA+C;AAC7C,UAAIK,OAAO,GAAGJ,MAAM,CAACI,OAAP,CAAeL,QAAf,CAAd;;AAEA,UAAI,CAACE,aAAa,CAACI,QAAd,KAA2BC,IAAI,CAACC,aAAhC,GAAgDN,aAAa,CAACO,eAA9D,GAAgFP,aAAjF,EAAgGQ,QAAhG,CAAyGL,OAAzG,CAAJ,EAAuH;AACrH,eAAOA,OAAP;AACD;AACF;AACF;;AAED,SAAOM,SAAP;AACD","sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * @param {Event} event The event.\n * @param {string} selector The selector.\n * @returns {Element}\n *   The closest ancestor of the event target (or the event target itself) which matches the selectors given in parameter.\n */\nexport default function eventMatches(event, selector) {\n  // <svg> in IE does not have `Element#msMatchesSelector()` (that should be copied to `Element#matches()` by a polyfill).\n  // Also a weird behavior is seen in IE where DOM tree seems broken when `event.target` is on <svg>.\n  // Therefore this function simply returns `undefined` when `event.target` is on <svg>.\n  var target = event.target,\n      currentTarget = event.currentTarget;\n\n  if (typeof target.matches === 'function') {\n    if (target.matches(selector)) {\n      // If event target itself matches the given selector, return it\n      return target;\n    }\n\n    if (target.matches(\"\".concat(selector, \" *\"))) {\n      var closest = target.closest(selector);\n\n      if ((currentTarget.nodeType === Node.DOCUMENT_NODE ? currentTarget.documentElement : currentTarget).contains(closest)) {\n        return closest;\n      }\n    }\n  }\n\n  return undefined;\n}"]},"metadata":{},"sourceType":"module"}