{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { settings } from 'carbon-components';\nimport View16 from '@carbon/icons-react/lib/view/16';\nimport ViewOff16 from '@carbon/icons-react/lib/view--off/16';\nimport WarningFilled16 from '@carbon/icons-react/lib/warning--filled/16';\nimport { textInputProps } from './util';\nvar prefix = settings.prefix;\nvar ControlledPasswordInput = React.forwardRef(function ControlledPasswordInput(_ref, ref) {\n  var _classNames, _classNames2;\n\n  var alt = _ref.alt,\n      labelText = _ref.labelText,\n      className = _ref.className,\n      id = _ref.id,\n      placeholder = _ref.placeholder,\n      _onChange = _ref.onChange,\n      _onClick = _ref.onClick,\n      hideLabel = _ref.hideLabel,\n      invalid = _ref.invalid,\n      invalidText = _ref.invalidText,\n      helperText = _ref.helperText,\n      light = _ref.light,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'password' : _ref$type,\n      togglePasswordVisibility = _ref.togglePasswordVisibility,\n      _ref$hidePasswordText = _ref.hidePasswordText,\n      hidePasswordText = _ref$hidePasswordText === void 0 ? 'Hide' : _ref$hidePasswordText,\n      _ref$showPasswordText = _ref.showPasswordText,\n      showPasswordText = _ref$showPasswordText === void 0 ? 'Show' : _ref$showPasswordText,\n      other = _objectWithoutProperties(_ref, [\"alt\", \"labelText\", \"className\", \"id\", \"placeholder\", \"onChange\", \"onClick\", \"hideLabel\", \"invalid\", \"invalidText\", \"helperText\", \"light\", \"type\", \"togglePasswordVisibility\", \"hidePasswordText\", \"showPasswordText\"]);\n\n  var errorId = id + '-error-msg';\n  var textInputClasses = classNames(\"\".concat(prefix, \"--text-input\"), \"\".concat(prefix, \"--password-input\"), className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--text-input--light\"), light), _defineProperty(_classNames, \"\".concat(prefix, \"--text-input--invalid\"), invalid), _classNames));\n\n  var sharedTextInputProps = _objectSpread({\n    id: id,\n    onChange: function onChange(evt) {\n      if (!other.disabled) {\n        _onChange(evt);\n      }\n    },\n    onClick: function onClick(evt) {\n      if (!other.disabled) {\n        _onClick(evt);\n      }\n    },\n    placeholder: placeholder,\n    type: type,\n    ref: ref,\n    className: textInputClasses\n  }, other);\n\n  var labelClasses = classNames(\"\".concat(prefix, \"--label\"), (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefix, \"--visually-hidden\"), hideLabel), _defineProperty(_classNames2, \"\".concat(prefix, \"--label--disabled\"), other.disabled), _classNames2));\n  var helperTextClasses = classNames(\"\".concat(prefix, \"--form__helper-text\"), _defineProperty({}, \"\".concat(prefix, \"--form__helper-text--disabled\"), other.disabled));\n  var label = labelText ? React.createElement(\"label\", {\n    htmlFor: id,\n    className: labelClasses\n  }, labelText) : null;\n  var error = invalid ? React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--form-requirement\"),\n    id: errorId\n  }, invalidText) : null;\n  var passwordIsVisible = type === 'text';\n  var passwordVisibilityToggleButtonClasses = classNames(\"\".concat(prefix, \"--text-input--password__visibility\"), \"\".concat(prefix, \"--tooltip__trigger\"), \"\".concat(prefix, \"--tooltip--icon__bottom\"), {});\n  var passwordVisibilityIcon = passwordIsVisible ? React.createElement(ViewOff16, {\n    className: \"\".concat(prefix, \"--icon-visibility-off\")\n  }) : React.createElement(View16, {\n    className: \"\".concat(prefix, \"--icon-visibility-on\")\n  });\n  var input = React.createElement(React.Fragment, null, React.createElement(\"input\", _extends({}, textInputProps({\n    invalid: invalid,\n    sharedTextInputProps: sharedTextInputProps,\n    errorId: errorId\n  }), {\n    \"data-toggle-password-visibility\": type === 'password'\n  })), React.createElement(\"button\", {\n    className: passwordVisibilityToggleButtonClasses,\n    \"aria-label\": alt || \"\".concat(passwordIsVisible ? hidePasswordText : showPasswordText, \" password\"),\n    onClick: togglePasswordVisibility\n  }, passwordVisibilityIcon));\n  var helper = helperText ? React.createElement(\"div\", {\n    className: helperTextClasses\n  }, helperText) : null;\n  return React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--form-item \").concat(prefix, \"--text-input-wrapper \").concat(prefix, \"--password-input-wrapper\")\n  }, label, helper, React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--text-input__field-wrapper\"),\n    \"data-invalid\": invalid || null\n  }, invalid && React.createElement(WarningFilled16, {\n    className: \"\".concat(prefix, \"--text-input__invalid-icon\")\n  }), input), error);\n});\nControlledPasswordInput.propTypes = {\n  /**\n   * Provide custom alt text for the password visibility toggle button\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Provide a custom className that is applied directly to the underlying\n   * <input> node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Optionally provide the default value of the <input>\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify whether the control is disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Provide a unique identifier for the input field\n   */\n  id: PropTypes.string.isRequired,\n\n  /**\n   * Provide the text that will be read by a screen reader when visiting this\n   * control\n   */\n  labelText: PropTypes.node.isRequired,\n\n  /**\n   * Optionally provide an `onChange` handler that is called whenever <input>\n   * is updated\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Optionally provide an `onClick` handler that is called whenever the\n   * <input> is clicked\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Specify the placeholder attribute for the <input>\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * Provide the current value of the <input>\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify whether or not the underlying label is visually hidden\n   */\n  hideLabel: PropTypes.bool,\n\n  /**\n   * Specify whether the control is currently invalid\n   */\n  invalid: PropTypes.bool,\n\n  /**\n   * Provide the text that is displayed when the control is in an invalid state\n   */\n  invalidText: PropTypes.string,\n\n  /**\n   * Provide text that is used alongside the control label for additional help\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * Specify light version or default version of this control\n   */\n  light: PropTypes.bool\n};\nControlledPasswordInput.defaultProps = {\n  alt: '',\n  className: '${prefix}--text__input',\n  disabled: false,\n  onChange: function onChange() {},\n  onClick: function onClick() {},\n  invalid: false,\n  invalidText: '',\n  helperText: '',\n  light: false\n};\nexport default ControlledPasswordInput;","map":{"version":3,"sources":["/Users/khadijaal-selini/call-for-code/policy-truth-frontend/node_modules/carbon-components-react/es/components/TextInput/ControlledPasswordInput.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectSpread","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","_defineProperty","obj","value","defineProperty","configurable","writable","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","React","classNames","PropTypes","settings","View16","ViewOff16","WarningFilled16","textInputProps","prefix","ControlledPasswordInput","forwardRef","_ref","ref","_classNames","_classNames2","alt","labelText","className","id","placeholder","_onChange","onChange","_onClick","onClick","hideLabel","invalid","invalidText","helperText","light","_ref$type","type","togglePasswordVisibility","_ref$hidePasswordText","hidePasswordText","_ref$showPasswordText","showPasswordText","other","errorId","textInputClasses","sharedTextInputProps","evt","disabled","labelClasses","helperTextClasses","label","createElement","htmlFor","error","passwordIsVisible","passwordVisibilityToggleButtonClasses","passwordVisibilityIcon","input","Fragment","helper","propTypes","string","defaultValue","oneOfType","number","bool","isRequired","node","func","defaultProps"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { settings } from 'carbon-components';\nimport View16 from '@carbon/icons-react/lib/view/16';\nimport ViewOff16 from '@carbon/icons-react/lib/view--off/16';\nimport WarningFilled16 from '@carbon/icons-react/lib/warning--filled/16';\nimport { textInputProps } from './util';\nvar prefix = settings.prefix;\nvar ControlledPasswordInput = React.forwardRef(function ControlledPasswordInput(_ref, ref) {\n  var _classNames, _classNames2;\n\n  var alt = _ref.alt,\n      labelText = _ref.labelText,\n      className = _ref.className,\n      id = _ref.id,\n      placeholder = _ref.placeholder,\n      _onChange = _ref.onChange,\n      _onClick = _ref.onClick,\n      hideLabel = _ref.hideLabel,\n      invalid = _ref.invalid,\n      invalidText = _ref.invalidText,\n      helperText = _ref.helperText,\n      light = _ref.light,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'password' : _ref$type,\n      togglePasswordVisibility = _ref.togglePasswordVisibility,\n      _ref$hidePasswordText = _ref.hidePasswordText,\n      hidePasswordText = _ref$hidePasswordText === void 0 ? 'Hide' : _ref$hidePasswordText,\n      _ref$showPasswordText = _ref.showPasswordText,\n      showPasswordText = _ref$showPasswordText === void 0 ? 'Show' : _ref$showPasswordText,\n      other = _objectWithoutProperties(_ref, [\"alt\", \"labelText\", \"className\", \"id\", \"placeholder\", \"onChange\", \"onClick\", \"hideLabel\", \"invalid\", \"invalidText\", \"helperText\", \"light\", \"type\", \"togglePasswordVisibility\", \"hidePasswordText\", \"showPasswordText\"]);\n\n  var errorId = id + '-error-msg';\n  var textInputClasses = classNames(\"\".concat(prefix, \"--text-input\"), \"\".concat(prefix, \"--password-input\"), className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--text-input--light\"), light), _defineProperty(_classNames, \"\".concat(prefix, \"--text-input--invalid\"), invalid), _classNames));\n\n  var sharedTextInputProps = _objectSpread({\n    id: id,\n    onChange: function onChange(evt) {\n      if (!other.disabled) {\n        _onChange(evt);\n      }\n    },\n    onClick: function onClick(evt) {\n      if (!other.disabled) {\n        _onClick(evt);\n      }\n    },\n    placeholder: placeholder,\n    type: type,\n    ref: ref,\n    className: textInputClasses\n  }, other);\n\n  var labelClasses = classNames(\"\".concat(prefix, \"--label\"), (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefix, \"--visually-hidden\"), hideLabel), _defineProperty(_classNames2, \"\".concat(prefix, \"--label--disabled\"), other.disabled), _classNames2));\n  var helperTextClasses = classNames(\"\".concat(prefix, \"--form__helper-text\"), _defineProperty({}, \"\".concat(prefix, \"--form__helper-text--disabled\"), other.disabled));\n  var label = labelText ? React.createElement(\"label\", {\n    htmlFor: id,\n    className: labelClasses\n  }, labelText) : null;\n  var error = invalid ? React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--form-requirement\"),\n    id: errorId\n  }, invalidText) : null;\n  var passwordIsVisible = type === 'text';\n  var passwordVisibilityToggleButtonClasses = classNames(\"\".concat(prefix, \"--text-input--password__visibility\"), \"\".concat(prefix, \"--tooltip__trigger\"), \"\".concat(prefix, \"--tooltip--icon__bottom\"), {});\n  var passwordVisibilityIcon = passwordIsVisible ? React.createElement(ViewOff16, {\n    className: \"\".concat(prefix, \"--icon-visibility-off\")\n  }) : React.createElement(View16, {\n    className: \"\".concat(prefix, \"--icon-visibility-on\")\n  });\n  var input = React.createElement(React.Fragment, null, React.createElement(\"input\", _extends({}, textInputProps({\n    invalid: invalid,\n    sharedTextInputProps: sharedTextInputProps,\n    errorId: errorId\n  }), {\n    \"data-toggle-password-visibility\": type === 'password'\n  })), React.createElement(\"button\", {\n    className: passwordVisibilityToggleButtonClasses,\n    \"aria-label\": alt || \"\".concat(passwordIsVisible ? hidePasswordText : showPasswordText, \" password\"),\n    onClick: togglePasswordVisibility\n  }, passwordVisibilityIcon));\n  var helper = helperText ? React.createElement(\"div\", {\n    className: helperTextClasses\n  }, helperText) : null;\n  return React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--form-item \").concat(prefix, \"--text-input-wrapper \").concat(prefix, \"--password-input-wrapper\")\n  }, label, helper, React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--text-input__field-wrapper\"),\n    \"data-invalid\": invalid || null\n  }, invalid && React.createElement(WarningFilled16, {\n    className: \"\".concat(prefix, \"--text-input__invalid-icon\")\n  }), input), error);\n});\nControlledPasswordInput.propTypes = {\n  /**\n   * Provide custom alt text for the password visibility toggle button\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Provide a custom className that is applied directly to the underlying\n   * <input> node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Optionally provide the default value of the <input>\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify whether the control is disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Provide a unique identifier for the input field\n   */\n  id: PropTypes.string.isRequired,\n\n  /**\n   * Provide the text that will be read by a screen reader when visiting this\n   * control\n   */\n  labelText: PropTypes.node.isRequired,\n\n  /**\n   * Optionally provide an `onChange` handler that is called whenever <input>\n   * is updated\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Optionally provide an `onClick` handler that is called whenever the\n   * <input> is clicked\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Specify the placeholder attribute for the <input>\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * Provide the current value of the <input>\n   */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /**\n   * Specify whether or not the underlying label is visually hidden\n   */\n  hideLabel: PropTypes.bool,\n\n  /**\n   * Specify whether the control is currently invalid\n   */\n  invalid: PropTypes.bool,\n\n  /**\n   * Provide the text that is displayed when the control is in an invalid state\n   */\n  invalidText: PropTypes.string,\n\n  /**\n   * Provide text that is used alongside the control label for additional help\n   */\n  helperText: PropTypes.node,\n\n  /**\n   * Specify light version or default version of this control\n   */\n  light: PropTypes.bool\n};\nControlledPasswordInput.defaultProps = {\n  alt: '',\n  className: '${prefix}--text__input',\n  disabled: false,\n  onChange: function onChange() {},\n  onClick: function onClick() {},\n  invalid: false,\n  invalidText: '',\n  helperText: '',\n  light: false\n};\nexport default ControlledPasswordInput;"]},"metadata":{},"sourceType":"module"}