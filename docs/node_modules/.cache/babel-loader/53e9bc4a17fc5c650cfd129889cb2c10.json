{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Use the local `localCompare` with the `numeric` option to sort two,\n * potentially alpha-numeric, strings in a list of items.\n *\n * @param {string} itemA\n * @param {string} itemB\n * @param {Object} options\n * @param {string} options.locale\n * @returns {number}\n */\nexport var defaultCompareItems = function defaultCompareItems(itemA, itemB, _ref) {\n  var locale = _ref.locale;\n  return itemA.localeCompare(itemB, locale, {\n    numeric: true\n  });\n};\n/**\n * Default sorting algorithm for options in a selection control\n */\n\nexport var defaultSortItems = function defaultSortItems(items, _ref2) {\n  var _ref2$selectedItems = _ref2.selectedItems,\n      selectedItems = _ref2$selectedItems === void 0 ? [] : _ref2$selectedItems,\n      itemToString = _ref2.itemToString,\n      compareItems = _ref2.compareItems,\n      _ref2$locale = _ref2.locale,\n      locale = _ref2$locale === void 0 ? 'en' : _ref2$locale;\n  return items.sort(function (itemA, itemB) {\n    var hasItemA = selectedItems.includes(itemA);\n    var hasItemB = selectedItems.includes(itemB); // Prefer whichever item is in the `selectedItems` array first\n\n    if (hasItemA && !hasItemB) {\n      return -1;\n    }\n\n    if (hasItemB && !hasItemA) {\n      return 1;\n    }\n\n    return compareItems(itemToString(itemA), itemToString(itemB), {\n      locale: locale\n    });\n  });\n};","map":{"version":3,"sources":["/Users/khadijaal-selini/call-for-code/policy-truth-frontend/node_modules/carbon-components-react/es/components/MultiSelect/tools/sorting.js"],"names":["defaultCompareItems","itemA","itemB","_ref","locale","localeCompare","numeric","defaultSortItems","items","_ref2","_ref2$selectedItems","selectedItems","itemToString","compareItems","_ref2$locale","sort","hasItemA","includes","hasItemB"],"mappings":"AAAA;;;;;;;AAOA;;;;;;;;;;AAUA,OAAO,IAAIA,mBAAmB,GAAG,SAASA,mBAAT,CAA6BC,KAA7B,EAAoCC,KAApC,EAA2CC,IAA3C,EAAiD;AAChF,MAAIC,MAAM,GAAGD,IAAI,CAACC,MAAlB;AACA,SAAOH,KAAK,CAACI,aAAN,CAAoBH,KAApB,EAA2BE,MAA3B,EAAmC;AACxCE,IAAAA,OAAO,EAAE;AAD+B,GAAnC,CAAP;AAGD,CALM;AAMP;;;;AAIA,OAAO,IAAIC,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,KAA1B,EAAiCC,KAAjC,EAAwC;AACpE,MAAIC,mBAAmB,GAAGD,KAAK,CAACE,aAAhC;AAAA,MACIA,aAAa,GAAGD,mBAAmB,KAAK,KAAK,CAA7B,GAAiC,EAAjC,GAAsCA,mBAD1D;AAAA,MAEIE,YAAY,GAAGH,KAAK,CAACG,YAFzB;AAAA,MAGIC,YAAY,GAAGJ,KAAK,CAACI,YAHzB;AAAA,MAIIC,YAAY,GAAGL,KAAK,CAACL,MAJzB;AAAA,MAKIA,MAAM,GAAGU,YAAY,KAAK,KAAK,CAAtB,GAA0B,IAA1B,GAAiCA,YAL9C;AAMA,SAAON,KAAK,CAACO,IAAN,CAAW,UAAUd,KAAV,EAAiBC,KAAjB,EAAwB;AACxC,QAAIc,QAAQ,GAAGL,aAAa,CAACM,QAAd,CAAuBhB,KAAvB,CAAf;AACA,QAAIiB,QAAQ,GAAGP,aAAa,CAACM,QAAd,CAAuBf,KAAvB,CAAf,CAFwC,CAEM;;AAE9C,QAAIc,QAAQ,IAAI,CAACE,QAAjB,EAA2B;AACzB,aAAO,CAAC,CAAR;AACD;;AAED,QAAIA,QAAQ,IAAI,CAACF,QAAjB,EAA2B;AACzB,aAAO,CAAP;AACD;;AAED,WAAOH,YAAY,CAACD,YAAY,CAACX,KAAD,CAAb,EAAsBW,YAAY,CAACV,KAAD,CAAlC,EAA2C;AAC5DE,MAAAA,MAAM,EAAEA;AADoD,KAA3C,CAAnB;AAGD,GAfM,CAAP;AAgBD,CAvBM","sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * Use the local `localCompare` with the `numeric` option to sort two,\n * potentially alpha-numeric, strings in a list of items.\n *\n * @param {string} itemA\n * @param {string} itemB\n * @param {Object} options\n * @param {string} options.locale\n * @returns {number}\n */\nexport var defaultCompareItems = function defaultCompareItems(itemA, itemB, _ref) {\n  var locale = _ref.locale;\n  return itemA.localeCompare(itemB, locale, {\n    numeric: true\n  });\n};\n/**\n * Default sorting algorithm for options in a selection control\n */\n\nexport var defaultSortItems = function defaultSortItems(items, _ref2) {\n  var _ref2$selectedItems = _ref2.selectedItems,\n      selectedItems = _ref2$selectedItems === void 0 ? [] : _ref2$selectedItems,\n      itemToString = _ref2.itemToString,\n      compareItems = _ref2.compareItems,\n      _ref2$locale = _ref2.locale,\n      locale = _ref2$locale === void 0 ? 'en' : _ref2$locale;\n  return items.sort(function (itemA, itemB) {\n    var hasItemA = selectedItems.includes(itemA);\n    var hasItemB = selectedItems.includes(itemB); // Prefer whichever item is in the `selectedItems` array first\n\n    if (hasItemA && !hasItemB) {\n      return -1;\n    }\n\n    if (hasItemB && !hasItemA) {\n      return 1;\n    }\n\n    return compareItems(itemToString(itemA), itemToString(itemB), {\n      locale: locale\n    });\n  });\n};"]},"metadata":{},"sourceType":"module"}