{"version":3,"sources":["webpack:///./node_modules/core-js/internals/native-url.js","webpack:///./node_modules/core-js/modules/web.url.js","webpack:///./node_modules/node-libs-browser/mock/process.js","webpack:///./src/views/Record.vue?c8cc","webpack:///src/views/Record.vue","webpack:///./src/views/Record.vue?a704","webpack:///./src/views/Record.vue?a4da","webpack:///./node_modules/core-js/internals/string-punycode-to-ascii.js","webpack:///./node_modules/core-js/modules/web.url-search-params.js","webpack:///./node_modules/core-js/internals/get-iterator.js","webpack:///./node_modules/recordrtc/RecordRTC.js","webpack:///./src/views/Record.vue?6546","webpack:///./node_modules/path-browserify/index.js"],"names":["fails","wellKnownSymbol","IS_PURE","ITERATOR","module","exports","url","URL","searchParams","result","pathname","forEach","value","key","toJSON","sort","href","get","String","URLSearchParams","username","host","hash","undefined","EOF","$","DESCRIPTORS","USE_NATIVE_URL","global","defineProperties","redefine","anInstance","has","assign","arrayFrom","codeAt","toASCII","setToStringTag","URLSearchParamsModule","InternalStateModule","NativeURL","getInternalSearchParamsState","getState","setInternalState","set","getInternalURLState","getterFor","floor","Math","pow","INVALID_AUTHORITY","INVALID_SCHEME","INVALID_HOST","INVALID_PORT","ALPHA","ALPHANUMERIC","DIGIT","HEX_START","OCT","DEC","HEX","FORBIDDEN_HOST_CODE_POINT","FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT","LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE","TAB_AND_NEW_LINE","parseHost","input","codePoints","index","charAt","length","parseIPv6","slice","isSpecial","test","parseIPv4","percentEncode","C0ControlPercentEncodeSet","partsLength","numbers","part","radix","number","ipv4","parts","split","pop","parseInt","push","numbersSeen","ipv4Piece","swaps","swap","address","pieceIndex","compress","pointer","char","findLongestZeroSequence","ipv6","maxIndex","maxLength","currStart","currLength","serializeHost","ignore0","unshift","join","toString","fragmentPercentEncodeSet","pathPercentEncodeSet","userinfoPercentEncodeSet","code","encodeURIComponent","specialSchemes","ftp","file","http","https","ws","wss","scheme","includesCredentials","password","cannotHaveUsernamePasswordPort","cannotBeABaseURL","isWindowsDriveLetter","string","normalized","second","startsWithWindowsDriveLetter","third","shortenURLsPath","path","pathSize","isSingleDot","segment","toLowerCase","isDoubleDot","SCHEME_START","SCHEME","NO_SCHEME","SPECIAL_RELATIVE_OR_AUTHORITY","PATH_OR_AUTHORITY","RELATIVE","RELATIVE_SLASH","SPECIAL_AUTHORITY_SLASHES","SPECIAL_AUTHORITY_IGNORE_SLASHES","AUTHORITY","HOST","HOSTNAME","PORT","FILE","FILE_SLASH","FILE_HOST","PATH_START","PATH","CANNOT_BE_A_BASE_URL_PATH","QUERY","FRAGMENT","parseURL","stateOverride","base","bufferCodePoints","failure","state","buffer","seenAt","seenBracket","seenPasswordToken","port","query","fragment","replace","i","codePoint","encodedCodePoints","shift","URLConstructor","baseState","that","this","arguments","urlString","type","TypeError","searchParamsState","updateSearchParams","updateURL","serializeURL","call","origin","getOrigin","protocol","getProtocol","getUsername","getPassword","getHost","hostname","getHostname","getPort","getPathname","search","getSearch","getSearchParams","getHash","URLPrototype","prototype","output","error","accessorDescriptor","getter","setter","configurable","enumerable","nativeCreateObjectURL","createObjectURL","nativeRevokeObjectURL","revokeObjectURL","blob","apply","forced","sham","nextTick","fn","args","Array","setTimeout","platform","arch","execPath","title","pid","browser","env","argv","binding","name","Error","cwd","chdir","dir","resolve","exit","kill","umask","dlopen","uptime","memoryUsage","uvCounters","features","render","_vm","_h","$createElement","_c","_self","staticClass","directives","rawName","expression","ref","attrs","domProps","on","$event","target","composing","videoModel","poster","startRecording","_v","stopRecording","staticRenderFns","data","methods","successCallback","mimeType","audioBitsPerSecond","videoBitsPerSecond","timeSlice","bitsPerSecond","stream","recordRTC","RecordRTC","options","video","src","window","errorCallback","processVideo","audioVideoWebMURL","getDataURL","dataURL","mandatory","maxWidth","maxHeight","audio","navigator","mediaDevices","bind","getAudioTracks","getVideoTracks","download","save","mounted","muted","controls","autoplay","component","maxInt","tMin","tMax","skew","damp","initialBias","initialN","delimiter","regexNonASCII","regexSeparators","OVERFLOW_ERROR","baseMinusTMin","stringFromCharCode","fromCharCode","ucs2decode","counter","charCodeAt","extra","digitToBasic","digit","adapt","delta","numPoints","firstTime","k","encode","currentValue","inputLength","n","bias","basicLength","handledCPCount","m","handledCPCountPlusOne","RangeError","q","t","qMinusT","baseMinusT","label","encoded","labels","getBuiltIn","redefineAll","createIteratorConstructor","hasOwn","classof","anObject","isObject","create","createPropertyDescriptor","getIterator","getIteratorMethod","$fetch","Headers","URL_SEARCH_PARAMS","URL_SEARCH_PARAMS_ITERATOR","getInternalParamsState","getInternalIteratorState","plus","sequences","percentSequence","bytes","RegExp","percentDecode","sequence","decodeURIComponent","deserialize","it","find","replacer","match","serialize","parseSearchParams","attribute","entry","attributes","entries","validateArgumentsLength","passed","required","URLSearchParamsIterator","params","kind","iterator","step","next","done","URLSearchParamsConstructor","iteratorMethod","entryIterator","entryNext","first","init","URLSearchParamsPrototype","append","splice","getAll","found","val","entriesIndex","sliceIndex","callback","boundFunction","keys","values","fetch","body","headers","mediaStream","config","RecordRTCConfiguration","self","config2","disableLogs","console","log","version","mediaRecorder","clearRecordedData","record","setState","recordingDuration","handleRecordingDuration","initRecorder","initCallback","Recorder","GetRecorderType","constructor","resumeRecording","warn","stop","_callback","warningLog","__blob","Object","bytesToSize","size","e","autoWriteToDisk","parameter","DiskStorage","Store","pauseRecording","pause","resume","readFile","_blob","postMessage","FileReaderSync","readAsDataURL","_mediaRecorder","Worker","mozGetUserMedia","reader","FileReader","onload","event","webWorker","processInWebWorker","onmessage","_function","Blob","worker","onRecordingStopped","onStateChanged","WARNING","returnObject","setRecordingDuration","getBlob","toURL","getInternalRecorder","fileName","invokeSaveAsDialog","getFromDisk","setAdvertisementArray","arrayOfWebPImages","advertisement","duration","image","bufferSize","sampleRate","reset","destroy","disableLogsCache","Storage","AudioContextConstructor","close","prop","recorderType","WhammyRecorder","CanvasRecorder","WebAssemblyRecorder","GifRecorder","StereoAudioRecorder","MediaStreamRecorder","getTracks","MediaRecorder","recorder","isChrome","isEdge","isOpera","ReadableStream","isMediaRecorderCompatible","isTypeSupported","MultiStreamRecorder","isSafari","MRecordRTC","addStream","_mediaStream","mediaType","gif","audioRecorder","numberOfAudioChannels","onTimeStamp","newStream","videoTrack","isFirefox","MediaStream","addTrack","videoRecorder","canvas","frameInterval","workerPath","webAssemblyPath","frameRate","bitrate","isSingleRecorder","gifRecorder","quality","blobURL","callback00","webkitURL","_audioDataURL","_videoDataURL","writeToDisk","Fetch","_type","audioDataURL","videoDataURL","gifDataURL","audioBlob","videoBlob","gifBlob","browserFakeUserAgent","userAgent","getUserMedia","document","documentElement","appendChild","createElement","captureStream","mozCaptureStream","obj","getContext","play","drawImage","toDataURL","style","HTMLVideoElement","location","screen","width","height","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","lastTime","element","currTime","Date","getTime","timeToCall","max","id","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","msCancelAnimationFrame","clearTimeout","AudioContext","webkitAudioContext","mozAudioContext","webkitGetUserMedia","indexOf","msSaveBlob","msSaveOrOpenBlob","opera","isElectron","sizes","toPrecision","fileExtension","splitted","fileFullName","round","random","hyperlink","click","dispatchEvent","MouseEvent","view","bubbles","cancelable","process","versions","electron","filter","setSrcObject","srcObject","mozSrcObject","getSeekableBlob","inputBlob","EBML","Reader","decoder","Decoder","tools","fileReader","ebmlElms","decode","read","refinedMetadataBuf","makeMetadataSeekable","metadatas","cues","metadataSize","newBlob","readAsArrayBuffer","webkitMediaStream","track","appVersion","verOffset","ix","nAgt","fullVersion","parseFloat","majorVersion","substring","isNaN","arrayOfBlobs","updateTimeStamp","timestamps","getMimeType","secondObject","clearRecordedDataCB","isMediaStreamActive","active","ended","getArrayOfBlobs","allStates","recorderHints","canRecordMimeType","ondataavailable","recordingCallback","getNativeBlob","onstart","onpause","onresume","onstop","onerror","looper","manuallyStopped","timeslice","start","getAllStates","checkForInactiveTracks","jsAudioNode","leftchannel","rightchannel","recording","recordingLength","desiredSampRate","mergeLeftRightBuffers","mergeAudioBuffers","cb","interleaved","leftBuffers","rightBuffers","internalInterleavedLength","interpolateArray","newSampleRate","oldSampleRate","fitCount","newData","springFactor","Number","tmp","before","toFixed","after","ceil","atPoint","linearInterpolate","mergeBuffers","channelBuffer","rLength","Float64Array","offset","lng","interleave","leftChannel","rightChannel","inputIndex","writeUTFBytes","setUint8","interleavedLength","resultingBufferLength","ArrayBuffer","DataView","setUint32","setUint16","volume","setInt16","noWorker","workerURL","terminate","resetVariables","isAudioProcessStarted","isPaused","byteLength","context","audioInput","createMediaStreamSource","legalBufferValues","JSON","stringify","createJavaScriptNode","createScriptProcessor","connect","intervalsBasedBuffers","left","right","onaudioprocess","disconnect","onAudioProcessDataAvailable","onAudioProcessStarted","inputBuffer","getChannelData","chLeft","Float32Array","chRight","createMediaStreamDestination","destination","htmlElement","html2canvas","isCanvasSupportsStreamCapturing","item","globalCanvas","mediaStreamRecorder","isRecording","_isChrome","webkitRTCPeerConnection","chrome","chromeVersion","matchArray","useWhammyRecorder","HTMLCanvasElement","CanvasRenderingContext2D","canvasMediaStream","webkitCaptureStream","mdStream","whammy","frames","drawCanvasFrame","getWebPImages","nodeName","framesLength","frame","idx","framesRemaining","onEncodingCallback","webp","compile","isPausedRecording","cloneCanvas","newCanvas","grabMouse","showMousePointer","onrendered","Whammy","Video","drawFrames","paused","isStopDrawing","asyncLoop","o","loop","functionToLoop","dropBlackFrames","_frames","_framesToCheck","_pixTolerance","_frameTolerance","localCanvas","context2d","resultFrames","checkUntilNotBlack","endCheckFrame","sampleColor","r","g","b","maxColorDifference","sqrt","pixTolerance","frameTolerance","doNotCheckNext","f","matchPixCount","endPixCheck","maxPixCount","finishImage","Image","imageData","getImageData","pix","currentColor","colorDifference","concat","cloneNode","onloadedmetadata","_this","WhammyVideo","whammyInWebWorker","ArrayToWebM","info","checkFrames","clusterMaxDuration","doubleToString","frameNumber","clusterTimecode","clusterFrames","clusterDuration","clusterCounter","cluster","getClusterData","generateEBML","map","block","makeSimpleBlock","discardable","invisible","keyframe","lacing","trackNum","timecode","numToBuffer","num","Uint8Array","reverse","strToBuffer","str","bitsToBuffer","bits","pad","substr","json","ebml","len","zeroes","sizeToString","padded","flags","out","parseWebP","riff","VP8","RIFF","WEBP","frameStart","c","getStrLength","unpadded","parseRIFF","chunks","webm","atob","add","indexedDB","open","db","dbVersion","dbName","request","onError","onsuccess","setVersion","createObjectStore","putInDB","onupgradeneeded","dataBase","dataStoreName","transaction","getFromStore","portionName","objectStore","put","GIFEncoder","script","isHTMLObject","drawVideoFrame","time","clearedRecordedData","lastAnimationFrame","lastFrameTime","onGifPreview","gifEncoder","addFrame","isLoadedMetaData","offsetWidth","offsetHeight","setRepeat","setDelay","setQuality","onGifRecordingStarted","now","bin","playsInline","MultiStreamsMixer","arrayOfMediaStreams","elementClass","videos","isStopDrawingFrames","opacity","position","zIndex","top","className","useGainNode","drawVideosToCanvas","videosLength","fullcanvas","remaining","x","y","onRender","getMixedStream","mixedVideoStream","getMixedVideoStream","mixedAudioStream","getMixedAudioStream","capturedStream","resetVideoStreams","videoStream","audioContext","audioSources","gainNode","createGain","gain","audioTracksLength","audioSource","audioDestination","getVideo","streams","startDrawingFrames","appendStreams","releaseStreams","source","clearRect","mixer","getAllVideoTracks","tracks","previewStream","addStreams","getMixer","RecordRTCPromisesHandler","Promise","reject","finished","cameraStream","controller","cvs","onplaying","ctx","frameTimeout","cameraTimer","setInterval","clearInterval","onVideoProcessStarted","_controlledReadableStream","enqueue","then","arrayBuffer","addEventListener","timebaseDen","realtime","pipeTo","WritableStream","write","arrayOfBuffers","normalizeArray","allowAboveRoot","up","last","basename","end","matchedSlash","xs","res","resolvedPath","resolvedAbsolute","p","normalize","isAbsolute","trailingSlash","paths","relative","from","to","trim","arr","fromParts","toParts","min","samePartsLength","outputParts","sep","dirname","hasRoot","ext","extname","startDot","startPart","preDotState"],"mappings":"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","file":"js/chunk-c5202c46.e05b704c.js","sourcesContent":["var fails = require('../internals/fails');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar ITERATOR = wellKnownSymbol('iterator');\n\nmodule.exports = !fails(function () {\n  var url = new URL('b?a=1&b=2&c=3', 'http://a');\n  var searchParams = url.searchParams;\n  var result = '';\n  url.pathname = 'c%20d';\n  searchParams.forEach(function (value, key) {\n    searchParams['delete']('b');\n    result += key + value;\n  });\n  return (IS_PURE && !url.toJSON)\n    || !searchParams.sort\n    || url.href !== 'http://a/c%20d?a=1&c=3'\n    || searchParams.get('c') !== '3'\n    || String(new URLSearchParams('?a=1')) !== 'a=1'\n    || !searchParams[ITERATOR]\n    // throws in Edge\n    || new URL('https://a@b').username !== 'a'\n    || new URLSearchParams(new URLSearchParams('a=b')).get('a') !== 'b'\n    // not punycoded in Edge\n    || new URL('http://тест').host !== 'xn--e1aybc'\n    // not escaped in Chrome 62-\n    || new URL('http://a#б').hash !== '#%D0%B1'\n    // fails in Chrome 66-\n    || result !== 'a1c3'\n    // throws in Safari\n    || new URL('http://x', undefined).host !== 'x';\n});\n","'use strict';\n// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`\nrequire('../modules/es.string.iterator');\nvar $ = require('../internals/export');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar USE_NATIVE_URL = require('../internals/native-url');\nvar global = require('../internals/global');\nvar defineProperties = require('../internals/object-define-properties');\nvar redefine = require('../internals/redefine');\nvar anInstance = require('../internals/an-instance');\nvar has = require('../internals/has');\nvar assign = require('../internals/object-assign');\nvar arrayFrom = require('../internals/array-from');\nvar codeAt = require('../internals/string-multibyte').codeAt;\nvar toASCII = require('../internals/string-punycode-to-ascii');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar URLSearchParamsModule = require('../modules/web.url-search-params');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar NativeURL = global.URL;\nvar URLSearchParams = URLSearchParamsModule.URLSearchParams;\nvar getInternalSearchParamsState = URLSearchParamsModule.getState;\nvar setInternalState = InternalStateModule.set;\nvar getInternalURLState = InternalStateModule.getterFor('URL');\nvar floor = Math.floor;\nvar pow = Math.pow;\n\nvar INVALID_AUTHORITY = 'Invalid authority';\nvar INVALID_SCHEME = 'Invalid scheme';\nvar INVALID_HOST = 'Invalid host';\nvar INVALID_PORT = 'Invalid port';\n\nvar ALPHA = /[A-Za-z]/;\nvar ALPHANUMERIC = /[\\d+-.A-Za-z]/;\nvar DIGIT = /\\d/;\nvar HEX_START = /^(0x|0X)/;\nvar OCT = /^[0-7]+$/;\nvar DEC = /^\\d+$/;\nvar HEX = /^[\\dA-Fa-f]+$/;\n// eslint-disable-next-line no-control-regex\nvar FORBIDDEN_HOST_CODE_POINT = /[\\u0000\\u0009\\u000A\\u000D #%/:?@[\\\\]]/;\n// eslint-disable-next-line no-control-regex\nvar FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT = /[\\u0000\\u0009\\u000A\\u000D #/:?@[\\\\]]/;\n// eslint-disable-next-line no-control-regex\nvar LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE = /^[\\u0000-\\u001F ]+|[\\u0000-\\u001F ]+$/g;\n// eslint-disable-next-line no-control-regex\nvar TAB_AND_NEW_LINE = /[\\u0009\\u000A\\u000D]/g;\nvar EOF;\n\nvar parseHost = function (url, input) {\n  var result, codePoints, index;\n  if (input.charAt(0) == '[') {\n    if (input.charAt(input.length - 1) != ']') return INVALID_HOST;\n    result = parseIPv6(input.slice(1, -1));\n    if (!result) return INVALID_HOST;\n    url.host = result;\n  // opaque host\n  } else if (!isSpecial(url)) {\n    if (FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT.test(input)) return INVALID_HOST;\n    result = '';\n    codePoints = arrayFrom(input);\n    for (index = 0; index < codePoints.length; index++) {\n      result += percentEncode(codePoints[index], C0ControlPercentEncodeSet);\n    }\n    url.host = result;\n  } else {\n    input = toASCII(input);\n    if (FORBIDDEN_HOST_CODE_POINT.test(input)) return INVALID_HOST;\n    result = parseIPv4(input);\n    if (result === null) return INVALID_HOST;\n    url.host = result;\n  }\n};\n\nvar parseIPv4 = function (input) {\n  var parts = input.split('.');\n  var partsLength, numbers, index, part, radix, number, ipv4;\n  if (parts.length && parts[parts.length - 1] == '') {\n    parts.pop();\n  }\n  partsLength = parts.length;\n  if (partsLength > 4) return input;\n  numbers = [];\n  for (index = 0; index < partsLength; index++) {\n    part = parts[index];\n    if (part == '') return input;\n    radix = 10;\n    if (part.length > 1 && part.charAt(0) == '0') {\n      radix = HEX_START.test(part) ? 16 : 8;\n      part = part.slice(radix == 8 ? 1 : 2);\n    }\n    if (part === '') {\n      number = 0;\n    } else {\n      if (!(radix == 10 ? DEC : radix == 8 ? OCT : HEX).test(part)) return input;\n      number = parseInt(part, radix);\n    }\n    numbers.push(number);\n  }\n  for (index = 0; index < partsLength; index++) {\n    number = numbers[index];\n    if (index == partsLength - 1) {\n      if (number >= pow(256, 5 - partsLength)) return null;\n    } else if (number > 255) return null;\n  }\n  ipv4 = numbers.pop();\n  for (index = 0; index < numbers.length; index++) {\n    ipv4 += numbers[index] * pow(256, 3 - index);\n  }\n  return ipv4;\n};\n\n// eslint-disable-next-line max-statements\nvar parseIPv6 = function (input) {\n  var address = [0, 0, 0, 0, 0, 0, 0, 0];\n  var pieceIndex = 0;\n  var compress = null;\n  var pointer = 0;\n  var value, length, numbersSeen, ipv4Piece, number, swaps, swap;\n\n  var char = function () {\n    return input.charAt(pointer);\n  };\n\n  if (char() == ':') {\n    if (input.charAt(1) != ':') return;\n    pointer += 2;\n    pieceIndex++;\n    compress = pieceIndex;\n  }\n  while (char()) {\n    if (pieceIndex == 8) return;\n    if (char() == ':') {\n      if (compress !== null) return;\n      pointer++;\n      pieceIndex++;\n      compress = pieceIndex;\n      continue;\n    }\n    value = length = 0;\n    while (length < 4 && HEX.test(char())) {\n      value = value * 16 + parseInt(char(), 16);\n      pointer++;\n      length++;\n    }\n    if (char() == '.') {\n      if (length == 0) return;\n      pointer -= length;\n      if (pieceIndex > 6) return;\n      numbersSeen = 0;\n      while (char()) {\n        ipv4Piece = null;\n        if (numbersSeen > 0) {\n          if (char() == '.' && numbersSeen < 4) pointer++;\n          else return;\n        }\n        if (!DIGIT.test(char())) return;\n        while (DIGIT.test(char())) {\n          number = parseInt(char(), 10);\n          if (ipv4Piece === null) ipv4Piece = number;\n          else if (ipv4Piece == 0) return;\n          else ipv4Piece = ipv4Piece * 10 + number;\n          if (ipv4Piece > 255) return;\n          pointer++;\n        }\n        address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;\n        numbersSeen++;\n        if (numbersSeen == 2 || numbersSeen == 4) pieceIndex++;\n      }\n      if (numbersSeen != 4) return;\n      break;\n    } else if (char() == ':') {\n      pointer++;\n      if (!char()) return;\n    } else if (char()) return;\n    address[pieceIndex++] = value;\n  }\n  if (compress !== null) {\n    swaps = pieceIndex - compress;\n    pieceIndex = 7;\n    while (pieceIndex != 0 && swaps > 0) {\n      swap = address[pieceIndex];\n      address[pieceIndex--] = address[compress + swaps - 1];\n      address[compress + --swaps] = swap;\n    }\n  } else if (pieceIndex != 8) return;\n  return address;\n};\n\nvar findLongestZeroSequence = function (ipv6) {\n  var maxIndex = null;\n  var maxLength = 1;\n  var currStart = null;\n  var currLength = 0;\n  var index = 0;\n  for (; index < 8; index++) {\n    if (ipv6[index] !== 0) {\n      if (currLength > maxLength) {\n        maxIndex = currStart;\n        maxLength = currLength;\n      }\n      currStart = null;\n      currLength = 0;\n    } else {\n      if (currStart === null) currStart = index;\n      ++currLength;\n    }\n  }\n  if (currLength > maxLength) {\n    maxIndex = currStart;\n    maxLength = currLength;\n  }\n  return maxIndex;\n};\n\nvar serializeHost = function (host) {\n  var result, index, compress, ignore0;\n  // ipv4\n  if (typeof host == 'number') {\n    result = [];\n    for (index = 0; index < 4; index++) {\n      result.unshift(host % 256);\n      host = floor(host / 256);\n    } return result.join('.');\n  // ipv6\n  } else if (typeof host == 'object') {\n    result = '';\n    compress = findLongestZeroSequence(host);\n    for (index = 0; index < 8; index++) {\n      if (ignore0 && host[index] === 0) continue;\n      if (ignore0) ignore0 = false;\n      if (compress === index) {\n        result += index ? ':' : '::';\n        ignore0 = true;\n      } else {\n        result += host[index].toString(16);\n        if (index < 7) result += ':';\n      }\n    }\n    return '[' + result + ']';\n  } return host;\n};\n\nvar C0ControlPercentEncodeSet = {};\nvar fragmentPercentEncodeSet = assign({}, C0ControlPercentEncodeSet, {\n  ' ': 1, '\"': 1, '<': 1, '>': 1, '`': 1\n});\nvar pathPercentEncodeSet = assign({}, fragmentPercentEncodeSet, {\n  '#': 1, '?': 1, '{': 1, '}': 1\n});\nvar userinfoPercentEncodeSet = assign({}, pathPercentEncodeSet, {\n  '/': 1, ':': 1, ';': 1, '=': 1, '@': 1, '[': 1, '\\\\': 1, ']': 1, '^': 1, '|': 1\n});\n\nvar percentEncode = function (char, set) {\n  var code = codeAt(char, 0);\n  return code > 0x20 && code < 0x7F && !has(set, char) ? char : encodeURIComponent(char);\n};\n\nvar specialSchemes = {\n  ftp: 21,\n  file: null,\n  http: 80,\n  https: 443,\n  ws: 80,\n  wss: 443\n};\n\nvar isSpecial = function (url) {\n  return has(specialSchemes, url.scheme);\n};\n\nvar includesCredentials = function (url) {\n  return url.username != '' || url.password != '';\n};\n\nvar cannotHaveUsernamePasswordPort = function (url) {\n  return !url.host || url.cannotBeABaseURL || url.scheme == 'file';\n};\n\nvar isWindowsDriveLetter = function (string, normalized) {\n  var second;\n  return string.length == 2 && ALPHA.test(string.charAt(0))\n    && ((second = string.charAt(1)) == ':' || (!normalized && second == '|'));\n};\n\nvar startsWithWindowsDriveLetter = function (string) {\n  var third;\n  return string.length > 1 && isWindowsDriveLetter(string.slice(0, 2)) && (\n    string.length == 2 ||\n    ((third = string.charAt(2)) === '/' || third === '\\\\' || third === '?' || third === '#')\n  );\n};\n\nvar shortenURLsPath = function (url) {\n  var path = url.path;\n  var pathSize = path.length;\n  if (pathSize && (url.scheme != 'file' || pathSize != 1 || !isWindowsDriveLetter(path[0], true))) {\n    path.pop();\n  }\n};\n\nvar isSingleDot = function (segment) {\n  return segment === '.' || segment.toLowerCase() === '%2e';\n};\n\nvar isDoubleDot = function (segment) {\n  segment = segment.toLowerCase();\n  return segment === '..' || segment === '%2e.' || segment === '.%2e' || segment === '%2e%2e';\n};\n\n// States:\nvar SCHEME_START = {};\nvar SCHEME = {};\nvar NO_SCHEME = {};\nvar SPECIAL_RELATIVE_OR_AUTHORITY = {};\nvar PATH_OR_AUTHORITY = {};\nvar RELATIVE = {};\nvar RELATIVE_SLASH = {};\nvar SPECIAL_AUTHORITY_SLASHES = {};\nvar SPECIAL_AUTHORITY_IGNORE_SLASHES = {};\nvar AUTHORITY = {};\nvar HOST = {};\nvar HOSTNAME = {};\nvar PORT = {};\nvar FILE = {};\nvar FILE_SLASH = {};\nvar FILE_HOST = {};\nvar PATH_START = {};\nvar PATH = {};\nvar CANNOT_BE_A_BASE_URL_PATH = {};\nvar QUERY = {};\nvar FRAGMENT = {};\n\n// eslint-disable-next-line max-statements\nvar parseURL = function (url, input, stateOverride, base) {\n  var state = stateOverride || SCHEME_START;\n  var pointer = 0;\n  var buffer = '';\n  var seenAt = false;\n  var seenBracket = false;\n  var seenPasswordToken = false;\n  var codePoints, char, bufferCodePoints, failure;\n\n  if (!stateOverride) {\n    url.scheme = '';\n    url.username = '';\n    url.password = '';\n    url.host = null;\n    url.port = null;\n    url.path = [];\n    url.query = null;\n    url.fragment = null;\n    url.cannotBeABaseURL = false;\n    input = input.replace(LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE, '');\n  }\n\n  input = input.replace(TAB_AND_NEW_LINE, '');\n\n  codePoints = arrayFrom(input);\n\n  while (pointer <= codePoints.length) {\n    char = codePoints[pointer];\n    switch (state) {\n      case SCHEME_START:\n        if (char && ALPHA.test(char)) {\n          buffer += char.toLowerCase();\n          state = SCHEME;\n        } else if (!stateOverride) {\n          state = NO_SCHEME;\n          continue;\n        } else return INVALID_SCHEME;\n        break;\n\n      case SCHEME:\n        if (char && (ALPHANUMERIC.test(char) || char == '+' || char == '-' || char == '.')) {\n          buffer += char.toLowerCase();\n        } else if (char == ':') {\n          if (stateOverride && (\n            (isSpecial(url) != has(specialSchemes, buffer)) ||\n            (buffer == 'file' && (includesCredentials(url) || url.port !== null)) ||\n            (url.scheme == 'file' && !url.host)\n          )) return;\n          url.scheme = buffer;\n          if (stateOverride) {\n            if (isSpecial(url) && specialSchemes[url.scheme] == url.port) url.port = null;\n            return;\n          }\n          buffer = '';\n          if (url.scheme == 'file') {\n            state = FILE;\n          } else if (isSpecial(url) && base && base.scheme == url.scheme) {\n            state = SPECIAL_RELATIVE_OR_AUTHORITY;\n          } else if (isSpecial(url)) {\n            state = SPECIAL_AUTHORITY_SLASHES;\n          } else if (codePoints[pointer + 1] == '/') {\n            state = PATH_OR_AUTHORITY;\n            pointer++;\n          } else {\n            url.cannotBeABaseURL = true;\n            url.path.push('');\n            state = CANNOT_BE_A_BASE_URL_PATH;\n          }\n        } else if (!stateOverride) {\n          buffer = '';\n          state = NO_SCHEME;\n          pointer = 0;\n          continue;\n        } else return INVALID_SCHEME;\n        break;\n\n      case NO_SCHEME:\n        if (!base || (base.cannotBeABaseURL && char != '#')) return INVALID_SCHEME;\n        if (base.cannotBeABaseURL && char == '#') {\n          url.scheme = base.scheme;\n          url.path = base.path.slice();\n          url.query = base.query;\n          url.fragment = '';\n          url.cannotBeABaseURL = true;\n          state = FRAGMENT;\n          break;\n        }\n        state = base.scheme == 'file' ? FILE : RELATIVE;\n        continue;\n\n      case SPECIAL_RELATIVE_OR_AUTHORITY:\n        if (char == '/' && codePoints[pointer + 1] == '/') {\n          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n          pointer++;\n        } else {\n          state = RELATIVE;\n          continue;\n        } break;\n\n      case PATH_OR_AUTHORITY:\n        if (char == '/') {\n          state = AUTHORITY;\n          break;\n        } else {\n          state = PATH;\n          continue;\n        }\n\n      case RELATIVE:\n        url.scheme = base.scheme;\n        if (char == EOF) {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.query = base.query;\n        } else if (char == '/' || (char == '\\\\' && isSpecial(url))) {\n          state = RELATIVE_SLASH;\n        } else if (char == '?') {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.query = '';\n          state = QUERY;\n        } else if (char == '#') {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.query = base.query;\n          url.fragment = '';\n          state = FRAGMENT;\n        } else {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          url.path = base.path.slice();\n          url.path.pop();\n          state = PATH;\n          continue;\n        } break;\n\n      case RELATIVE_SLASH:\n        if (isSpecial(url) && (char == '/' || char == '\\\\')) {\n          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n        } else if (char == '/') {\n          state = AUTHORITY;\n        } else {\n          url.username = base.username;\n          url.password = base.password;\n          url.host = base.host;\n          url.port = base.port;\n          state = PATH;\n          continue;\n        } break;\n\n      case SPECIAL_AUTHORITY_SLASHES:\n        state = SPECIAL_AUTHORITY_IGNORE_SLASHES;\n        if (char != '/' || buffer.charAt(pointer + 1) != '/') continue;\n        pointer++;\n        break;\n\n      case SPECIAL_AUTHORITY_IGNORE_SLASHES:\n        if (char != '/' && char != '\\\\') {\n          state = AUTHORITY;\n          continue;\n        } break;\n\n      case AUTHORITY:\n        if (char == '@') {\n          if (seenAt) buffer = '%40' + buffer;\n          seenAt = true;\n          bufferCodePoints = arrayFrom(buffer);\n          for (var i = 0; i < bufferCodePoints.length; i++) {\n            var codePoint = bufferCodePoints[i];\n            if (codePoint == ':' && !seenPasswordToken) {\n              seenPasswordToken = true;\n              continue;\n            }\n            var encodedCodePoints = percentEncode(codePoint, userinfoPercentEncodeSet);\n            if (seenPasswordToken) url.password += encodedCodePoints;\n            else url.username += encodedCodePoints;\n          }\n          buffer = '';\n        } else if (\n          char == EOF || char == '/' || char == '?' || char == '#' ||\n          (char == '\\\\' && isSpecial(url))\n        ) {\n          if (seenAt && buffer == '') return INVALID_AUTHORITY;\n          pointer -= arrayFrom(buffer).length + 1;\n          buffer = '';\n          state = HOST;\n        } else buffer += char;\n        break;\n\n      case HOST:\n      case HOSTNAME:\n        if (stateOverride && url.scheme == 'file') {\n          state = FILE_HOST;\n          continue;\n        } else if (char == ':' && !seenBracket) {\n          if (buffer == '') return INVALID_HOST;\n          failure = parseHost(url, buffer);\n          if (failure) return failure;\n          buffer = '';\n          state = PORT;\n          if (stateOverride == HOSTNAME) return;\n        } else if (\n          char == EOF || char == '/' || char == '?' || char == '#' ||\n          (char == '\\\\' && isSpecial(url))\n        ) {\n          if (isSpecial(url) && buffer == '') return INVALID_HOST;\n          if (stateOverride && buffer == '' && (includesCredentials(url) || url.port !== null)) return;\n          failure = parseHost(url, buffer);\n          if (failure) return failure;\n          buffer = '';\n          state = PATH_START;\n          if (stateOverride) return;\n          continue;\n        } else {\n          if (char == '[') seenBracket = true;\n          else if (char == ']') seenBracket = false;\n          buffer += char;\n        } break;\n\n      case PORT:\n        if (DIGIT.test(char)) {\n          buffer += char;\n        } else if (\n          char == EOF || char == '/' || char == '?' || char == '#' ||\n          (char == '\\\\' && isSpecial(url)) ||\n          stateOverride\n        ) {\n          if (buffer != '') {\n            var port = parseInt(buffer, 10);\n            if (port > 0xFFFF) return INVALID_PORT;\n            url.port = (isSpecial(url) && port === specialSchemes[url.scheme]) ? null : port;\n            buffer = '';\n          }\n          if (stateOverride) return;\n          state = PATH_START;\n          continue;\n        } else return INVALID_PORT;\n        break;\n\n      case FILE:\n        url.scheme = 'file';\n        if (char == '/' || char == '\\\\') state = FILE_SLASH;\n        else if (base && base.scheme == 'file') {\n          if (char == EOF) {\n            url.host = base.host;\n            url.path = base.path.slice();\n            url.query = base.query;\n          } else if (char == '?') {\n            url.host = base.host;\n            url.path = base.path.slice();\n            url.query = '';\n            state = QUERY;\n          } else if (char == '#') {\n            url.host = base.host;\n            url.path = base.path.slice();\n            url.query = base.query;\n            url.fragment = '';\n            state = FRAGMENT;\n          } else {\n            if (!startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {\n              url.host = base.host;\n              url.path = base.path.slice();\n              shortenURLsPath(url);\n            }\n            state = PATH;\n            continue;\n          }\n        } else {\n          state = PATH;\n          continue;\n        } break;\n\n      case FILE_SLASH:\n        if (char == '/' || char == '\\\\') {\n          state = FILE_HOST;\n          break;\n        }\n        if (base && base.scheme == 'file' && !startsWithWindowsDriveLetter(codePoints.slice(pointer).join(''))) {\n          if (isWindowsDriveLetter(base.path[0], true)) url.path.push(base.path[0]);\n          else url.host = base.host;\n        }\n        state = PATH;\n        continue;\n\n      case FILE_HOST:\n        if (char == EOF || char == '/' || char == '\\\\' || char == '?' || char == '#') {\n          if (!stateOverride && isWindowsDriveLetter(buffer)) {\n            state = PATH;\n          } else if (buffer == '') {\n            url.host = '';\n            if (stateOverride) return;\n            state = PATH_START;\n          } else {\n            failure = parseHost(url, buffer);\n            if (failure) return failure;\n            if (url.host == 'localhost') url.host = '';\n            if (stateOverride) return;\n            buffer = '';\n            state = PATH_START;\n          } continue;\n        } else buffer += char;\n        break;\n\n      case PATH_START:\n        if (isSpecial(url)) {\n          state = PATH;\n          if (char != '/' && char != '\\\\') continue;\n        } else if (!stateOverride && char == '?') {\n          url.query = '';\n          state = QUERY;\n        } else if (!stateOverride && char == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (char != EOF) {\n          state = PATH;\n          if (char != '/') continue;\n        } break;\n\n      case PATH:\n        if (\n          char == EOF || char == '/' ||\n          (char == '\\\\' && isSpecial(url)) ||\n          (!stateOverride && (char == '?' || char == '#'))\n        ) {\n          if (isDoubleDot(buffer)) {\n            shortenURLsPath(url);\n            if (char != '/' && !(char == '\\\\' && isSpecial(url))) {\n              url.path.push('');\n            }\n          } else if (isSingleDot(buffer)) {\n            if (char != '/' && !(char == '\\\\' && isSpecial(url))) {\n              url.path.push('');\n            }\n          } else {\n            if (url.scheme == 'file' && !url.path.length && isWindowsDriveLetter(buffer)) {\n              if (url.host) url.host = '';\n              buffer = buffer.charAt(0) + ':'; // normalize windows drive letter\n            }\n            url.path.push(buffer);\n          }\n          buffer = '';\n          if (url.scheme == 'file' && (char == EOF || char == '?' || char == '#')) {\n            while (url.path.length > 1 && url.path[0] === '') {\n              url.path.shift();\n            }\n          }\n          if (char == '?') {\n            url.query = '';\n            state = QUERY;\n          } else if (char == '#') {\n            url.fragment = '';\n            state = FRAGMENT;\n          }\n        } else {\n          buffer += percentEncode(char, pathPercentEncodeSet);\n        } break;\n\n      case CANNOT_BE_A_BASE_URL_PATH:\n        if (char == '?') {\n          url.query = '';\n          state = QUERY;\n        } else if (char == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (char != EOF) {\n          url.path[0] += percentEncode(char, C0ControlPercentEncodeSet);\n        } break;\n\n      case QUERY:\n        if (!stateOverride && char == '#') {\n          url.fragment = '';\n          state = FRAGMENT;\n        } else if (char != EOF) {\n          if (char == \"'\" && isSpecial(url)) url.query += '%27';\n          else if (char == '#') url.query += '%23';\n          else url.query += percentEncode(char, C0ControlPercentEncodeSet);\n        } break;\n\n      case FRAGMENT:\n        if (char != EOF) url.fragment += percentEncode(char, fragmentPercentEncodeSet);\n        break;\n    }\n\n    pointer++;\n  }\n};\n\n// `URL` constructor\n// https://url.spec.whatwg.org/#url-class\nvar URLConstructor = function URL(url /* , base */) {\n  var that = anInstance(this, URLConstructor, 'URL');\n  var base = arguments.length > 1 ? arguments[1] : undefined;\n  var urlString = String(url);\n  var state = setInternalState(that, { type: 'URL' });\n  var baseState, failure;\n  if (base !== undefined) {\n    if (base instanceof URLConstructor) baseState = getInternalURLState(base);\n    else {\n      failure = parseURL(baseState = {}, String(base));\n      if (failure) throw TypeError(failure);\n    }\n  }\n  failure = parseURL(state, urlString, null, baseState);\n  if (failure) throw TypeError(failure);\n  var searchParams = state.searchParams = new URLSearchParams();\n  var searchParamsState = getInternalSearchParamsState(searchParams);\n  searchParamsState.updateSearchParams(state.query);\n  searchParamsState.updateURL = function () {\n    state.query = String(searchParams) || null;\n  };\n  if (!DESCRIPTORS) {\n    that.href = serializeURL.call(that);\n    that.origin = getOrigin.call(that);\n    that.protocol = getProtocol.call(that);\n    that.username = getUsername.call(that);\n    that.password = getPassword.call(that);\n    that.host = getHost.call(that);\n    that.hostname = getHostname.call(that);\n    that.port = getPort.call(that);\n    that.pathname = getPathname.call(that);\n    that.search = getSearch.call(that);\n    that.searchParams = getSearchParams.call(that);\n    that.hash = getHash.call(that);\n  }\n};\n\nvar URLPrototype = URLConstructor.prototype;\n\nvar serializeURL = function () {\n  var url = getInternalURLState(this);\n  var scheme = url.scheme;\n  var username = url.username;\n  var password = url.password;\n  var host = url.host;\n  var port = url.port;\n  var path = url.path;\n  var query = url.query;\n  var fragment = url.fragment;\n  var output = scheme + ':';\n  if (host !== null) {\n    output += '//';\n    if (includesCredentials(url)) {\n      output += username + (password ? ':' + password : '') + '@';\n    }\n    output += serializeHost(host);\n    if (port !== null) output += ':' + port;\n  } else if (scheme == 'file') output += '//';\n  output += url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';\n  if (query !== null) output += '?' + query;\n  if (fragment !== null) output += '#' + fragment;\n  return output;\n};\n\nvar getOrigin = function () {\n  var url = getInternalURLState(this);\n  var scheme = url.scheme;\n  var port = url.port;\n  if (scheme == 'blob') try {\n    return new URL(scheme.path[0]).origin;\n  } catch (error) {\n    return 'null';\n  }\n  if (scheme == 'file' || !isSpecial(url)) return 'null';\n  return scheme + '://' + serializeHost(url.host) + (port !== null ? ':' + port : '');\n};\n\nvar getProtocol = function () {\n  return getInternalURLState(this).scheme + ':';\n};\n\nvar getUsername = function () {\n  return getInternalURLState(this).username;\n};\n\nvar getPassword = function () {\n  return getInternalURLState(this).password;\n};\n\nvar getHost = function () {\n  var url = getInternalURLState(this);\n  var host = url.host;\n  var port = url.port;\n  return host === null ? ''\n    : port === null ? serializeHost(host)\n    : serializeHost(host) + ':' + port;\n};\n\nvar getHostname = function () {\n  var host = getInternalURLState(this).host;\n  return host === null ? '' : serializeHost(host);\n};\n\nvar getPort = function () {\n  var port = getInternalURLState(this).port;\n  return port === null ? '' : String(port);\n};\n\nvar getPathname = function () {\n  var url = getInternalURLState(this);\n  var path = url.path;\n  return url.cannotBeABaseURL ? path[0] : path.length ? '/' + path.join('/') : '';\n};\n\nvar getSearch = function () {\n  var query = getInternalURLState(this).query;\n  return query ? '?' + query : '';\n};\n\nvar getSearchParams = function () {\n  return getInternalURLState(this).searchParams;\n};\n\nvar getHash = function () {\n  var fragment = getInternalURLState(this).fragment;\n  return fragment ? '#' + fragment : '';\n};\n\nvar accessorDescriptor = function (getter, setter) {\n  return { get: getter, set: setter, configurable: true, enumerable: true };\n};\n\nif (DESCRIPTORS) {\n  defineProperties(URLPrototype, {\n    // `URL.prototype.href` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-href\n    href: accessorDescriptor(serializeURL, function (href) {\n      var url = getInternalURLState(this);\n      var urlString = String(href);\n      var failure = parseURL(url, urlString);\n      if (failure) throw TypeError(failure);\n      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);\n    }),\n    // `URL.prototype.origin` getter\n    // https://url.spec.whatwg.org/#dom-url-origin\n    origin: accessorDescriptor(getOrigin),\n    // `URL.prototype.protocol` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-protocol\n    protocol: accessorDescriptor(getProtocol, function (protocol) {\n      var url = getInternalURLState(this);\n      parseURL(url, String(protocol) + ':', SCHEME_START);\n    }),\n    // `URL.prototype.username` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-username\n    username: accessorDescriptor(getUsername, function (username) {\n      var url = getInternalURLState(this);\n      var codePoints = arrayFrom(String(username));\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      url.username = '';\n      for (var i = 0; i < codePoints.length; i++) {\n        url.username += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n      }\n    }),\n    // `URL.prototype.password` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-password\n    password: accessorDescriptor(getPassword, function (password) {\n      var url = getInternalURLState(this);\n      var codePoints = arrayFrom(String(password));\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      url.password = '';\n      for (var i = 0; i < codePoints.length; i++) {\n        url.password += percentEncode(codePoints[i], userinfoPercentEncodeSet);\n      }\n    }),\n    // `URL.prototype.host` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-host\n    host: accessorDescriptor(getHost, function (host) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      parseURL(url, String(host), HOST);\n    }),\n    // `URL.prototype.hostname` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-hostname\n    hostname: accessorDescriptor(getHostname, function (hostname) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      parseURL(url, String(hostname), HOSTNAME);\n    }),\n    // `URL.prototype.port` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-port\n    port: accessorDescriptor(getPort, function (port) {\n      var url = getInternalURLState(this);\n      if (cannotHaveUsernamePasswordPort(url)) return;\n      port = String(port);\n      if (port == '') url.port = null;\n      else parseURL(url, port, PORT);\n    }),\n    // `URL.prototype.pathname` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-pathname\n    pathname: accessorDescriptor(getPathname, function (pathname) {\n      var url = getInternalURLState(this);\n      if (url.cannotBeABaseURL) return;\n      url.path = [];\n      parseURL(url, pathname + '', PATH_START);\n    }),\n    // `URL.prototype.search` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-search\n    search: accessorDescriptor(getSearch, function (search) {\n      var url = getInternalURLState(this);\n      search = String(search);\n      if (search == '') {\n        url.query = null;\n      } else {\n        if ('?' == search.charAt(0)) search = search.slice(1);\n        url.query = '';\n        parseURL(url, search, QUERY);\n      }\n      getInternalSearchParamsState(url.searchParams).updateSearchParams(url.query);\n    }),\n    // `URL.prototype.searchParams` getter\n    // https://url.spec.whatwg.org/#dom-url-searchparams\n    searchParams: accessorDescriptor(getSearchParams),\n    // `URL.prototype.hash` accessors pair\n    // https://url.spec.whatwg.org/#dom-url-hash\n    hash: accessorDescriptor(getHash, function (hash) {\n      var url = getInternalURLState(this);\n      hash = String(hash);\n      if (hash == '') {\n        url.fragment = null;\n        return;\n      }\n      if ('#' == hash.charAt(0)) hash = hash.slice(1);\n      url.fragment = '';\n      parseURL(url, hash, FRAGMENT);\n    })\n  });\n}\n\n// `URL.prototype.toJSON` method\n// https://url.spec.whatwg.org/#dom-url-tojson\nredefine(URLPrototype, 'toJSON', function toJSON() {\n  return serializeURL.call(this);\n}, { enumerable: true });\n\n// `URL.prototype.toString` method\n// https://url.spec.whatwg.org/#URL-stringification-behavior\nredefine(URLPrototype, 'toString', function toString() {\n  return serializeURL.call(this);\n}, { enumerable: true });\n\nif (NativeURL) {\n  var nativeCreateObjectURL = NativeURL.createObjectURL;\n  var nativeRevokeObjectURL = NativeURL.revokeObjectURL;\n  // `URL.createObjectURL` method\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL\n  // eslint-disable-next-line no-unused-vars\n  if (nativeCreateObjectURL) redefine(URLConstructor, 'createObjectURL', function createObjectURL(blob) {\n    return nativeCreateObjectURL.apply(NativeURL, arguments);\n  });\n  // `URL.revokeObjectURL` method\n  // https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL\n  // eslint-disable-next-line no-unused-vars\n  if (nativeRevokeObjectURL) redefine(URLConstructor, 'revokeObjectURL', function revokeObjectURL(url) {\n    return nativeRevokeObjectURL.apply(NativeURL, arguments);\n  });\n}\n\nsetToStringTag(URLConstructor, 'URL');\n\n$({ global: true, forced: !USE_NATIVE_URL, sham: !DESCRIPTORS }, {\n  URL: URLConstructor\n});\n","exports.nextTick = function nextTick(fn) {\n    var args = Array.prototype.slice.call(arguments);\n    args.shift();\n    setTimeout(function () {\n        fn.apply(null, args);\n    }, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"videoRec text-xs-center\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.videoModel),expression:\"videoModel\"}],ref:\"video_h\",attrs:{\"type\":\"hidden\",\"name\":\"video\"},domProps:{\"value\":(_vm.videoModel)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.videoModel=$event.target.value}}}),_c('video',{ref:\"video\",staticClass:\"video\",attrs:{\"poster\":_vm.poster,\"controls\":\"\"}}),_c('div',{staticClass:\"video-controllers\"}),_c('button',{on:{\"click\":function($event){return _vm.startRecording('video1')}}},[_vm._v(\"Record\")]),_c('button',{on:{\"click\":function($event){return _vm.stopRecording('video1')}}},[_vm._v(\"Stop\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"videoRec text-xs-center\">\n    <input type=\"hidden\" ref=\"video_h\" name=\"video\" v-model=\"videoModel\" />\n    <video ref=\"video\" class=\"video\" :poster=\"poster\" controls></video>\n    <div class=\"video-controllers\"></div>\n    <button @click=\"startRecording('video1')\">Record</button>\n    <button @click=\"stopRecording('video1')\">Stop</button>\n  </div>\n</template>\n\n<script>\n/*eslint-disable */\nconst RecordRTC = require(\"recordrtc\");\n\nexport default {\n  data() {\n    return {\n      poster: \"/static/video-camera.png\",\n      videoModel: \"\",\n    };\n  },\n  methods: {\n    successCallback(stream) {\n      const options = {\n        mimeType: \"video/webm;codecs=vp9\",\n        audioBitsPerSecond: 128000,\n        videoBitsPerSecond: 128000,\n        timeSlice: 2000,\n        bitsPerSecond: 128000,\n      };\n      this.stream = stream;\n      this.recordRTC = RecordRTC(stream, options);\n      this.recordRTC.startRecording();\n      const video = this.$refs.video;\n      video.src = window.URL.createObjectURL(stream);\n    },\n    errorCallback() {\n      // handle error here\n    },\n    processVideo(audioVideoWebMURL) {\n      const video = this.$refs.video;\n      const recordRTC = this.recordRTC;\n      video.src = audioVideoWebMURL;\n      const recordedBlob = recordRTC.getBlob();\n      recordRTC.getDataURL(function (dataURL) {});\n    },\n    startRecording(video = \"video\") {\n      this.poster = \"\";\n      const mediaConstraints = {\n        video: {\n          mandatory: {\n            maxWidth: 400,\n            maxHeight: 720,\n          },\n        },\n        audio: true,\n      };\n      navigator.mediaDevices\n        .getUserMedia(mediaConstraints)\n        .then(this.successCallback.bind(this), this.errorCallback.bind(this));\n    },\n    stopRecording(video = \"video\") {\n      this.poster = \"\";\n      const recordRTC = this.recordRTC;\n      recordRTC.stopRecording(this.processVideo.bind(this));\n      const stream = this.stream;\n      stream.getAudioTracks().forEach((track) => track.stop());\n      stream.getVideoTracks().forEach((track) => track.stop());\n    },\n    download(video = \"video\") {\n      this.recordRTC.save(\"video.webm\");\n    },\n  },\n  mounted() {\n    const video = this.$refs.video;\n    video.muted = false;\n    video.controls = true;\n    video.autoplay = false;\n  },\n};\n</script>\n\n<style>\nvideo {\n    width: 100%;\n    height: 100vh;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Record.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Record.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Record.vue?vue&type=template&id=e99f9eae&\"\nimport script from \"./Record.vue?vue&type=script&lang=js&\"\nexport * from \"./Record.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Record.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\n// based on https://github.com/bestiejs/punycode.js/blob/master/punycode.js\nvar maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\nvar base = 36;\nvar tMin = 1;\nvar tMax = 26;\nvar skew = 38;\nvar damp = 700;\nvar initialBias = 72;\nvar initialN = 128; // 0x80\nvar delimiter = '-'; // '\\x2D'\nvar regexNonASCII = /[^\\0-\\u007E]/; // non-ASCII chars\nvar regexSeparators = /[.\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\nvar OVERFLOW_ERROR = 'Overflow: input needs wider integers to process';\nvar baseMinusTMin = base - tMin;\nvar floor = Math.floor;\nvar stringFromCharCode = String.fromCharCode;\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n */\nvar ucs2decode = function (string) {\n  var output = [];\n  var counter = 0;\n  var length = string.length;\n  while (counter < length) {\n    var value = string.charCodeAt(counter++);\n    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n      // It's a high surrogate, and there is a next character.\n      var extra = string.charCodeAt(counter++);\n      if ((extra & 0xFC00) == 0xDC00) { // Low surrogate.\n        output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n      } else {\n        // It's an unmatched surrogate; only append this code unit, in case the\n        // next code unit is the high surrogate of a surrogate pair.\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n  return output;\n};\n\n/**\n * Converts a digit/integer into a basic code point.\n */\nvar digitToBasic = function (digit) {\n  //  0..25 map to ASCII a..z or A..Z\n  // 26..35 map to ASCII 0..9\n  return digit + 22 + 75 * (digit < 26);\n};\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n */\nvar adapt = function (delta, numPoints, firstTime) {\n  var k = 0;\n  delta = firstTime ? floor(delta / damp) : delta >> 1;\n  delta += floor(delta / numPoints);\n  for (; delta > baseMinusTMin * tMax >> 1; k += base) {\n    delta = floor(delta / baseMinusTMin);\n  }\n  return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n};\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n */\n// eslint-disable-next-line  max-statements\nvar encode = function (input) {\n  var output = [];\n\n  // Convert the input in UCS-2 to an array of Unicode code points.\n  input = ucs2decode(input);\n\n  // Cache the length.\n  var inputLength = input.length;\n\n  // Initialize the state.\n  var n = initialN;\n  var delta = 0;\n  var bias = initialBias;\n  var i, currentValue;\n\n  // Handle the basic code points.\n  for (i = 0; i < input.length; i++) {\n    currentValue = input[i];\n    if (currentValue < 0x80) {\n      output.push(stringFromCharCode(currentValue));\n    }\n  }\n\n  var basicLength = output.length; // number of basic code points.\n  var handledCPCount = basicLength; // number of code points that have been handled;\n\n  // Finish the basic string with a delimiter unless it's empty.\n  if (basicLength) {\n    output.push(delimiter);\n  }\n\n  // Main encoding loop:\n  while (handledCPCount < inputLength) {\n    // All non-basic code points < n have been handled already. Find the next larger one:\n    var m = maxInt;\n    for (i = 0; i < input.length; i++) {\n      currentValue = input[i];\n      if (currentValue >= n && currentValue < m) {\n        m = currentValue;\n      }\n    }\n\n    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>, but guard against overflow.\n    var handledCPCountPlusOne = handledCPCount + 1;\n    if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n      throw RangeError(OVERFLOW_ERROR);\n    }\n\n    delta += (m - n) * handledCPCountPlusOne;\n    n = m;\n\n    for (i = 0; i < input.length; i++) {\n      currentValue = input[i];\n      if (currentValue < n && ++delta > maxInt) {\n        throw RangeError(OVERFLOW_ERROR);\n      }\n      if (currentValue == n) {\n        // Represent delta as a generalized variable-length integer.\n        var q = delta;\n        for (var k = base; /* no condition */; k += base) {\n          var t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n          if (q < t) break;\n          var qMinusT = q - t;\n          var baseMinusT = base - t;\n          output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT)));\n          q = floor(qMinusT / baseMinusT);\n        }\n\n        output.push(stringFromCharCode(digitToBasic(q)));\n        bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n        delta = 0;\n        ++handledCPCount;\n      }\n    }\n\n    ++delta;\n    ++n;\n  }\n  return output.join('');\n};\n\nmodule.exports = function (input) {\n  var encoded = [];\n  var labels = input.toLowerCase().replace(regexSeparators, '\\u002E').split('.');\n  var i, label;\n  for (i = 0; i < labels.length; i++) {\n    label = labels[i];\n    encoded.push(regexNonASCII.test(label) ? 'xn--' + encode(label) : label);\n  }\n  return encoded.join('.');\n};\n","'use strict';\n// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`\nrequire('../modules/es.array.iterator');\nvar $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar USE_NATIVE_URL = require('../internals/native-url');\nvar redefine = require('../internals/redefine');\nvar redefineAll = require('../internals/redefine-all');\nvar setToStringTag = require('../internals/set-to-string-tag');\nvar createIteratorConstructor = require('../internals/create-iterator-constructor');\nvar InternalStateModule = require('../internals/internal-state');\nvar anInstance = require('../internals/an-instance');\nvar hasOwn = require('../internals/has');\nvar bind = require('../internals/function-bind-context');\nvar classof = require('../internals/classof');\nvar anObject = require('../internals/an-object');\nvar isObject = require('../internals/is-object');\nvar create = require('../internals/object-create');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar getIterator = require('../internals/get-iterator');\nvar getIteratorMethod = require('../internals/get-iterator-method');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar $fetch = getBuiltIn('fetch');\nvar Headers = getBuiltIn('Headers');\nvar ITERATOR = wellKnownSymbol('iterator');\nvar URL_SEARCH_PARAMS = 'URLSearchParams';\nvar URL_SEARCH_PARAMS_ITERATOR = URL_SEARCH_PARAMS + 'Iterator';\nvar setInternalState = InternalStateModule.set;\nvar getInternalParamsState = InternalStateModule.getterFor(URL_SEARCH_PARAMS);\nvar getInternalIteratorState = InternalStateModule.getterFor(URL_SEARCH_PARAMS_ITERATOR);\n\nvar plus = /\\+/g;\nvar sequences = Array(4);\n\nvar percentSequence = function (bytes) {\n  return sequences[bytes - 1] || (sequences[bytes - 1] = RegExp('((?:%[\\\\da-f]{2}){' + bytes + '})', 'gi'));\n};\n\nvar percentDecode = function (sequence) {\n  try {\n    return decodeURIComponent(sequence);\n  } catch (error) {\n    return sequence;\n  }\n};\n\nvar deserialize = function (it) {\n  var result = it.replace(plus, ' ');\n  var bytes = 4;\n  try {\n    return decodeURIComponent(result);\n  } catch (error) {\n    while (bytes) {\n      result = result.replace(percentSequence(bytes--), percentDecode);\n    }\n    return result;\n  }\n};\n\nvar find = /[!'()~]|%20/g;\n\nvar replace = {\n  '!': '%21',\n  \"'\": '%27',\n  '(': '%28',\n  ')': '%29',\n  '~': '%7E',\n  '%20': '+'\n};\n\nvar replacer = function (match) {\n  return replace[match];\n};\n\nvar serialize = function (it) {\n  return encodeURIComponent(it).replace(find, replacer);\n};\n\nvar parseSearchParams = function (result, query) {\n  if (query) {\n    var attributes = query.split('&');\n    var index = 0;\n    var attribute, entry;\n    while (index < attributes.length) {\n      attribute = attributes[index++];\n      if (attribute.length) {\n        entry = attribute.split('=');\n        result.push({\n          key: deserialize(entry.shift()),\n          value: deserialize(entry.join('='))\n        });\n      }\n    }\n  }\n};\n\nvar updateSearchParams = function (query) {\n  this.entries.length = 0;\n  parseSearchParams(this.entries, query);\n};\n\nvar validateArgumentsLength = function (passed, required) {\n  if (passed < required) throw TypeError('Not enough arguments');\n};\n\nvar URLSearchParamsIterator = createIteratorConstructor(function Iterator(params, kind) {\n  setInternalState(this, {\n    type: URL_SEARCH_PARAMS_ITERATOR,\n    iterator: getIterator(getInternalParamsState(params).entries),\n    kind: kind\n  });\n}, 'Iterator', function next() {\n  var state = getInternalIteratorState(this);\n  var kind = state.kind;\n  var step = state.iterator.next();\n  var entry = step.value;\n  if (!step.done) {\n    step.value = kind === 'keys' ? entry.key : kind === 'values' ? entry.value : [entry.key, entry.value];\n  } return step;\n});\n\n// `URLSearchParams` constructor\n// https://url.spec.whatwg.org/#interface-urlsearchparams\nvar URLSearchParamsConstructor = function URLSearchParams(/* init */) {\n  anInstance(this, URLSearchParamsConstructor, URL_SEARCH_PARAMS);\n  var init = arguments.length > 0 ? arguments[0] : undefined;\n  var that = this;\n  var entries = [];\n  var iteratorMethod, iterator, next, step, entryIterator, entryNext, first, second, key;\n\n  setInternalState(that, {\n    type: URL_SEARCH_PARAMS,\n    entries: entries,\n    updateURL: function () { /* empty */ },\n    updateSearchParams: updateSearchParams\n  });\n\n  if (init !== undefined) {\n    if (isObject(init)) {\n      iteratorMethod = getIteratorMethod(init);\n      if (typeof iteratorMethod === 'function') {\n        iterator = iteratorMethod.call(init);\n        next = iterator.next;\n        while (!(step = next.call(iterator)).done) {\n          entryIterator = getIterator(anObject(step.value));\n          entryNext = entryIterator.next;\n          if (\n            (first = entryNext.call(entryIterator)).done ||\n            (second = entryNext.call(entryIterator)).done ||\n            !entryNext.call(entryIterator).done\n          ) throw TypeError('Expected sequence with length 2');\n          entries.push({ key: first.value + '', value: second.value + '' });\n        }\n      } else for (key in init) if (hasOwn(init, key)) entries.push({ key: key, value: init[key] + '' });\n    } else {\n      parseSearchParams(entries, typeof init === 'string' ? init.charAt(0) === '?' ? init.slice(1) : init : init + '');\n    }\n  }\n};\n\nvar URLSearchParamsPrototype = URLSearchParamsConstructor.prototype;\n\nredefineAll(URLSearchParamsPrototype, {\n  // `URLSearchParams.prototype.appent` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-append\n  append: function append(name, value) {\n    validateArgumentsLength(arguments.length, 2);\n    var state = getInternalParamsState(this);\n    state.entries.push({ key: name + '', value: value + '' });\n    state.updateURL();\n  },\n  // `URLSearchParams.prototype.delete` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-delete\n  'delete': function (name) {\n    validateArgumentsLength(arguments.length, 1);\n    var state = getInternalParamsState(this);\n    var entries = state.entries;\n    var key = name + '';\n    var index = 0;\n    while (index < entries.length) {\n      if (entries[index].key === key) entries.splice(index, 1);\n      else index++;\n    }\n    state.updateURL();\n  },\n  // `URLSearchParams.prototype.get` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-get\n  get: function get(name) {\n    validateArgumentsLength(arguments.length, 1);\n    var entries = getInternalParamsState(this).entries;\n    var key = name + '';\n    var index = 0;\n    for (; index < entries.length; index++) {\n      if (entries[index].key === key) return entries[index].value;\n    }\n    return null;\n  },\n  // `URLSearchParams.prototype.getAll` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-getall\n  getAll: function getAll(name) {\n    validateArgumentsLength(arguments.length, 1);\n    var entries = getInternalParamsState(this).entries;\n    var key = name + '';\n    var result = [];\n    var index = 0;\n    for (; index < entries.length; index++) {\n      if (entries[index].key === key) result.push(entries[index].value);\n    }\n    return result;\n  },\n  // `URLSearchParams.prototype.has` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-has\n  has: function has(name) {\n    validateArgumentsLength(arguments.length, 1);\n    var entries = getInternalParamsState(this).entries;\n    var key = name + '';\n    var index = 0;\n    while (index < entries.length) {\n      if (entries[index++].key === key) return true;\n    }\n    return false;\n  },\n  // `URLSearchParams.prototype.set` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-set\n  set: function set(name, value) {\n    validateArgumentsLength(arguments.length, 1);\n    var state = getInternalParamsState(this);\n    var entries = state.entries;\n    var found = false;\n    var key = name + '';\n    var val = value + '';\n    var index = 0;\n    var entry;\n    for (; index < entries.length; index++) {\n      entry = entries[index];\n      if (entry.key === key) {\n        if (found) entries.splice(index--, 1);\n        else {\n          found = true;\n          entry.value = val;\n        }\n      }\n    }\n    if (!found) entries.push({ key: key, value: val });\n    state.updateURL();\n  },\n  // `URLSearchParams.prototype.sort` method\n  // https://url.spec.whatwg.org/#dom-urlsearchparams-sort\n  sort: function sort() {\n    var state = getInternalParamsState(this);\n    var entries = state.entries;\n    // Array#sort is not stable in some engines\n    var slice = entries.slice();\n    var entry, entriesIndex, sliceIndex;\n    entries.length = 0;\n    for (sliceIndex = 0; sliceIndex < slice.length; sliceIndex++) {\n      entry = slice[sliceIndex];\n      for (entriesIndex = 0; entriesIndex < sliceIndex; entriesIndex++) {\n        if (entries[entriesIndex].key > entry.key) {\n          entries.splice(entriesIndex, 0, entry);\n          break;\n        }\n      }\n      if (entriesIndex === sliceIndex) entries.push(entry);\n    }\n    state.updateURL();\n  },\n  // `URLSearchParams.prototype.forEach` method\n  forEach: function forEach(callback /* , thisArg */) {\n    var entries = getInternalParamsState(this).entries;\n    var boundFunction = bind(callback, arguments.length > 1 ? arguments[1] : undefined, 3);\n    var index = 0;\n    var entry;\n    while (index < entries.length) {\n      entry = entries[index++];\n      boundFunction(entry.value, entry.key, this);\n    }\n  },\n  // `URLSearchParams.prototype.keys` method\n  keys: function keys() {\n    return new URLSearchParamsIterator(this, 'keys');\n  },\n  // `URLSearchParams.prototype.values` method\n  values: function values() {\n    return new URLSearchParamsIterator(this, 'values');\n  },\n  // `URLSearchParams.prototype.entries` method\n  entries: function entries() {\n    return new URLSearchParamsIterator(this, 'entries');\n  }\n}, { enumerable: true });\n\n// `URLSearchParams.prototype[@@iterator]` method\nredefine(URLSearchParamsPrototype, ITERATOR, URLSearchParamsPrototype.entries);\n\n// `URLSearchParams.prototype.toString` method\n// https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\nredefine(URLSearchParamsPrototype, 'toString', function toString() {\n  var entries = getInternalParamsState(this).entries;\n  var result = [];\n  var index = 0;\n  var entry;\n  while (index < entries.length) {\n    entry = entries[index++];\n    result.push(serialize(entry.key) + '=' + serialize(entry.value));\n  } return result.join('&');\n}, { enumerable: true });\n\nsetToStringTag(URLSearchParamsConstructor, URL_SEARCH_PARAMS);\n\n$({ global: true, forced: !USE_NATIVE_URL }, {\n  URLSearchParams: URLSearchParamsConstructor\n});\n\n// Wrap `fetch` for correct work with polyfilled `URLSearchParams`\n// https://github.com/zloirock/core-js/issues/674\nif (!USE_NATIVE_URL && typeof $fetch == 'function' && typeof Headers == 'function') {\n  $({ global: true, enumerable: true, forced: true }, {\n    fetch: function fetch(input /* , init */) {\n      var args = [input];\n      var init, body, headers;\n      if (arguments.length > 1) {\n        init = arguments[1];\n        if (isObject(init)) {\n          body = init.body;\n          if (classof(body) === URL_SEARCH_PARAMS) {\n            headers = init.headers ? new Headers(init.headers) : new Headers();\n            if (!headers.has('content-type')) {\n              headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n            }\n            init = create(init, {\n              body: createPropertyDescriptor(0, String(body)),\n              headers: createPropertyDescriptor(0, headers)\n            });\n          }\n        }\n        args.push(init);\n      } return $fetch.apply(this, args);\n    }\n  });\n}\n\nmodule.exports = {\n  URLSearchParams: URLSearchParamsConstructor,\n  getState: getInternalParamsState\n};\n","var anObject = require('../internals/an-object');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\nmodule.exports = function (it) {\n  var iteratorMethod = getIteratorMethod(it);\n  if (typeof iteratorMethod != 'function') {\n    throw TypeError(String(it) + ' is not iterable');\n  } return anObject(iteratorMethod.call(it));\n};\n","'use strict';\r\n\r\n// Last time updated: 2020-05-17 5:04:38 PM UTC\r\n\r\n// ________________\r\n// RecordRTC v5.6.1\r\n\r\n// Open-Sourced: https://github.com/muaz-khan/RecordRTC\r\n\r\n// --------------------------------------------------\r\n// Muaz Khan     - www.MuazKhan.com\r\n// MIT License   - www.WebRTC-Experiment.com/licence\r\n// --------------------------------------------------\r\n\r\n// ____________\r\n// RecordRTC.js\r\n\r\n/**\r\n * {@link https://github.com/muaz-khan/RecordRTC|RecordRTC} is a WebRTC JavaScript library for audio/video as well as screen activity recording. It supports Chrome, Firefox, Opera, Android, and Microsoft Edge. Platforms: Linux, Mac and Windows. \r\n * @summary Record audio, video or screen inside the browser.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef RecordRTC\r\n * @class\r\n * @example\r\n * var recorder = RecordRTC(mediaStream or [arrayOfMediaStream], {\r\n *     type: 'video', // audio or video or gif or canvas\r\n *     recorderType: MediaStreamRecorder || CanvasRecorder || StereoAudioRecorder || Etc\r\n * });\r\n * recorder.startRecording();\r\n * @see For further information:\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.\r\n * @param {object} config - {type:\"video\", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, desiredSampRate: 16000, video: HTMLVideoElement, etc.}\r\n */\r\n\r\nfunction RecordRTC(mediaStream, config) {\r\n    if (!mediaStream) {\r\n        throw 'First parameter is required.';\r\n    }\r\n\r\n    config = config || {\r\n        type: 'video'\r\n    };\r\n\r\n    config = new RecordRTCConfiguration(mediaStream, config);\r\n\r\n    // a reference to user's recordRTC object\r\n    var self = this;\r\n\r\n    function startRecording(config2) {\r\n        if (!config.disableLogs) {\r\n            console.log('RecordRTC version: ', self.version);\r\n        }\r\n\r\n        if (!!config2) {\r\n            // allow users to set options using startRecording method\r\n            // config2 is similar to main \"config\" object (second parameter over RecordRTC constructor)\r\n            config = new RecordRTCConfiguration(mediaStream, config2);\r\n        }\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('started recording ' + config.type + ' stream.');\r\n        }\r\n\r\n        if (mediaRecorder) {\r\n            mediaRecorder.clearRecordedData();\r\n            mediaRecorder.record();\r\n\r\n            setState('recording');\r\n\r\n            if (self.recordingDuration) {\r\n                handleRecordingDuration();\r\n            }\r\n            return self;\r\n        }\r\n\r\n        initRecorder(function() {\r\n            if (self.recordingDuration) {\r\n                handleRecordingDuration();\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    function initRecorder(initCallback) {\r\n        if (initCallback) {\r\n            config.initCallback = function() {\r\n                initCallback();\r\n                initCallback = config.initCallback = null; // recorder.initRecorder should be call-backed once.\r\n            };\r\n        }\r\n\r\n        var Recorder = new GetRecorderType(mediaStream, config);\r\n\r\n        mediaRecorder = new Recorder(mediaStream, config);\r\n        mediaRecorder.record();\r\n\r\n        setState('recording');\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Initialized recorderType:', mediaRecorder.constructor.name, 'for output-type:', config.type);\r\n        }\r\n    }\r\n\r\n    function stopRecording(callback) {\r\n        callback = callback || function() {};\r\n\r\n        if (!mediaRecorder) {\r\n            warningLog();\r\n            return;\r\n        }\r\n\r\n        if (self.state === 'paused') {\r\n            self.resumeRecording();\r\n\r\n            setTimeout(function() {\r\n                stopRecording(callback);\r\n            }, 1);\r\n            return;\r\n        }\r\n\r\n        if (self.state !== 'recording' && !config.disableLogs) {\r\n            console.warn('Recording state should be: \"recording\", however current state is: ', self.state);\r\n        }\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Stopped recording ' + config.type + ' stream.');\r\n        }\r\n\r\n        if (config.type !== 'gif') {\r\n            mediaRecorder.stop(_callback);\r\n        } else {\r\n            mediaRecorder.stop();\r\n            _callback();\r\n        }\r\n\r\n        setState('stopped');\r\n\r\n        function _callback(__blob) {\r\n            if (!mediaRecorder) {\r\n                if (typeof callback.call === 'function') {\r\n                    callback.call(self, '');\r\n                } else {\r\n                    callback('');\r\n                }\r\n                return;\r\n            }\r\n\r\n            Object.keys(mediaRecorder).forEach(function(key) {\r\n                if (typeof mediaRecorder[key] === 'function') {\r\n                    return;\r\n                }\r\n\r\n                self[key] = mediaRecorder[key];\r\n            });\r\n\r\n            var blob = mediaRecorder.blob;\r\n\r\n            if (!blob) {\r\n                if (__blob) {\r\n                    mediaRecorder.blob = blob = __blob;\r\n                } else {\r\n                    throw 'Recording failed.';\r\n                }\r\n            }\r\n\r\n            if (blob && !config.disableLogs) {\r\n                console.log(blob.type, '->', bytesToSize(blob.size));\r\n            }\r\n\r\n            if (callback) {\r\n                var url;\r\n\r\n                try {\r\n                    url = URL.createObjectURL(blob);\r\n                } catch (e) {}\r\n\r\n                if (typeof callback.call === 'function') {\r\n                    callback.call(self, url);\r\n                } else {\r\n                    callback(url);\r\n                }\r\n            }\r\n\r\n            if (!config.autoWriteToDisk) {\r\n                return;\r\n            }\r\n\r\n            getDataURL(function(dataURL) {\r\n                var parameter = {};\r\n                parameter[config.type + 'Blob'] = dataURL;\r\n                DiskStorage.Store(parameter);\r\n            });\r\n        }\r\n    }\r\n\r\n    function pauseRecording() {\r\n        if (!mediaRecorder) {\r\n            warningLog();\r\n            return;\r\n        }\r\n\r\n        if (self.state !== 'recording') {\r\n            if (!config.disableLogs) {\r\n                console.warn('Unable to pause the recording. Recording state: ', self.state);\r\n            }\r\n            return;\r\n        }\r\n\r\n        setState('paused');\r\n\r\n        mediaRecorder.pause();\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Paused recording.');\r\n        }\r\n    }\r\n\r\n    function resumeRecording() {\r\n        if (!mediaRecorder) {\r\n            warningLog();\r\n            return;\r\n        }\r\n\r\n        if (self.state !== 'paused') {\r\n            if (!config.disableLogs) {\r\n                console.warn('Unable to resume the recording. Recording state: ', self.state);\r\n            }\r\n            return;\r\n        }\r\n\r\n        setState('recording');\r\n\r\n        // not all libs have this method yet\r\n        mediaRecorder.resume();\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Resumed recording.');\r\n        }\r\n    }\r\n\r\n    function readFile(_blob) {\r\n        postMessage(new FileReaderSync().readAsDataURL(_blob));\r\n    }\r\n\r\n    function getDataURL(callback, _mediaRecorder) {\r\n        if (!callback) {\r\n            throw 'Pass a callback function over getDataURL.';\r\n        }\r\n\r\n        var blob = _mediaRecorder ? _mediaRecorder.blob : (mediaRecorder || {}).blob;\r\n\r\n        if (!blob) {\r\n            if (!config.disableLogs) {\r\n                console.warn('Blob encoder did not finish its job yet.');\r\n            }\r\n\r\n            setTimeout(function() {\r\n                getDataURL(callback, _mediaRecorder);\r\n            }, 1000);\r\n            return;\r\n        }\r\n\r\n        if (typeof Worker !== 'undefined' && !navigator.mozGetUserMedia) {\r\n            var webWorker = processInWebWorker(readFile);\r\n\r\n            webWorker.onmessage = function(event) {\r\n                callback(event.data);\r\n            };\r\n\r\n            webWorker.postMessage(blob);\r\n        } else {\r\n            var reader = new FileReader();\r\n            reader.readAsDataURL(blob);\r\n            reader.onload = function(event) {\r\n                callback(event.target.result);\r\n            };\r\n        }\r\n\r\n        function processInWebWorker(_function) {\r\n            try {\r\n                var blob = URL.createObjectURL(new Blob([_function.toString(),\r\n                    'this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\r\n                ], {\r\n                    type: 'application/javascript'\r\n                }));\r\n\r\n                var worker = new Worker(blob);\r\n                URL.revokeObjectURL(blob);\r\n                return worker;\r\n            } catch (e) {}\r\n        }\r\n    }\r\n\r\n    function handleRecordingDuration(counter) {\r\n        counter = counter || 0;\r\n\r\n        if (self.state === 'paused') {\r\n            setTimeout(function() {\r\n                handleRecordingDuration(counter);\r\n            }, 1000);\r\n            return;\r\n        }\r\n\r\n        if (self.state === 'stopped') {\r\n            return;\r\n        }\r\n\r\n        if (counter >= self.recordingDuration) {\r\n            stopRecording(self.onRecordingStopped);\r\n            return;\r\n        }\r\n\r\n        counter += 1000; // 1-second\r\n\r\n        setTimeout(function() {\r\n            handleRecordingDuration(counter);\r\n        }, 1000);\r\n    }\r\n\r\n    function setState(state) {\r\n        if (!self) {\r\n            return;\r\n        }\r\n\r\n        self.state = state;\r\n\r\n        if (typeof self.onStateChanged.call === 'function') {\r\n            self.onStateChanged.call(self, state);\r\n        } else {\r\n            self.onStateChanged(state);\r\n        }\r\n    }\r\n\r\n    var WARNING = 'It seems that recorder is destroyed or \"startRecording\" is not invoked for ' + config.type + ' recorder.';\r\n\r\n    function warningLog() {\r\n        if (config.disableLogs === true) {\r\n            return;\r\n        }\r\n\r\n        console.warn(WARNING);\r\n    }\r\n\r\n    var mediaRecorder;\r\n\r\n    var returnObject = {\r\n        /**\r\n         * This method starts the recording.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * var recorder = RecordRTC(mediaStream, {\r\n         *     type: 'video'\r\n         * });\r\n         * recorder.startRecording();\r\n         */\r\n        startRecording: startRecording,\r\n\r\n        /**\r\n         * This method stops the recording. It is strongly recommended to get \"blob\" or \"URI\" inside the callback to make sure all recorders finished their job.\r\n         * @param {function} callback - Callback to get the recorded blob.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     // use either \"this\" or \"recorder\" object; both are identical\r\n         *     video.src = this.toURL();\r\n         *     var blob = this.getBlob();\r\n         * });\r\n         */\r\n        stopRecording: stopRecording,\r\n\r\n        /**\r\n         * This method pauses the recording. You can resume recording using \"resumeRecording\" method.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo Firefox is unable to pause the recording. Fix it.\r\n         * @example\r\n         * recorder.pauseRecording();  // pause the recording\r\n         * recorder.resumeRecording(); // resume again\r\n         */\r\n        pauseRecording: pauseRecording,\r\n\r\n        /**\r\n         * This method resumes the recording.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.pauseRecording();  // first of all, pause the recording\r\n         * recorder.resumeRecording(); // now resume it\r\n         */\r\n        resumeRecording: resumeRecording,\r\n\r\n        /**\r\n         * This method initializes the recording.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo This method should be deprecated.\r\n         * @example\r\n         * recorder.initRecorder();\r\n         */\r\n        initRecorder: initRecorder,\r\n\r\n        /**\r\n         * Ask RecordRTC to auto-stop the recording after 5 minutes.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * var fiveMinutes = 5 * 1000 * 60;\r\n         * recorder.setRecordingDuration(fiveMinutes, function() {\r\n         *    var blob = this.getBlob();\r\n         *    video.src = this.toURL();\r\n         * });\r\n         * \r\n         * // or otherwise\r\n         * recorder.setRecordingDuration(fiveMinutes).onRecordingStopped(function() {\r\n         *    var blob = this.getBlob();\r\n         *    video.src = this.toURL();\r\n         * });\r\n         */\r\n        setRecordingDuration: function(recordingDuration, callback) {\r\n            if (typeof recordingDuration === 'undefined') {\r\n                throw 'recordingDuration is required.';\r\n            }\r\n\r\n            if (typeof recordingDuration !== 'number') {\r\n                throw 'recordingDuration must be a number.';\r\n            }\r\n\r\n            self.recordingDuration = recordingDuration;\r\n            self.onRecordingStopped = callback || function() {};\r\n\r\n            return {\r\n                onRecordingStopped: function(callback) {\r\n                    self.onRecordingStopped = callback;\r\n                }\r\n            };\r\n        },\r\n\r\n        /**\r\n         * This method can be used to clear/reset all the recorded data.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo Figure out the difference between \"reset\" and \"clearRecordedData\" methods.\r\n         * @example\r\n         * recorder.clearRecordedData();\r\n         */\r\n        clearRecordedData: function() {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            mediaRecorder.clearRecordedData();\r\n\r\n            if (!config.disableLogs) {\r\n                console.log('Cleared old recorded data.');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Get the recorded blob. Use this method inside the \"stopRecording\" callback.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     var blob = this.getBlob();\r\n         *\r\n         *     var file = new File([blob], 'filename.webm', {\r\n         *         type: 'video/webm'\r\n         *     });\r\n         *\r\n         *     var formData = new FormData();\r\n         *     formData.append('file', file); // upload \"File\" object rather than a \"Blob\"\r\n         *     uploadToServer(formData);\r\n         * });\r\n         * @returns {Blob} Returns recorded data as \"Blob\" object.\r\n         */\r\n        getBlob: function() {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            return mediaRecorder.blob;\r\n        },\r\n\r\n        /**\r\n         * Get data-URI instead of Blob.\r\n         * @param {function} callback - Callback to get the Data-URI.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     recorder.getDataURL(function(dataURI) {\r\n         *         video.src = dataURI;\r\n         *     });\r\n         * });\r\n         */\r\n        getDataURL: getDataURL,\r\n\r\n        /**\r\n         * Get virtual/temporary URL. Usage of this URL is limited to current tab.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     video.src = this.toURL();\r\n         * });\r\n         * @returns {String} Returns a virtual/temporary URL for the recorded \"Blob\".\r\n         */\r\n        toURL: function() {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            return URL.createObjectURL(mediaRecorder.blob);\r\n        },\r\n\r\n        /**\r\n         * Get internal recording object (i.e. internal module) e.g. MutliStreamRecorder, MediaStreamRecorder, StereoAudioRecorder or WhammyRecorder etc.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * var internalRecorder = recorder.getInternalRecorder();\r\n         * if(internalRecorder instanceof MultiStreamRecorder) {\r\n         *     internalRecorder.addStreams([newAudioStream]);\r\n         *     internalRecorder.resetVideoStreams([screenStream]);\r\n         * }\r\n         * @returns {Object} Returns internal recording object.\r\n         */\r\n        getInternalRecorder: function() {\r\n            return mediaRecorder;\r\n        },\r\n\r\n        /**\r\n         * Invoke save-as dialog to save the recorded blob into your disk.\r\n         * @param {string} fileName - Set your own file name.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     this.save('file-name');\r\n         *\r\n         *     // or manually:\r\n         *     invokeSaveAsDialog(this.getBlob(), 'filename.webm');\r\n         * });\r\n         */\r\n        save: function(fileName) {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            invokeSaveAsDialog(mediaRecorder.blob, fileName);\r\n        },\r\n\r\n        /**\r\n         * This method gets a blob from indexed-DB storage.\r\n         * @param {function} callback - Callback to get the recorded blob.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.getFromDisk(function(dataURL) {\r\n         *     video.src = dataURL;\r\n         * });\r\n         */\r\n        getFromDisk: function(callback) {\r\n            if (!mediaRecorder) {\r\n                warningLog();\r\n                return;\r\n            }\r\n\r\n            RecordRTC.getFromDisk(config.type, callback);\r\n        },\r\n\r\n        /**\r\n         * This method appends an array of webp images to the recorded video-blob. It takes an \"array\" object.\r\n         * @type {Array.<Array>}\r\n         * @param {Array} arrayOfWebPImages - Array of webp images.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @todo This method should be deprecated.\r\n         * @example\r\n         * var arrayOfWebPImages = [];\r\n         * arrayOfWebPImages.push({\r\n         *     duration: index,\r\n         *     image: 'data:image/webp;base64,...'\r\n         * });\r\n         * recorder.setAdvertisementArray(arrayOfWebPImages);\r\n         */\r\n        setAdvertisementArray: function(arrayOfWebPImages) {\r\n            config.advertisement = [];\r\n\r\n            var length = arrayOfWebPImages.length;\r\n            for (var i = 0; i < length; i++) {\r\n                config.advertisement.push({\r\n                    duration: i,\r\n                    image: arrayOfWebPImages[i]\r\n                });\r\n            }\r\n        },\r\n\r\n        /**\r\n         * It is equivalent to <code class=\"str\">\"recorder.getBlob()\"</code> method. Usage of \"getBlob\" is recommended, though.\r\n         * @property {Blob} blob - Recorded Blob can be accessed using this property.\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     var blob = this.blob;\r\n         *\r\n         *     // below one is recommended\r\n         *     var blob = this.getBlob();\r\n         * });\r\n         */\r\n        blob: null,\r\n\r\n        /**\r\n         * This works only with {recorderType:StereoAudioRecorder}. Use this property on \"stopRecording\" to verify the encoder's sample-rates.\r\n         * @property {number} bufferSize - Buffer-size used to encode the WAV container\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     alert('Recorder used this buffer-size: ' + this.bufferSize);\r\n         * });\r\n         */\r\n        bufferSize: 0,\r\n\r\n        /**\r\n         * This works only with {recorderType:StereoAudioRecorder}. Use this property on \"stopRecording\" to verify the encoder's sample-rates.\r\n         * @property {number} sampleRate - Sample-rates used to encode the WAV container\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     alert('Recorder used these sample-rates: ' + this.sampleRate);\r\n         * });\r\n         */\r\n        sampleRate: 0,\r\n\r\n        /**\r\n         * {recorderType:StereoAudioRecorder} returns ArrayBuffer object.\r\n         * @property {ArrayBuffer} buffer - Audio ArrayBuffer, supported only in Chrome.\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @readonly\r\n         * @example\r\n         * recorder.stopRecording(function() {\r\n         *     var arrayBuffer = this.buffer;\r\n         *     alert(arrayBuffer.byteLength);\r\n         * });\r\n         */\r\n        buffer: null,\r\n\r\n        /**\r\n         * This method resets the recorder. So that you can reuse single recorder instance many times.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.reset();\r\n         * recorder.startRecording();\r\n         */\r\n        reset: function() {\r\n            if (self.state === 'recording' && !config.disableLogs) {\r\n                console.warn('Stop an active recorder.');\r\n            }\r\n\r\n            if (mediaRecorder && typeof mediaRecorder.clearRecordedData === 'function') {\r\n                mediaRecorder.clearRecordedData();\r\n            }\r\n            mediaRecorder = null;\r\n            setState('inactive');\r\n            self.blob = null;\r\n        },\r\n\r\n        /**\r\n         * This method is called whenever recorder's state changes. Use this as an \"event\".\r\n         * @property {String} state - A recorder's state can be: recording, paused, stopped or inactive.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @instance\r\n         * @example\r\n         * recorder.onStateChanged = function(state) {\r\n         *     console.log('Recorder state: ', state);\r\n         * };\r\n         */\r\n        onStateChanged: function(state) {\r\n            if (!config.disableLogs) {\r\n                console.log('Recorder state changed:', state);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * A recorder can have inactive, recording, paused or stopped states.\r\n         * @property {String} state - A recorder's state can be: recording, paused, stopped or inactive.\r\n         * @memberof RecordRTC\r\n         * @static\r\n         * @readonly\r\n         * @example\r\n         * // this looper function will keep you updated about the recorder's states.\r\n         * (function looper() {\r\n         *     document.querySelector('h1').innerHTML = 'Recorder\\'s state is: ' + recorder.state;\r\n         *     if(recorder.state === 'stopped') return; // ignore+stop\r\n         *     setTimeout(looper, 1000); // update after every 3-seconds\r\n         * })();\r\n         * recorder.startRecording();\r\n         */\r\n        state: 'inactive',\r\n\r\n        /**\r\n         * Get recorder's readonly state.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @example\r\n         * var state = recorder.getState();\r\n         * @returns {String} Returns recording state.\r\n         */\r\n        getState: function() {\r\n            return self.state;\r\n        },\r\n\r\n        /**\r\n         * Destroy RecordRTC instance. Clear all recorders and objects.\r\n         * @method\r\n         * @memberof RecordRTC\r\n         * @example\r\n         * recorder.destroy();\r\n         */\r\n        destroy: function() {\r\n            var disableLogsCache = config.disableLogs;\r\n\r\n            config = {\r\n                disableLogs: true\r\n            };\r\n            self.reset();\r\n            setState('destroyed');\r\n            returnObject = self = null;\r\n\r\n            if (Storage.AudioContextConstructor) {\r\n                Storage.AudioContextConstructor.close();\r\n                Storage.AudioContextConstructor = null;\r\n            }\r\n\r\n            config.disableLogs = disableLogsCache;\r\n\r\n            if (!config.disableLogs) {\r\n                console.log('RecordRTC is destroyed.');\r\n            }\r\n        },\r\n\r\n        /**\r\n         * RecordRTC version number\r\n         * @property {String} version - Release version number.\r\n         * @memberof RecordRTC\r\n         * @static\r\n         * @readonly\r\n         * @example\r\n         * alert(recorder.version);\r\n         */\r\n        version: '5.6.1'\r\n    };\r\n\r\n    if (!this) {\r\n        self = returnObject;\r\n        return returnObject;\r\n    }\r\n\r\n    // if someone wants to use RecordRTC with the \"new\" keyword.\r\n    for (var prop in returnObject) {\r\n        this[prop] = returnObject[prop];\r\n    }\r\n\r\n    self = this;\r\n\r\n    return returnObject;\r\n}\r\n\r\nRecordRTC.version = '5.6.1';\r\n\r\nif (typeof module !== 'undefined' /* && !!module.exports*/ ) {\r\n    module.exports = RecordRTC;\r\n}\r\n\r\nif (typeof define === 'function' && define.amd) {\r\n    define('RecordRTC', [], function() {\r\n        return RecordRTC;\r\n    });\r\n}\n\r\nRecordRTC.getFromDisk = function(type, callback) {\r\n    if (!callback) {\r\n        throw 'callback is mandatory.';\r\n    }\r\n\r\n    console.log('Getting recorded ' + (type === 'all' ? 'blobs' : type + ' blob ') + ' from disk!');\r\n    DiskStorage.Fetch(function(dataURL, _type) {\r\n        if (type !== 'all' && _type === type + 'Blob' && callback) {\r\n            callback(dataURL);\r\n        }\r\n\r\n        if (type === 'all' && callback) {\r\n            callback(dataURL, _type.replace('Blob', ''));\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * This method can be used to store recorded blobs into IndexedDB storage.\r\n * @param {object} options - {audio: Blob, video: Blob, gif: Blob}\r\n * @method\r\n * @memberof RecordRTC\r\n * @example\r\n * RecordRTC.writeToDisk({\r\n *     audio: audioBlob,\r\n *     video: videoBlob,\r\n *     gif  : gifBlob\r\n * });\r\n */\r\nRecordRTC.writeToDisk = function(options) {\r\n    console.log('Writing recorded blob(s) to disk!');\r\n    options = options || {};\r\n    if (options.audio && options.video && options.gif) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            options.video.getDataURL(function(videoDataURL) {\r\n                options.gif.getDataURL(function(gifDataURL) {\r\n                    DiskStorage.Store({\r\n                        audioBlob: audioDataURL,\r\n                        videoBlob: videoDataURL,\r\n                        gifBlob: gifDataURL\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    } else if (options.audio && options.video) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            options.video.getDataURL(function(videoDataURL) {\r\n                DiskStorage.Store({\r\n                    audioBlob: audioDataURL,\r\n                    videoBlob: videoDataURL\r\n                });\r\n            });\r\n        });\r\n    } else if (options.audio && options.gif) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            options.gif.getDataURL(function(gifDataURL) {\r\n                DiskStorage.Store({\r\n                    audioBlob: audioDataURL,\r\n                    gifBlob: gifDataURL\r\n                });\r\n            });\r\n        });\r\n    } else if (options.video && options.gif) {\r\n        options.video.getDataURL(function(videoDataURL) {\r\n            options.gif.getDataURL(function(gifDataURL) {\r\n                DiskStorage.Store({\r\n                    videoBlob: videoDataURL,\r\n                    gifBlob: gifDataURL\r\n                });\r\n            });\r\n        });\r\n    } else if (options.audio) {\r\n        options.audio.getDataURL(function(audioDataURL) {\r\n            DiskStorage.Store({\r\n                audioBlob: audioDataURL\r\n            });\r\n        });\r\n    } else if (options.video) {\r\n        options.video.getDataURL(function(videoDataURL) {\r\n            DiskStorage.Store({\r\n                videoBlob: videoDataURL\r\n            });\r\n        });\r\n    } else if (options.gif) {\r\n        options.gif.getDataURL(function(gifDataURL) {\r\n            DiskStorage.Store({\r\n                gifBlob: gifDataURL\r\n            });\r\n        });\r\n    }\r\n};\n\r\n// __________________________\r\n// RecordRTC-Configuration.js\r\n\r\n/**\r\n * {@link RecordRTCConfiguration} is an inner/private helper for {@link RecordRTC}.\r\n * @summary It configures the 2nd parameter passed over {@link RecordRTC} and returns a valid \"config\" object.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef RecordRTCConfiguration\r\n * @class\r\n * @example\r\n * var options = RecordRTCConfiguration(mediaStream, options);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {type:\"video\", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, getNativeBlob:true, etc.}\r\n */\r\n\r\nfunction RecordRTCConfiguration(mediaStream, config) {\r\n    if (!config.recorderType && !config.type) {\r\n        if (!!config.audio && !!config.video) {\r\n            config.type = 'video';\r\n        } else if (!!config.audio && !config.video) {\r\n            config.type = 'audio';\r\n        }\r\n    }\r\n\r\n    if (config.recorderType && !config.type) {\r\n        if (config.recorderType === WhammyRecorder || config.recorderType === CanvasRecorder || (typeof WebAssemblyRecorder !== 'undefined' && config.recorderType === WebAssemblyRecorder)) {\r\n            config.type = 'video';\r\n        } else if (config.recorderType === GifRecorder) {\r\n            config.type = 'gif';\r\n        } else if (config.recorderType === StereoAudioRecorder) {\r\n            config.type = 'audio';\r\n        } else if (config.recorderType === MediaStreamRecorder) {\r\n            if (getTracks(mediaStream, 'audio').length && getTracks(mediaStream, 'video').length) {\r\n                config.type = 'video';\r\n            } else if (!getTracks(mediaStream, 'audio').length && getTracks(mediaStream, 'video').length) {\r\n                config.type = 'video';\r\n            } else if (getTracks(mediaStream, 'audio').length && !getTracks(mediaStream, 'video').length) {\r\n                config.type = 'audio';\r\n            } else {\r\n                // config.type = 'UnKnown';\r\n            }\r\n        }\r\n    }\r\n\r\n    if (typeof MediaStreamRecorder !== 'undefined' && typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype) {\r\n        if (!config.mimeType) {\r\n            config.mimeType = 'video/webm';\r\n        }\r\n\r\n        if (!config.type) {\r\n            config.type = config.mimeType.split('/')[0];\r\n        }\r\n\r\n        if (!config.bitsPerSecond) {\r\n            // config.bitsPerSecond = 128000;\r\n        }\r\n    }\r\n\r\n    // consider default type=audio\r\n    if (!config.type) {\r\n        if (config.mimeType) {\r\n            config.type = config.mimeType.split('/')[0];\r\n        }\r\n        if (!config.type) {\r\n            config.type = 'audio';\r\n        }\r\n    }\r\n\r\n    return config;\r\n}\n\r\n// __________________\r\n// GetRecorderType.js\r\n\r\n/**\r\n * {@link GetRecorderType} is an inner/private helper for {@link RecordRTC}.\r\n * @summary It returns best recorder-type available for your browser.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef GetRecorderType\r\n * @class\r\n * @example\r\n * var RecorderType = GetRecorderType(options);\r\n * var recorder = new RecorderType(options);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {type:\"video\", disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}\r\n */\r\n\r\nfunction GetRecorderType(mediaStream, config) {\r\n    var recorder;\r\n\r\n    // StereoAudioRecorder can work with all three: Edge, Firefox and Chrome\r\n    // todo: detect if it is Edge, then auto use: StereoAudioRecorder\r\n    if (isChrome || isEdge || isOpera) {\r\n        // Media Stream Recording API has not been implemented in chrome yet;\r\n        // That's why using WebAudio API to record stereo audio in WAV format\r\n        recorder = StereoAudioRecorder;\r\n    }\r\n\r\n    if (typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype && !isChrome) {\r\n        recorder = MediaStreamRecorder;\r\n    }\r\n\r\n    // video recorder (in WebM format)\r\n    if (config.type === 'video' && (isChrome || isOpera)) {\r\n        recorder = WhammyRecorder;\r\n\r\n        if (typeof WebAssemblyRecorder !== 'undefined' && typeof ReadableStream !== 'undefined') {\r\n            recorder = WebAssemblyRecorder;\r\n        }\r\n    }\r\n\r\n    // video recorder (in Gif format)\r\n    if (config.type === 'gif') {\r\n        recorder = GifRecorder;\r\n    }\r\n\r\n    // html2canvas recording!\r\n    if (config.type === 'canvas') {\r\n        recorder = CanvasRecorder;\r\n    }\r\n\r\n    if (isMediaRecorderCompatible() && recorder !== CanvasRecorder && recorder !== GifRecorder && typeof MediaRecorder !== 'undefined' && 'requestData' in MediaRecorder.prototype) {\r\n        if (getTracks(mediaStream, 'video').length || getTracks(mediaStream, 'audio').length) {\r\n            // audio-only recording\r\n            if (config.type === 'audio') {\r\n                if (typeof MediaRecorder.isTypeSupported === 'function' && MediaRecorder.isTypeSupported('audio/webm')) {\r\n                    recorder = MediaStreamRecorder;\r\n                }\r\n                // else recorder = StereoAudioRecorder;\r\n            } else {\r\n                // video or screen tracks\r\n                if (typeof MediaRecorder.isTypeSupported === 'function' && MediaRecorder.isTypeSupported('video/webm')) {\r\n                    recorder = MediaStreamRecorder;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (mediaStream instanceof Array && mediaStream.length) {\r\n        recorder = MultiStreamRecorder;\r\n    }\r\n\r\n    if (config.recorderType) {\r\n        recorder = config.recorderType;\r\n    }\r\n\r\n    if (!config.disableLogs && !!recorder && !!recorder.name) {\r\n        console.log('Using recorderType:', recorder.name || recorder.constructor.name);\r\n    }\r\n\r\n    if (!recorder && isSafari) {\r\n        recorder = MediaStreamRecorder;\r\n    }\r\n\r\n    return recorder;\r\n}\n\r\n// _____________\r\n// MRecordRTC.js\r\n\r\n/**\r\n * MRecordRTC runs on top of {@link RecordRTC} to bring multiple recordings in a single place, by providing simple API.\r\n * @summary MRecordRTC stands for \"Multiple-RecordRTC\".\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef MRecordRTC\r\n * @class\r\n * @example\r\n * var recorder = new MRecordRTC();\r\n * recorder.addStream(MediaStream);\r\n * recorder.mediaType = {\r\n *     audio: true, // or StereoAudioRecorder or MediaStreamRecorder\r\n *     video: true, // or WhammyRecorder or MediaStreamRecorder or WebAssemblyRecorder or CanvasRecorder\r\n *     gif: true    // or GifRecorder\r\n * };\r\n * // mimeType is optional and should be set only in advance cases.\r\n * recorder.mimeType = {\r\n *     audio: 'audio/wav',\r\n *     video: 'video/webm',\r\n *     gif:   'image/gif'\r\n * };\r\n * recorder.startRecording();\r\n * @see For further information:\r\n * @see {@link https://github.com/muaz-khan/RecordRTC/tree/master/MRecordRTC|MRecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @requires {@link RecordRTC}\r\n */\r\n\r\nfunction MRecordRTC(mediaStream) {\r\n\r\n    /**\r\n     * This method attaches MediaStream object to {@link MRecordRTC}.\r\n     * @param {MediaStream} mediaStream - A MediaStream object, either fetched using getUserMedia API, or generated using captureStreamUntilEnded or WebAudio API.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.addStream(MediaStream);\r\n     */\r\n    this.addStream = function(_mediaStream) {\r\n        if (_mediaStream) {\r\n            mediaStream = _mediaStream;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This property can be used to set the recording type e.g. audio, or video, or gif, or canvas.\r\n     * @property {object} mediaType - {audio: true, video: true, gif: true}\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * var recorder = new MRecordRTC();\r\n     * recorder.mediaType = {\r\n     *     audio: true, // TRUE or StereoAudioRecorder or MediaStreamRecorder\r\n     *     video: true, // TRUE or WhammyRecorder or MediaStreamRecorder or WebAssemblyRecorder or CanvasRecorder\r\n     *     gif  : true  // TRUE or GifRecorder\r\n     * };\r\n     */\r\n    this.mediaType = {\r\n        audio: true,\r\n        video: true\r\n    };\r\n\r\n    /**\r\n     * This method starts recording.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.startRecording();\r\n     */\r\n    this.startRecording = function() {\r\n        var mediaType = this.mediaType;\r\n        var recorderType;\r\n        var mimeType = this.mimeType || {\r\n            audio: null,\r\n            video: null,\r\n            gif: null\r\n        };\r\n\r\n        if (typeof mediaType.audio !== 'function' && isMediaRecorderCompatible() && !getTracks(mediaStream, 'audio').length) {\r\n            mediaType.audio = false;\r\n        }\r\n\r\n        if (typeof mediaType.video !== 'function' && isMediaRecorderCompatible() && !getTracks(mediaStream, 'video').length) {\r\n            mediaType.video = false;\r\n        }\r\n\r\n        if (typeof mediaType.gif !== 'function' && isMediaRecorderCompatible() && !getTracks(mediaStream, 'video').length) {\r\n            mediaType.gif = false;\r\n        }\r\n\r\n        if (!mediaType.audio && !mediaType.video && !mediaType.gif) {\r\n            throw 'MediaStream must have either audio or video tracks.';\r\n        }\r\n\r\n        if (!!mediaType.audio) {\r\n            recorderType = null;\r\n            if (typeof mediaType.audio === 'function') {\r\n                recorderType = mediaType.audio;\r\n            }\r\n\r\n            this.audioRecorder = new RecordRTC(mediaStream, {\r\n                type: 'audio',\r\n                bufferSize: this.bufferSize,\r\n                sampleRate: this.sampleRate,\r\n                numberOfAudioChannels: this.numberOfAudioChannels || 2,\r\n                disableLogs: this.disableLogs,\r\n                recorderType: recorderType,\r\n                mimeType: mimeType.audio,\r\n                timeSlice: this.timeSlice,\r\n                onTimeStamp: this.onTimeStamp\r\n            });\r\n\r\n            if (!mediaType.video) {\r\n                this.audioRecorder.startRecording();\r\n            }\r\n        }\r\n\r\n        if (!!mediaType.video) {\r\n            recorderType = null;\r\n            if (typeof mediaType.video === 'function') {\r\n                recorderType = mediaType.video;\r\n            }\r\n\r\n            var newStream = mediaStream;\r\n\r\n            if (isMediaRecorderCompatible() && !!mediaType.audio && typeof mediaType.audio === 'function') {\r\n                var videoTrack = getTracks(mediaStream, 'video')[0];\r\n\r\n                if (isFirefox) {\r\n                    newStream = new MediaStream();\r\n                    newStream.addTrack(videoTrack);\r\n\r\n                    if (recorderType && recorderType === WhammyRecorder) {\r\n                        // Firefox does NOT supports webp-encoding yet\r\n                        // But Firefox do supports WebAssemblyRecorder\r\n                        recorderType = MediaStreamRecorder;\r\n                    }\r\n                } else {\r\n                    newStream = new MediaStream();\r\n                    newStream.addTrack(videoTrack);\r\n                }\r\n            }\r\n\r\n            this.videoRecorder = new RecordRTC(newStream, {\r\n                type: 'video',\r\n                video: this.video,\r\n                canvas: this.canvas,\r\n                frameInterval: this.frameInterval || 10,\r\n                disableLogs: this.disableLogs,\r\n                recorderType: recorderType,\r\n                mimeType: mimeType.video,\r\n                timeSlice: this.timeSlice,\r\n                onTimeStamp: this.onTimeStamp,\r\n                workerPath: this.workerPath,\r\n                webAssemblyPath: this.webAssemblyPath,\r\n                frameRate: this.frameRate, // used by WebAssemblyRecorder; values: usually 30; accepts any.\r\n                bitrate: this.bitrate // used by WebAssemblyRecorder; values: 0 to 1000+\r\n            });\r\n\r\n            if (!mediaType.audio) {\r\n                this.videoRecorder.startRecording();\r\n            }\r\n        }\r\n\r\n        if (!!mediaType.audio && !!mediaType.video) {\r\n            var self = this;\r\n\r\n            var isSingleRecorder = isMediaRecorderCompatible() === true;\r\n\r\n            if (mediaType.audio instanceof StereoAudioRecorder && !!mediaType.video) {\r\n                isSingleRecorder = false;\r\n            } else if (mediaType.audio !== true && mediaType.video !== true && mediaType.audio !== mediaType.video) {\r\n                isSingleRecorder = false;\r\n            }\r\n\r\n            if (isSingleRecorder === true) {\r\n                self.audioRecorder = null;\r\n                self.videoRecorder.startRecording();\r\n            } else {\r\n                self.videoRecorder.initRecorder(function() {\r\n                    self.audioRecorder.initRecorder(function() {\r\n                        // Both recorders are ready to record things accurately\r\n                        self.videoRecorder.startRecording();\r\n                        self.audioRecorder.startRecording();\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n        if (!!mediaType.gif) {\r\n            recorderType = null;\r\n            if (typeof mediaType.gif === 'function') {\r\n                recorderType = mediaType.gif;\r\n            }\r\n            this.gifRecorder = new RecordRTC(mediaStream, {\r\n                type: 'gif',\r\n                frameRate: this.frameRate || 200,\r\n                quality: this.quality || 10,\r\n                disableLogs: this.disableLogs,\r\n                recorderType: recorderType,\r\n                mimeType: mimeType.gif\r\n            });\r\n            this.gifRecorder.startRecording();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method stops recording.\r\n     * @param {function} callback - Callback function is invoked when all encoders finished their jobs.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.stopRecording(function(recording){\r\n     *     var audioBlob = recording.audio;\r\n     *     var videoBlob = recording.video;\r\n     *     var gifBlob   = recording.gif;\r\n     * });\r\n     */\r\n    this.stopRecording = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.stopRecording(function(blobURL) {\r\n                callback(blobURL, 'audio');\r\n            });\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.stopRecording(function(blobURL) {\r\n                callback(blobURL, 'video');\r\n            });\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.stopRecording(function(blobURL) {\r\n                callback(blobURL, 'gif');\r\n            });\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method pauses recording.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.pauseRecording();\r\n     */\r\n    this.pauseRecording = function() {\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.pauseRecording();\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.pauseRecording();\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.pauseRecording();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes recording.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.resumeRecording();\r\n     */\r\n    this.resumeRecording = function() {\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.resumeRecording();\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.resumeRecording();\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.resumeRecording();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method can be used to manually get all recorded blobs.\r\n     * @param {function} callback - All recorded blobs are passed back to the \"callback\" function.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.getBlob(function(recording){\r\n     *     var audioBlob = recording.audio;\r\n     *     var videoBlob = recording.video;\r\n     *     var gifBlob   = recording.gif;\r\n     * });\r\n     * // or\r\n     * var audioBlob = recorder.getBlob().audio;\r\n     * var videoBlob = recorder.getBlob().video;\r\n     */\r\n    this.getBlob = function(callback) {\r\n        var output = {};\r\n\r\n        if (this.audioRecorder) {\r\n            output.audio = this.audioRecorder.getBlob();\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            output.video = this.videoRecorder.getBlob();\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            output.gif = this.gifRecorder.getBlob();\r\n        }\r\n\r\n        if (callback) {\r\n            callback(output);\r\n        }\r\n\r\n        return output;\r\n    };\r\n\r\n    /**\r\n     * Destroy all recorder instances.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.destroy();\r\n     */\r\n    this.destroy = function() {\r\n        if (this.audioRecorder) {\r\n            this.audioRecorder.destroy();\r\n            this.audioRecorder = null;\r\n        }\r\n\r\n        if (this.videoRecorder) {\r\n            this.videoRecorder.destroy();\r\n            this.videoRecorder = null;\r\n        }\r\n\r\n        if (this.gifRecorder) {\r\n            this.gifRecorder.destroy();\r\n            this.gifRecorder = null;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method can be used to manually get all recorded blobs' DataURLs.\r\n     * @param {function} callback - All recorded blobs' DataURLs are passed back to the \"callback\" function.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.getDataURL(function(recording){\r\n     *     var audioDataURL = recording.audio;\r\n     *     var videoDataURL = recording.video;\r\n     *     var gifDataURL   = recording.gif;\r\n     * });\r\n     */\r\n    this.getDataURL = function(callback) {\r\n        this.getBlob(function(blob) {\r\n            if (blob.audio && blob.video) {\r\n                getDataURL(blob.audio, function(_audioDataURL) {\r\n                    getDataURL(blob.video, function(_videoDataURL) {\r\n                        callback({\r\n                            audio: _audioDataURL,\r\n                            video: _videoDataURL\r\n                        });\r\n                    });\r\n                });\r\n            } else if (blob.audio) {\r\n                getDataURL(blob.audio, function(_audioDataURL) {\r\n                    callback({\r\n                        audio: _audioDataURL\r\n                    });\r\n                });\r\n            } else if (blob.video) {\r\n                getDataURL(blob.video, function(_videoDataURL) {\r\n                    callback({\r\n                        video: _videoDataURL\r\n                    });\r\n                });\r\n            }\r\n        });\r\n\r\n        function getDataURL(blob, callback00) {\r\n            if (typeof Worker !== 'undefined') {\r\n                var webWorker = processInWebWorker(function readFile(_blob) {\r\n                    postMessage(new FileReaderSync().readAsDataURL(_blob));\r\n                });\r\n\r\n                webWorker.onmessage = function(event) {\r\n                    callback00(event.data);\r\n                };\r\n\r\n                webWorker.postMessage(blob);\r\n            } else {\r\n                var reader = new FileReader();\r\n                reader.readAsDataURL(blob);\r\n                reader.onload = function(event) {\r\n                    callback00(event.target.result);\r\n                };\r\n            }\r\n        }\r\n\r\n        function processInWebWorker(_function) {\r\n            var blob = URL.createObjectURL(new Blob([_function.toString(),\r\n                'this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\r\n            ], {\r\n                type: 'application/javascript'\r\n            }));\r\n\r\n            var worker = new Worker(blob);\r\n            var url;\r\n            if (typeof URL !== 'undefined') {\r\n                url = URL;\r\n            } else if (typeof webkitURL !== 'undefined') {\r\n                url = webkitURL;\r\n            } else {\r\n                throw 'Neither URL nor webkitURL detected.';\r\n            }\r\n            url.revokeObjectURL(blob);\r\n            return worker;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method can be used to ask {@link MRecordRTC} to write all recorded blobs into IndexedDB storage.\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.writeToDisk();\r\n     */\r\n    this.writeToDisk = function() {\r\n        RecordRTC.writeToDisk({\r\n            audio: this.audioRecorder,\r\n            video: this.videoRecorder,\r\n            gif: this.gifRecorder\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method can be used to invoke a save-as dialog for all recorded blobs.\r\n     * @param {object} args - {audio: 'audio-name', video: 'video-name', gif: 'gif-name'}\r\n     * @method\r\n     * @memberof MRecordRTC\r\n     * @example\r\n     * recorder.save({\r\n     *     audio: 'audio-file-name',\r\n     *     video: 'video-file-name',\r\n     *     gif  : 'gif-file-name'\r\n     * });\r\n     */\r\n    this.save = function(args) {\r\n        args = args || {\r\n            audio: true,\r\n            video: true,\r\n            gif: true\r\n        };\r\n\r\n        if (!!args.audio && this.audioRecorder) {\r\n            this.audioRecorder.save(typeof args.audio === 'string' ? args.audio : '');\r\n        }\r\n\r\n        if (!!args.video && this.videoRecorder) {\r\n            this.videoRecorder.save(typeof args.video === 'string' ? args.video : '');\r\n        }\r\n        if (!!args.gif && this.gifRecorder) {\r\n            this.gifRecorder.save(typeof args.gif === 'string' ? args.gif : '');\r\n        }\r\n    };\r\n}\r\n\r\n/**\r\n * This method can be used to get all recorded blobs from IndexedDB storage.\r\n * @param {string} type - 'all' or 'audio' or 'video' or 'gif'\r\n * @param {function} callback - Callback function to get all stored blobs.\r\n * @method\r\n * @memberof MRecordRTC\r\n * @example\r\n * MRecordRTC.getFromDisk('all', function(dataURL, type){\r\n *     if(type === 'audio') { }\r\n *     if(type === 'video') { }\r\n *     if(type === 'gif')   { }\r\n * });\r\n */\r\nMRecordRTC.getFromDisk = RecordRTC.getFromDisk;\r\n\r\n/**\r\n * This method can be used to store recorded blobs into IndexedDB storage.\r\n * @param {object} options - {audio: Blob, video: Blob, gif: Blob}\r\n * @method\r\n * @memberof MRecordRTC\r\n * @example\r\n * MRecordRTC.writeToDisk({\r\n *     audio: audioBlob,\r\n *     video: videoBlob,\r\n *     gif  : gifBlob\r\n * });\r\n */\r\nMRecordRTC.writeToDisk = RecordRTC.writeToDisk;\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.MRecordRTC = MRecordRTC;\r\n}\n\r\nvar browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\r\n\r\n(function(that) {\r\n    if (!that) {\r\n        return;\r\n    }\r\n\r\n    if (typeof window !== 'undefined') {\r\n        return;\r\n    }\r\n\r\n    if (typeof global === 'undefined') {\r\n        return;\r\n    }\r\n\r\n    global.navigator = {\r\n        userAgent: browserFakeUserAgent,\r\n        getUserMedia: function() {}\r\n    };\r\n\r\n    if (!global.console) {\r\n        global.console = {};\r\n    }\r\n\r\n    if (typeof global.console.log === 'undefined' || typeof global.console.error === 'undefined') {\r\n        global.console.error = global.console.log = global.console.log || function() {\r\n            console.log(arguments);\r\n        };\r\n    }\r\n\r\n    if (typeof document === 'undefined') {\r\n        /*global document:true */\r\n        that.document = {\r\n            documentElement: {\r\n                appendChild: function() {\r\n                    return '';\r\n                }\r\n            }\r\n        };\r\n\r\n        document.createElement = document.captureStream = document.mozCaptureStream = function() {\r\n            var obj = {\r\n                getContext: function() {\r\n                    return obj;\r\n                },\r\n                play: function() {},\r\n                pause: function() {},\r\n                drawImage: function() {},\r\n                toDataURL: function() {\r\n                    return '';\r\n                },\r\n                style: {}\r\n            };\r\n            return obj;\r\n        };\r\n\r\n        that.HTMLVideoElement = function() {};\r\n    }\r\n\r\n    if (typeof location === 'undefined') {\r\n        /*global location:true */\r\n        that.location = {\r\n            protocol: 'file:',\r\n            href: '',\r\n            hash: ''\r\n        };\r\n    }\r\n\r\n    if (typeof screen === 'undefined') {\r\n        /*global screen:true */\r\n        that.screen = {\r\n            width: 0,\r\n            height: 0\r\n        };\r\n    }\r\n\r\n    if (typeof URL === 'undefined') {\r\n        /*global screen:true */\r\n        that.URL = {\r\n            createObjectURL: function() {\r\n                return '';\r\n            },\r\n            revokeObjectURL: function() {\r\n                return '';\r\n            }\r\n        };\r\n    }\r\n\r\n    /*global window:true */\r\n    that.window = global;\r\n})(typeof global !== 'undefined' ? global : null);\n\r\n// _____________________________\r\n// Cross-Browser-Declarations.js\r\n\r\n// animation-frame used in WebM recording\r\n\r\n/*jshint -W079 */\r\nvar requestAnimationFrame = window.requestAnimationFrame;\r\nif (typeof requestAnimationFrame === 'undefined') {\r\n    if (typeof webkitRequestAnimationFrame !== 'undefined') {\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = webkitRequestAnimationFrame;\r\n    } else if (typeof mozRequestAnimationFrame !== 'undefined') {\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = mozRequestAnimationFrame;\r\n    } else if (typeof msRequestAnimationFrame !== 'undefined') {\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = msRequestAnimationFrame;\r\n    } else if (typeof requestAnimationFrame === 'undefined') {\r\n        // via: https://gist.github.com/paulirish/1579671\r\n        var lastTime = 0;\r\n\r\n        /*global requestAnimationFrame:true */\r\n        requestAnimationFrame = function(callback, element) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = setTimeout(function() {\r\n                callback(currTime + timeToCall);\r\n            }, timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n    }\r\n}\r\n\r\n/*jshint -W079 */\r\nvar cancelAnimationFrame = window.cancelAnimationFrame;\r\nif (typeof cancelAnimationFrame === 'undefined') {\r\n    if (typeof webkitCancelAnimationFrame !== 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = webkitCancelAnimationFrame;\r\n    } else if (typeof mozCancelAnimationFrame !== 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = mozCancelAnimationFrame;\r\n    } else if (typeof msCancelAnimationFrame !== 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = msCancelAnimationFrame;\r\n    } else if (typeof cancelAnimationFrame === 'undefined') {\r\n        /*global cancelAnimationFrame:true */\r\n        cancelAnimationFrame = function(id) {\r\n            clearTimeout(id);\r\n        };\r\n    }\r\n}\r\n\r\n// WebAudio API representer\r\nvar AudioContext = window.AudioContext;\r\n\r\nif (typeof AudioContext === 'undefined') {\r\n    if (typeof webkitAudioContext !== 'undefined') {\r\n        /*global AudioContext:true */\r\n        AudioContext = webkitAudioContext;\r\n    }\r\n\r\n    if (typeof mozAudioContext !== 'undefined') {\r\n        /*global AudioContext:true */\r\n        AudioContext = mozAudioContext;\r\n    }\r\n}\r\n\r\n/*jshint -W079 */\r\nvar URL = window.URL;\r\n\r\nif (typeof URL === 'undefined' && typeof webkitURL !== 'undefined') {\r\n    /*global URL:true */\r\n    URL = webkitURL;\r\n}\r\n\r\nif (typeof navigator !== 'undefined' && typeof navigator.getUserMedia === 'undefined') { // maybe window.navigator?\r\n    if (typeof navigator.webkitGetUserMedia !== 'undefined') {\r\n        navigator.getUserMedia = navigator.webkitGetUserMedia;\r\n    }\r\n\r\n    if (typeof navigator.mozGetUserMedia !== 'undefined') {\r\n        navigator.getUserMedia = navigator.mozGetUserMedia;\r\n    }\r\n}\r\n\r\nvar isEdge = navigator.userAgent.indexOf('Edge') !== -1 && (!!navigator.msSaveBlob || !!navigator.msSaveOrOpenBlob);\r\nvar isOpera = !!window.opera || navigator.userAgent.indexOf('OPR/') !== -1;\r\nvar isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1 && ('netscape' in window) && / rv:/.test(navigator.userAgent);\r\nvar isChrome = (!isOpera && !isEdge && !!navigator.webkitGetUserMedia) || isElectron() || navigator.userAgent.toLowerCase().indexOf('chrome/') !== -1;\r\n\r\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\n\r\nif (isSafari && !isChrome && navigator.userAgent.indexOf('CriOS') !== -1) {\r\n    isSafari = false;\r\n    isChrome = true;\r\n}\r\n\r\nvar MediaStream = window.MediaStream;\r\n\r\nif (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\r\n    MediaStream = webkitMediaStream;\r\n}\r\n\r\n/*global MediaStream:true */\r\nif (typeof MediaStream !== 'undefined') {\r\n    // override \"stop\" method for all browsers\r\n    if (typeof MediaStream.prototype.stop === 'undefined') {\r\n        MediaStream.prototype.stop = function() {\r\n            this.getTracks().forEach(function(track) {\r\n                track.stop();\r\n            });\r\n        };\r\n    }\r\n}\r\n\r\n// below function via: http://goo.gl/B3ae8c\r\n/**\r\n * Return human-readable file size.\r\n * @param {number} bytes - Pass bytes and get formatted string.\r\n * @returns {string} - formatted string\r\n * @example\r\n * bytesToSize(1024*1024*5) === '5 GB'\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\nfunction bytesToSize(bytes) {\r\n    var k = 1000;\r\n    var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];\r\n    if (bytes === 0) {\r\n        return '0 Bytes';\r\n    }\r\n    var i = parseInt(Math.floor(Math.log(bytes) / Math.log(k)), 10);\r\n    return (bytes / Math.pow(k, i)).toPrecision(3) + ' ' + sizes[i];\r\n}\r\n\r\n/**\r\n * @param {Blob} file - File or Blob object. This parameter is required.\r\n * @param {string} fileName - Optional file name e.g. \"Recorded-Video.webm\"\r\n * @example\r\n * invokeSaveAsDialog(blob or file, [optional] fileName);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\nfunction invokeSaveAsDialog(file, fileName) {\r\n    if (!file) {\r\n        throw 'Blob object is required.';\r\n    }\r\n\r\n    if (!file.type) {\r\n        try {\r\n            file.type = 'video/webm';\r\n        } catch (e) {}\r\n    }\r\n\r\n    var fileExtension = (file.type || 'video/webm').split('/')[1];\r\n\r\n    if (fileName && fileName.indexOf('.') !== -1) {\r\n        var splitted = fileName.split('.');\r\n        fileName = splitted[0];\r\n        fileExtension = splitted[1];\r\n    }\r\n\r\n    var fileFullName = (fileName || (Math.round(Math.random() * 9999999999) + 888888888)) + '.' + fileExtension;\r\n\r\n    if (typeof navigator.msSaveOrOpenBlob !== 'undefined') {\r\n        return navigator.msSaveOrOpenBlob(file, fileFullName);\r\n    } else if (typeof navigator.msSaveBlob !== 'undefined') {\r\n        return navigator.msSaveBlob(file, fileFullName);\r\n    }\r\n\r\n    var hyperlink = document.createElement('a');\r\n    hyperlink.href = URL.createObjectURL(file);\r\n    hyperlink.download = fileFullName;\r\n\r\n    hyperlink.style = 'display:none;opacity:0;color:transparent;';\r\n    (document.body || document.documentElement).appendChild(hyperlink);\r\n\r\n    if (typeof hyperlink.click === 'function') {\r\n        hyperlink.click();\r\n    } else {\r\n        hyperlink.target = '_blank';\r\n        hyperlink.dispatchEvent(new MouseEvent('click', {\r\n            view: window,\r\n            bubbles: true,\r\n            cancelable: true\r\n        }));\r\n    }\r\n\r\n    URL.revokeObjectURL(hyperlink.href);\r\n}\r\n\r\n/**\r\n * from: https://github.com/cheton/is-electron/blob/master/index.js\r\n **/\r\nfunction isElectron() {\r\n    // Renderer process\r\n    if (typeof window !== 'undefined' && typeof window.process === 'object' && window.process.type === 'renderer') {\r\n        return true;\r\n    }\r\n\r\n    // Main process\r\n    if (typeof process !== 'undefined' && typeof process.versions === 'object' && !!process.versions.electron) {\r\n        return true;\r\n    }\r\n\r\n    // Detect the user agent when the `nodeIntegration` option is set to true\r\n    if (typeof navigator === 'object' && typeof navigator.userAgent === 'string' && navigator.userAgent.indexOf('Electron') >= 0) {\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\nfunction getTracks(stream, kind) {\r\n    if (!stream || !stream.getTracks) {\r\n        return [];\r\n    }\r\n\r\n    return stream.getTracks().filter(function(t) {\r\n        return t.kind === (kind || 'audio');\r\n    });\r\n}\r\n\r\nfunction setSrcObject(stream, element) {\r\n    if ('srcObject' in element) {\r\n        element.srcObject = stream;\r\n    } else if ('mozSrcObject' in element) {\r\n        element.mozSrcObject = stream;\r\n    } else {\r\n        element.srcObject = stream;\r\n    }\r\n}\r\n\r\n/**\r\n * @param {Blob} file - File or Blob object.\r\n * @param {function} callback - Callback function.\r\n * @example\r\n * getSeekableBlob(blob or file, callback);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\nfunction getSeekableBlob(inputBlob, callback) {\r\n    // EBML.js copyrights goes to: https://github.com/legokichi/ts-ebml\r\n    if (typeof EBML === 'undefined') {\r\n        throw new Error('Please link: https://www.webrtc-experiment.com/EBML.js');\r\n    }\r\n\r\n    var reader = new EBML.Reader();\r\n    var decoder = new EBML.Decoder();\r\n    var tools = EBML.tools;\r\n\r\n    var fileReader = new FileReader();\r\n    fileReader.onload = function(e) {\r\n        var ebmlElms = decoder.decode(this.result);\r\n        ebmlElms.forEach(function(element) {\r\n            reader.read(element);\r\n        });\r\n        reader.stop();\r\n        var refinedMetadataBuf = tools.makeMetadataSeekable(reader.metadatas, reader.duration, reader.cues);\r\n        var body = this.result.slice(reader.metadataSize);\r\n        var newBlob = new Blob([refinedMetadataBuf, body], {\r\n            type: 'video/webm'\r\n        });\r\n\r\n        callback(newBlob);\r\n    };\r\n    fileReader.readAsArrayBuffer(inputBlob);\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.invokeSaveAsDialog = invokeSaveAsDialog;\r\n    RecordRTC.getTracks = getTracks;\r\n    RecordRTC.getSeekableBlob = getSeekableBlob;\r\n    RecordRTC.bytesToSize = bytesToSize;\r\n    RecordRTC.isElectron = isElectron;\r\n}\n\r\n// __________ (used to handle stuff like http://goo.gl/xmE5eg) issue #129\r\n// Storage.js\r\n\r\n/**\r\n * Storage is a standalone object used by {@link RecordRTC} to store reusable objects e.g. \"new AudioContext\".\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @example\r\n * Storage.AudioContext === webkitAudioContext\r\n * @property {webkitAudioContext} AudioContext - Keeps a reference to AudioContext object.\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\n\r\nvar Storage = {};\r\n\r\nif (typeof AudioContext !== 'undefined') {\r\n    Storage.AudioContext = AudioContext;\r\n} else if (typeof webkitAudioContext !== 'undefined') {\r\n    Storage.AudioContext = webkitAudioContext;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.Storage = Storage;\r\n}\n\r\nfunction isMediaRecorderCompatible() {\r\n    if (isFirefox || isSafari || isEdge) {\r\n        return true;\r\n    }\r\n\r\n    var nVer = navigator.appVersion;\r\n    var nAgt = navigator.userAgent;\r\n    var fullVersion = '' + parseFloat(navigator.appVersion);\r\n    var majorVersion = parseInt(navigator.appVersion, 10);\r\n    var nameOffset, verOffset, ix;\r\n\r\n    if (isChrome || isOpera) {\r\n        verOffset = nAgt.indexOf('Chrome');\r\n        fullVersion = nAgt.substring(verOffset + 7);\r\n    }\r\n\r\n    // trim the fullVersion string at semicolon/space if present\r\n    if ((ix = fullVersion.indexOf(';')) !== -1) {\r\n        fullVersion = fullVersion.substring(0, ix);\r\n    }\r\n\r\n    if ((ix = fullVersion.indexOf(' ')) !== -1) {\r\n        fullVersion = fullVersion.substring(0, ix);\r\n    }\r\n\r\n    majorVersion = parseInt('' + fullVersion, 10);\r\n\r\n    if (isNaN(majorVersion)) {\r\n        fullVersion = '' + parseFloat(navigator.appVersion);\r\n        majorVersion = parseInt(navigator.appVersion, 10);\r\n    }\r\n\r\n    return majorVersion >= 49;\r\n}\n\r\n// ______________________\r\n// MediaStreamRecorder.js\r\n\r\n/**\r\n * MediaStreamRecorder is an abstraction layer for {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}. It is used by {@link RecordRTC} to record MediaStream(s) in both Chrome and Firefox.\r\n * @summary Runs top over {@link https://w3c.github.io/mediacapture-record/MediaRecorder.html|MediaRecorder API}.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://github.com/muaz-khan|Muaz Khan}\r\n * @typedef MediaStreamRecorder\r\n * @class\r\n * @example\r\n * var config = {\r\n *     mimeType: 'video/webm', // vp8, vp9, h264, mkv, opus/vorbis\r\n *     audioBitsPerSecond : 256 * 8 * 1024,\r\n *     videoBitsPerSecond : 256 * 8 * 1024,\r\n *     bitsPerSecond: 256 * 8 * 1024,  // if this is provided, skip above two\r\n *     checkForInactiveTracks: true,\r\n *     timeSlice: 1000, // concatenate intervals based blobs\r\n *     ondataavailable: function() {} // get intervals based blobs\r\n * }\r\n * var recorder = new MediaStreamRecorder(mediaStream, config);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n *\r\n *     // or\r\n *     var blob = recorder.blob;\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {disableLogs:true, initCallback: function, mimeType: \"video/webm\", timeSlice: 1000}\r\n * @throws Will throw an error if first argument \"MediaStream\" is missing. Also throws error if \"MediaRecorder API\" are not supported by the browser.\r\n */\r\n\r\nfunction MediaStreamRecorder(mediaStream, config) {\r\n    var self = this;\r\n\r\n    if (typeof mediaStream === 'undefined') {\r\n        throw 'First argument \"MediaStream\" is required.';\r\n    }\r\n\r\n    if (typeof MediaRecorder === 'undefined') {\r\n        throw 'Your browser does not support the Media Recorder API. Please try other modules e.g. WhammyRecorder or StereoAudioRecorder.';\r\n    }\r\n\r\n    config = config || {\r\n        // bitsPerSecond: 256 * 8 * 1024,\r\n        mimeType: 'video/webm'\r\n    };\r\n\r\n    if (config.type === 'audio') {\r\n        if (getTracks(mediaStream, 'video').length && getTracks(mediaStream, 'audio').length) {\r\n            var stream;\r\n            if (!!navigator.mozGetUserMedia) {\r\n                stream = new MediaStream();\r\n                stream.addTrack(getTracks(mediaStream, 'audio')[0]);\r\n            } else {\r\n                // webkitMediaStream\r\n                stream = new MediaStream(getTracks(mediaStream, 'audio'));\r\n            }\r\n            mediaStream = stream;\r\n        }\r\n\r\n        if (!config.mimeType || config.mimeType.toString().toLowerCase().indexOf('audio') === -1) {\r\n            config.mimeType = isChrome ? 'audio/webm' : 'audio/ogg';\r\n        }\r\n\r\n        if (config.mimeType && config.mimeType.toString().toLowerCase() !== 'audio/ogg' && !!navigator.mozGetUserMedia) {\r\n            // forcing better codecs on Firefox (via #166)\r\n            config.mimeType = 'audio/ogg';\r\n        }\r\n    }\r\n\r\n    var arrayOfBlobs = [];\r\n\r\n    /**\r\n     * This method returns array of blobs. Use only with \"timeSlice\". Its useful to preview recording anytime, without using the \"stop\" method.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * var arrayOfBlobs = recorder.getArrayOfBlobs();\r\n     * @returns {Array} Returns array of recorded blobs.\r\n     */\r\n    this.getArrayOfBlobs = function() {\r\n        return arrayOfBlobs;\r\n    };\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        // set defaults\r\n        self.blob = null;\r\n        self.clearRecordedData();\r\n        self.timestamps = [];\r\n        allStates = [];\r\n        arrayOfBlobs = [];\r\n\r\n        var recorderHints = config;\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Passing following config over MediaRecorder API.', recorderHints);\r\n        }\r\n\r\n        if (mediaRecorder) {\r\n            // mandatory to make sure Firefox doesn't fails to record streams 3-4 times without reloading the page.\r\n            mediaRecorder = null;\r\n        }\r\n\r\n        if (isChrome && !isMediaRecorderCompatible()) {\r\n            // to support video-only recording on stable\r\n            recorderHints = 'video/vp8';\r\n        }\r\n\r\n        if (typeof MediaRecorder.isTypeSupported === 'function' && recorderHints.mimeType) {\r\n            if (!MediaRecorder.isTypeSupported(recorderHints.mimeType)) {\r\n                if (!config.disableLogs) {\r\n                    console.warn('MediaRecorder API seems unable to record mimeType:', recorderHints.mimeType);\r\n                }\r\n\r\n                recorderHints.mimeType = config.type === 'audio' ? 'audio/webm' : 'video/webm';\r\n            }\r\n        }\r\n\r\n        // using MediaRecorder API here\r\n        try {\r\n            mediaRecorder = new MediaRecorder(mediaStream, recorderHints);\r\n\r\n            // reset\r\n            config.mimeType = recorderHints.mimeType;\r\n        } catch (e) {\r\n            // chrome-based fallback\r\n            mediaRecorder = new MediaRecorder(mediaStream);\r\n        }\r\n\r\n        // old hack?\r\n        if (recorderHints.mimeType && !MediaRecorder.isTypeSupported && 'canRecordMimeType' in mediaRecorder && mediaRecorder.canRecordMimeType(recorderHints.mimeType) === false) {\r\n            if (!config.disableLogs) {\r\n                console.warn('MediaRecorder API seems unable to record mimeType:', recorderHints.mimeType);\r\n            }\r\n        }\r\n\r\n        // Dispatching OnDataAvailable Handler\r\n        mediaRecorder.ondataavailable = function(e) {\r\n            if (e.data) {\r\n                allStates.push('ondataavailable: ' + bytesToSize(e.data.size));\r\n            }\r\n\r\n            if (typeof config.timeSlice === 'number') {\r\n                if (e.data && e.data.size && e.data.size > 100) {\r\n                    arrayOfBlobs.push(e.data);\r\n                    updateTimeStamp();\r\n\r\n                    if (typeof config.ondataavailable === 'function') {\r\n                        // intervals based blobs\r\n                        var blob = config.getNativeBlob ? e.data : new Blob([e.data], {\r\n                            type: getMimeType(recorderHints)\r\n                        });\r\n                        config.ondataavailable(blob);\r\n                    }\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (!e.data || !e.data.size || e.data.size < 100 || self.blob) {\r\n                // make sure that stopRecording always getting fired\r\n                // even if there is invalid data\r\n                if (self.recordingCallback) {\r\n                    self.recordingCallback(new Blob([], {\r\n                        type: getMimeType(recorderHints)\r\n                    }));\r\n                    self.recordingCallback = null;\r\n                }\r\n                return;\r\n            }\r\n\r\n            self.blob = config.getNativeBlob ? e.data : new Blob([e.data], {\r\n                type: getMimeType(recorderHints)\r\n            });\r\n\r\n            if (self.recordingCallback) {\r\n                self.recordingCallback(self.blob);\r\n                self.recordingCallback = null;\r\n            }\r\n        };\r\n\r\n        mediaRecorder.onstart = function() {\r\n            allStates.push('started');\r\n        };\r\n\r\n        mediaRecorder.onpause = function() {\r\n            allStates.push('paused');\r\n        };\r\n\r\n        mediaRecorder.onresume = function() {\r\n            allStates.push('resumed');\r\n        };\r\n\r\n        mediaRecorder.onstop = function() {\r\n            allStates.push('stopped');\r\n        };\r\n\r\n        mediaRecorder.onerror = function(error) {\r\n            if (!error) {\r\n                return;\r\n            }\r\n\r\n            if (!error.name) {\r\n                error.name = 'UnknownError';\r\n            }\r\n\r\n            allStates.push('error: ' + error);\r\n\r\n            if (!config.disableLogs) {\r\n                // via: https://w3c.github.io/mediacapture-record/MediaRecorder.html#exception-summary\r\n                if (error.name.toString().toLowerCase().indexOf('invalidstate') !== -1) {\r\n                    console.error('The MediaRecorder is not in a state in which the proposed operation is allowed to be executed.', error);\r\n                } else if (error.name.toString().toLowerCase().indexOf('notsupported') !== -1) {\r\n                    console.error('MIME type (', recorderHints.mimeType, ') is not supported.', error);\r\n                } else if (error.name.toString().toLowerCase().indexOf('security') !== -1) {\r\n                    console.error('MediaRecorder security error', error);\r\n                }\r\n\r\n                // older code below\r\n                else if (error.name === 'OutOfMemory') {\r\n                    console.error('The UA has exhaused the available memory. User agents SHOULD provide as much additional information as possible in the message attribute.', error);\r\n                } else if (error.name === 'IllegalStreamModification') {\r\n                    console.error('A modification to the stream has occurred that makes it impossible to continue recording. An example would be the addition of a Track while recording is occurring. User agents SHOULD provide as much additional information as possible in the message attribute.', error);\r\n                } else if (error.name === 'OtherRecordingError') {\r\n                    console.error('Used for an fatal error other than those listed above. User agents SHOULD provide as much additional information as possible in the message attribute.', error);\r\n                } else if (error.name === 'GenericError') {\r\n                    console.error('The UA cannot provide the codec or recording option that has been requested.', error);\r\n                } else {\r\n                    console.error('MediaRecorder Error', error);\r\n                }\r\n            }\r\n\r\n            (function(looper) {\r\n                if (!self.manuallyStopped && mediaRecorder && mediaRecorder.state === 'inactive') {\r\n                    delete config.timeslice;\r\n\r\n                    // 10 minutes, enough?\r\n                    mediaRecorder.start(10 * 60 * 1000);\r\n                    return;\r\n                }\r\n\r\n                setTimeout(looper, 1000);\r\n            })();\r\n\r\n            if (mediaRecorder.state !== 'inactive' && mediaRecorder.state !== 'stopped') {\r\n                mediaRecorder.stop();\r\n            }\r\n        };\r\n\r\n        if (typeof config.timeSlice === 'number') {\r\n            updateTimeStamp();\r\n            mediaRecorder.start(config.timeSlice);\r\n        } else {\r\n            // default is 60 minutes; enough?\r\n            // use config => {timeSlice: 1000} otherwise\r\n\r\n            mediaRecorder.start(3.6e+6);\r\n        }\r\n\r\n        if (config.initCallback) {\r\n            config.initCallback(); // old code\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @property {Array} timestamps - Array of time stamps\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * console.log(recorder.timestamps);\r\n     */\r\n    this.timestamps = [];\r\n\r\n    function updateTimeStamp() {\r\n        self.timestamps.push(new Date().getTime());\r\n\r\n        if (typeof config.onTimeStamp === 'function') {\r\n            config.onTimeStamp(self.timestamps[self.timestamps.length - 1], self.timestamps);\r\n        }\r\n    }\r\n\r\n    function getMimeType(secondObject) {\r\n        if (mediaRecorder && mediaRecorder.mimeType) {\r\n            return mediaRecorder.mimeType;\r\n        }\r\n\r\n        return secondObject.mimeType || 'video/webm';\r\n    }\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        self.manuallyStopped = true; // used inside the mediaRecorder.onerror\r\n\r\n        if (!mediaRecorder) {\r\n            return;\r\n        }\r\n\r\n        this.recordingCallback = callback;\r\n\r\n        if (mediaRecorder.state === 'recording') {\r\n            mediaRecorder.stop();\r\n        }\r\n\r\n        if (typeof config.timeSlice === 'number') {\r\n            setTimeout(function() {\r\n                self.blob = new Blob(arrayOfBlobs, {\r\n                    type: getMimeType(config)\r\n                });\r\n\r\n                self.recordingCallback(self.blob);\r\n            }, 100);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        if (!mediaRecorder) {\r\n            return;\r\n        }\r\n\r\n        if (mediaRecorder.state === 'recording') {\r\n            mediaRecorder.pause();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        if (!mediaRecorder) {\r\n            return;\r\n        }\r\n\r\n        if (mediaRecorder.state === 'paused') {\r\n            mediaRecorder.resume();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (mediaRecorder && mediaRecorder.state === 'recording') {\r\n            self.stop(clearRecordedDataCB);\r\n        }\r\n\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        arrayOfBlobs = [];\r\n        mediaRecorder = null;\r\n        self.timestamps = [];\r\n    }\r\n\r\n    // Reference to \"MediaRecorder\" object\r\n    var mediaRecorder;\r\n\r\n    /**\r\n     * Access to native MediaRecorder API\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @instance\r\n     * @example\r\n     * var internal = recorder.getInternalRecorder();\r\n     * internal.ondataavailable = function() {}; // override\r\n     * internal.stream, internal.onpause, internal.onstop, etc.\r\n     * @returns {Object} Returns internal recording object.\r\n     */\r\n    this.getInternalRecorder = function() {\r\n        return mediaRecorder;\r\n    };\r\n\r\n    function isMediaStreamActive() {\r\n        if ('active' in mediaStream) {\r\n            if (!mediaStream.active) {\r\n                return false;\r\n            }\r\n        } else if ('ended' in mediaStream) { // old hack\r\n            if (mediaStream.ended) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @property {Blob} blob - Recorded data as \"Blob\" object.\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * recorder.stop(function() {\r\n     *     var blob = recorder.blob;\r\n     * });\r\n     */\r\n    this.blob = null;\r\n\r\n\r\n    /**\r\n     * Get MediaRecorder readonly state.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * var state = recorder.getState();\r\n     * @returns {String} Returns recording state.\r\n     */\r\n    this.getState = function() {\r\n        if (!mediaRecorder) {\r\n            return 'inactive';\r\n        }\r\n\r\n        return mediaRecorder.state || 'inactive';\r\n    };\r\n\r\n    // list of all recording states\r\n    var allStates = [];\r\n\r\n    /**\r\n     * Get MediaRecorder all recording states.\r\n     * @method\r\n     * @memberof MediaStreamRecorder\r\n     * @example\r\n     * var state = recorder.getAllStates();\r\n     * @returns {Array} Returns all recording states\r\n     */\r\n    this.getAllStates = function() {\r\n        return allStates;\r\n    };\r\n\r\n    // if any Track within the MediaStream is muted or not enabled at any time, \r\n    // the browser will only record black frames \r\n    // or silence since that is the content produced by the Track\r\n    // so we need to stopRecording as soon as any single track ends.\r\n    if (typeof config.checkForInactiveTracks === 'undefined') {\r\n        config.checkForInactiveTracks = false; // disable to minimize CPU usage\r\n    }\r\n\r\n    var self = this;\r\n\r\n    // this method checks if media stream is stopped\r\n    // or if any track is ended.\r\n    (function looper() {\r\n        if (!mediaRecorder || config.checkForInactiveTracks === false) {\r\n            return;\r\n        }\r\n\r\n        if (isMediaStreamActive() === false) {\r\n            if (!config.disableLogs) {\r\n                console.log('MediaStream seems stopped.');\r\n            }\r\n            self.stop();\r\n            return;\r\n        }\r\n\r\n        setTimeout(looper, 1000); // check every second\r\n    })();\r\n\r\n    // for debugging\r\n    this.name = 'MediaStreamRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.MediaStreamRecorder = MediaStreamRecorder;\r\n}\n\r\n// source code from: http://typedarray.org/wp-content/projects/WebAudioRecorder/script.js\r\n// https://github.com/mattdiamond/Recorderjs#license-mit\r\n// ______________________\r\n// StereoAudioRecorder.js\r\n\r\n/**\r\n * StereoAudioRecorder is a standalone class used by {@link RecordRTC} to bring \"stereo\" audio-recording in chrome.\r\n * @summary JavaScript standalone object for stereo audio recording.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef StereoAudioRecorder\r\n * @class\r\n * @example\r\n * var recorder = new StereoAudioRecorder(MediaStream, {\r\n *     sampleRate: 44100,\r\n *     bufferSize: 4096\r\n * });\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {sampleRate: 44100, bufferSize: 4096, numberOfAudioChannels: 1, etc.}\r\n */\r\n\r\nfunction StereoAudioRecorder(mediaStream, config) {\r\n    if (!getTracks(mediaStream, 'audio').length) {\r\n        throw 'Your stream has no audio tracks.';\r\n    }\r\n\r\n    config = config || {};\r\n\r\n    var self = this;\r\n\r\n    // variables\r\n    var leftchannel = [];\r\n    var rightchannel = [];\r\n    var recording = false;\r\n    var recordingLength = 0;\r\n    var jsAudioNode;\r\n\r\n    var numberOfAudioChannels = 2;\r\n\r\n    /**\r\n     * Set sample rates such as 8K or 16K. Reference: http://stackoverflow.com/a/28977136/552182\r\n     * @property {number} desiredSampRate - Desired Bits per sample * 1000\r\n     * @memberof StereoAudioRecorder\r\n     * @instance\r\n     * @example\r\n     * var recorder = StereoAudioRecorder(mediaStream, {\r\n     *   desiredSampRate: 16 * 1000 // bits-per-sample * 1000\r\n     * });\r\n     */\r\n    var desiredSampRate = config.desiredSampRate;\r\n\r\n    // backward compatibility\r\n    if (config.leftChannel === true) {\r\n        numberOfAudioChannels = 1;\r\n    }\r\n\r\n    if (config.numberOfAudioChannels === 1) {\r\n        numberOfAudioChannels = 1;\r\n    }\r\n\r\n    if (!numberOfAudioChannels || numberOfAudioChannels < 1) {\r\n        numberOfAudioChannels = 2;\r\n    }\r\n\r\n    if (!config.disableLogs) {\r\n        console.log('StereoAudioRecorder is set to record number of channels: ' + numberOfAudioChannels);\r\n    }\r\n\r\n    // if any Track within the MediaStream is muted or not enabled at any time, \r\n    // the browser will only record black frames \r\n    // or silence since that is the content produced by the Track\r\n    // so we need to stopRecording as soon as any single track ends.\r\n    if (typeof config.checkForInactiveTracks === 'undefined') {\r\n        config.checkForInactiveTracks = true;\r\n    }\r\n\r\n    function isMediaStreamActive() {\r\n        if (config.checkForInactiveTracks === false) {\r\n            // always return \"true\"\r\n            return true;\r\n        }\r\n\r\n        if ('active' in mediaStream) {\r\n            if (!mediaStream.active) {\r\n                return false;\r\n            }\r\n        } else if ('ended' in mediaStream) { // old hack\r\n            if (mediaStream.ended) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        if (isMediaStreamActive() === false) {\r\n            throw 'Please make sure MediaStream is active.';\r\n        }\r\n\r\n        resetVariables();\r\n\r\n        isAudioProcessStarted = isPaused = false;\r\n        recording = true;\r\n\r\n        if (typeof config.timeSlice !== 'undefined') {\r\n            looper();\r\n        }\r\n    };\r\n\r\n    function mergeLeftRightBuffers(config, callback) {\r\n        function mergeAudioBuffers(config, cb) {\r\n            var numberOfAudioChannels = config.numberOfAudioChannels;\r\n\r\n            // todo: \"slice(0)\" --- is it causes loop? Should be removed?\r\n            var leftBuffers = config.leftBuffers.slice(0);\r\n            var rightBuffers = config.rightBuffers.slice(0);\r\n            var sampleRate = config.sampleRate;\r\n            var internalInterleavedLength = config.internalInterleavedLength;\r\n            var desiredSampRate = config.desiredSampRate;\r\n\r\n            if (numberOfAudioChannels === 2) {\r\n                leftBuffers = mergeBuffers(leftBuffers, internalInterleavedLength);\r\n                rightBuffers = mergeBuffers(rightBuffers, internalInterleavedLength);\r\n\r\n                if (desiredSampRate) {\r\n                    leftBuffers = interpolateArray(leftBuffers, desiredSampRate, sampleRate);\r\n                    rightBuffers = interpolateArray(rightBuffers, desiredSampRate, sampleRate);\r\n                }\r\n            }\r\n\r\n            if (numberOfAudioChannels === 1) {\r\n                leftBuffers = mergeBuffers(leftBuffers, internalInterleavedLength);\r\n\r\n                if (desiredSampRate) {\r\n                    leftBuffers = interpolateArray(leftBuffers, desiredSampRate, sampleRate);\r\n                }\r\n            }\r\n\r\n            // set sample rate as desired sample rate\r\n            if (desiredSampRate) {\r\n                sampleRate = desiredSampRate;\r\n            }\r\n\r\n            // for changing the sampling rate, reference:\r\n            // http://stackoverflow.com/a/28977136/552182\r\n            function interpolateArray(data, newSampleRate, oldSampleRate) {\r\n                var fitCount = Math.round(data.length * (newSampleRate / oldSampleRate));\r\n                var newData = [];\r\n                var springFactor = Number((data.length - 1) / (fitCount - 1));\r\n                newData[0] = data[0];\r\n                for (var i = 1; i < fitCount - 1; i++) {\r\n                    var tmp = i * springFactor;\r\n                    var before = Number(Math.floor(tmp)).toFixed();\r\n                    var after = Number(Math.ceil(tmp)).toFixed();\r\n                    var atPoint = tmp - before;\r\n                    newData[i] = linearInterpolate(data[before], data[after], atPoint);\r\n                }\r\n                newData[fitCount - 1] = data[data.length - 1];\r\n                return newData;\r\n            }\r\n\r\n            function linearInterpolate(before, after, atPoint) {\r\n                return before + (after - before) * atPoint;\r\n            }\r\n\r\n            function mergeBuffers(channelBuffer, rLength) {\r\n                var result = new Float64Array(rLength);\r\n                var offset = 0;\r\n                var lng = channelBuffer.length;\r\n\r\n                for (var i = 0; i < lng; i++) {\r\n                    var buffer = channelBuffer[i];\r\n                    result.set(buffer, offset);\r\n                    offset += buffer.length;\r\n                }\r\n\r\n                return result;\r\n            }\r\n\r\n            function interleave(leftChannel, rightChannel) {\r\n                var length = leftChannel.length + rightChannel.length;\r\n\r\n                var result = new Float64Array(length);\r\n\r\n                var inputIndex = 0;\r\n\r\n                for (var index = 0; index < length;) {\r\n                    result[index++] = leftChannel[inputIndex];\r\n                    result[index++] = rightChannel[inputIndex];\r\n                    inputIndex++;\r\n                }\r\n                return result;\r\n            }\r\n\r\n            function writeUTFBytes(view, offset, string) {\r\n                var lng = string.length;\r\n                for (var i = 0; i < lng; i++) {\r\n                    view.setUint8(offset + i, string.charCodeAt(i));\r\n                }\r\n            }\r\n\r\n            // interleave both channels together\r\n            var interleaved;\r\n\r\n            if (numberOfAudioChannels === 2) {\r\n                interleaved = interleave(leftBuffers, rightBuffers);\r\n            }\r\n\r\n            if (numberOfAudioChannels === 1) {\r\n                interleaved = leftBuffers;\r\n            }\r\n\r\n            var interleavedLength = interleaved.length;\r\n\r\n            // create wav file\r\n            var resultingBufferLength = 44 + interleavedLength * 2;\r\n\r\n            var buffer = new ArrayBuffer(resultingBufferLength);\r\n\r\n            var view = new DataView(buffer);\r\n\r\n            // RIFF chunk descriptor/identifier \r\n            writeUTFBytes(view, 0, 'RIFF');\r\n\r\n            // RIFF chunk length\r\n            // changed \"44\" to \"36\" via #401\r\n            view.setUint32(4, 36 + interleavedLength * 2, true);\r\n\r\n            // RIFF type \r\n            writeUTFBytes(view, 8, 'WAVE');\r\n\r\n            // format chunk identifier \r\n            // FMT sub-chunk\r\n            writeUTFBytes(view, 12, 'fmt ');\r\n\r\n            // format chunk length \r\n            view.setUint32(16, 16, true);\r\n\r\n            // sample format (raw)\r\n            view.setUint16(20, 1, true);\r\n\r\n            // stereo (2 channels)\r\n            view.setUint16(22, numberOfAudioChannels, true);\r\n\r\n            // sample rate \r\n            view.setUint32(24, sampleRate, true);\r\n\r\n            // byte rate (sample rate * block align)\r\n            view.setUint32(28, sampleRate * 2, true);\r\n\r\n            // block align (channel count * bytes per sample) \r\n            view.setUint16(32, numberOfAudioChannels * 2, true);\r\n\r\n            // bits per sample \r\n            view.setUint16(34, 16, true);\r\n\r\n            // data sub-chunk\r\n            // data chunk identifier \r\n            writeUTFBytes(view, 36, 'data');\r\n\r\n            // data chunk length \r\n            view.setUint32(40, interleavedLength * 2, true);\r\n\r\n            // write the PCM samples\r\n            var lng = interleavedLength;\r\n            var index = 44;\r\n            var volume = 1;\r\n            for (var i = 0; i < lng; i++) {\r\n                view.setInt16(index, interleaved[i] * (0x7FFF * volume), true);\r\n                index += 2;\r\n            }\r\n\r\n            if (cb) {\r\n                return cb({\r\n                    buffer: buffer,\r\n                    view: view\r\n                });\r\n            }\r\n\r\n            postMessage({\r\n                buffer: buffer,\r\n                view: view\r\n            });\r\n        }\r\n\r\n        if (config.noWorker) {\r\n            mergeAudioBuffers(config, function(data) {\r\n                callback(data.buffer, data.view);\r\n            });\r\n            return;\r\n        }\r\n\r\n\r\n        var webWorker = processInWebWorker(mergeAudioBuffers);\r\n\r\n        webWorker.onmessage = function(event) {\r\n            callback(event.data.buffer, event.data.view);\r\n\r\n            // release memory\r\n            URL.revokeObjectURL(webWorker.workerURL);\r\n\r\n            // kill webworker (or Chrome will kill your page after ~25 calls)\r\n            webWorker.terminate();\r\n        };\r\n\r\n        webWorker.postMessage(config);\r\n    }\r\n\r\n    function processInWebWorker(_function) {\r\n        var workerURL = URL.createObjectURL(new Blob([_function.toString(),\r\n            ';this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\r\n        ], {\r\n            type: 'application/javascript'\r\n        }));\r\n\r\n        var worker = new Worker(workerURL);\r\n        worker.workerURL = workerURL;\r\n        return worker;\r\n    }\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        // stop recording\r\n        recording = false;\r\n\r\n        mergeLeftRightBuffers({\r\n            desiredSampRate: desiredSampRate,\r\n            sampleRate: sampleRate,\r\n            numberOfAudioChannels: numberOfAudioChannels,\r\n            internalInterleavedLength: recordingLength,\r\n            leftBuffers: leftchannel,\r\n            rightBuffers: numberOfAudioChannels === 1 ? [] : rightchannel,\r\n            noWorker: config.noWorker\r\n        }, function(buffer, view) {\r\n            /**\r\n             * @property {Blob} blob - The recorded blob object.\r\n             * @memberof StereoAudioRecorder\r\n             * @example\r\n             * recorder.stop(function(){\r\n             *     var blob = recorder.blob;\r\n             * });\r\n             */\r\n            self.blob = new Blob([view], {\r\n                type: 'audio/wav'\r\n            });\r\n\r\n            /**\r\n             * @property {ArrayBuffer} buffer - The recorded buffer object.\r\n             * @memberof StereoAudioRecorder\r\n             * @example\r\n             * recorder.stop(function(){\r\n             *     var buffer = recorder.buffer;\r\n             * });\r\n             */\r\n            self.buffer = new ArrayBuffer(view.buffer.byteLength);\r\n\r\n            /**\r\n             * @property {DataView} view - The recorded data-view object.\r\n             * @memberof StereoAudioRecorder\r\n             * @example\r\n             * recorder.stop(function(){\r\n             *     var view = recorder.view;\r\n             * });\r\n             */\r\n            self.view = view;\r\n\r\n            self.sampleRate = desiredSampRate || sampleRate;\r\n            self.bufferSize = bufferSize;\r\n\r\n            // recorded audio length\r\n            self.length = recordingLength;\r\n\r\n            isAudioProcessStarted = false;\r\n\r\n            if (callback) {\r\n                callback(self.blob);\r\n            }\r\n        });\r\n    };\r\n\r\n    if (typeof RecordRTC.Storage === 'undefined') {\r\n        RecordRTC.Storage = {\r\n            AudioContextConstructor: null,\r\n            AudioContext: window.AudioContext || window.webkitAudioContext\r\n        };\r\n    }\r\n\r\n    if (!RecordRTC.Storage.AudioContextConstructor || RecordRTC.Storage.AudioContextConstructor.state === 'closed') {\r\n        RecordRTC.Storage.AudioContextConstructor = new RecordRTC.Storage.AudioContext();\r\n    }\r\n\r\n    var context = RecordRTC.Storage.AudioContextConstructor;\r\n\r\n    // creates an audio node from the microphone incoming stream\r\n    var audioInput = context.createMediaStreamSource(mediaStream);\r\n\r\n    var legalBufferValues = [0, 256, 512, 1024, 2048, 4096, 8192, 16384];\r\n\r\n    /**\r\n     * From the spec: This value controls how frequently the audioprocess event is\r\n     * dispatched and how many sample-frames need to be processed each call.\r\n     * Lower values for buffer size will result in a lower (better) latency.\r\n     * Higher values will be necessary to avoid audio breakup and glitches\r\n     * The size of the buffer (in sample-frames) which needs to\r\n     * be processed each time onprocessaudio is called.\r\n     * Legal values are (256, 512, 1024, 2048, 4096, 8192, 16384).\r\n     * @property {number} bufferSize - Buffer-size for how frequently the audioprocess event is dispatched.\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder = new StereoAudioRecorder(mediaStream, {\r\n     *     bufferSize: 4096\r\n     * });\r\n     */\r\n\r\n    // \"0\" means, let chrome decide the most accurate buffer-size for current platform.\r\n    var bufferSize = typeof config.bufferSize === 'undefined' ? 4096 : config.bufferSize;\r\n\r\n    if (legalBufferValues.indexOf(bufferSize) === -1) {\r\n        if (!config.disableLogs) {\r\n            console.log('Legal values for buffer-size are ' + JSON.stringify(legalBufferValues, null, '\\t'));\r\n        }\r\n    }\r\n\r\n    if (context.createJavaScriptNode) {\r\n        jsAudioNode = context.createJavaScriptNode(bufferSize, numberOfAudioChannels, numberOfAudioChannels);\r\n    } else if (context.createScriptProcessor) {\r\n        jsAudioNode = context.createScriptProcessor(bufferSize, numberOfAudioChannels, numberOfAudioChannels);\r\n    } else {\r\n        throw 'WebAudio API has no support on this browser.';\r\n    }\r\n\r\n    // connect the stream to the script processor\r\n    audioInput.connect(jsAudioNode);\r\n\r\n    if (!config.bufferSize) {\r\n        bufferSize = jsAudioNode.bufferSize; // device buffer-size\r\n    }\r\n\r\n    /**\r\n     * The sample rate (in sample-frames per second) at which the\r\n     * AudioContext handles audio. It is assumed that all AudioNodes\r\n     * in the context run at this rate. In making this assumption,\r\n     * sample-rate converters or \"varispeed\" processors are not supported\r\n     * in real-time processing.\r\n     * The sampleRate parameter describes the sample-rate of the\r\n     * linear PCM audio data in the buffer in sample-frames per second.\r\n     * An implementation must support sample-rates in at least\r\n     * the range 22050 to 96000.\r\n     * @property {number} sampleRate - Buffer-size for how frequently the audioprocess event is dispatched.\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder = new StereoAudioRecorder(mediaStream, {\r\n     *     sampleRate: 44100\r\n     * });\r\n     */\r\n    var sampleRate = typeof config.sampleRate !== 'undefined' ? config.sampleRate : context.sampleRate || 44100;\r\n\r\n    if (sampleRate < 22050 || sampleRate > 96000) {\r\n        // Ref: http://stackoverflow.com/a/26303918/552182\r\n        if (!config.disableLogs) {\r\n            console.log('sample-rate must be under range 22050 and 96000.');\r\n        }\r\n    }\r\n\r\n    if (!config.disableLogs) {\r\n        if (config.desiredSampRate) {\r\n            console.log('Desired sample-rate: ' + config.desiredSampRate);\r\n        }\r\n    }\r\n\r\n    var isPaused = false;\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPaused = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        if (isMediaStreamActive() === false) {\r\n            throw 'Please make sure MediaStream is active.';\r\n        }\r\n\r\n        if (!recording) {\r\n            if (!config.disableLogs) {\r\n                console.log('Seems recording has been restarted.');\r\n            }\r\n            this.record();\r\n            return;\r\n        }\r\n\r\n        isPaused = false;\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof StereoAudioRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        config.checkForInactiveTracks = false;\r\n\r\n        if (recording) {\r\n            this.stop(clearRecordedDataCB);\r\n        }\r\n\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function resetVariables() {\r\n        leftchannel = [];\r\n        rightchannel = [];\r\n        recordingLength = 0;\r\n        isAudioProcessStarted = false;\r\n        recording = false;\r\n        isPaused = false;\r\n        context = null;\r\n\r\n        self.leftchannel = leftchannel;\r\n        self.rightchannel = rightchannel;\r\n        self.numberOfAudioChannels = numberOfAudioChannels;\r\n        self.desiredSampRate = desiredSampRate;\r\n        self.sampleRate = sampleRate;\r\n        self.recordingLength = recordingLength;\r\n\r\n        intervalsBasedBuffers = {\r\n            left: [],\r\n            right: [],\r\n            recordingLength: 0\r\n        };\r\n    }\r\n\r\n    function clearRecordedDataCB() {\r\n        if (jsAudioNode) {\r\n            jsAudioNode.onaudioprocess = null;\r\n            jsAudioNode.disconnect();\r\n            jsAudioNode = null;\r\n        }\r\n\r\n        if (audioInput) {\r\n            audioInput.disconnect();\r\n            audioInput = null;\r\n        }\r\n\r\n        resetVariables();\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'StereoAudioRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    var isAudioProcessStarted = false;\r\n\r\n    function onAudioProcessDataAvailable(e) {\r\n        if (isPaused) {\r\n            return;\r\n        }\r\n\r\n        if (isMediaStreamActive() === false) {\r\n            if (!config.disableLogs) {\r\n                console.log('MediaStream seems stopped.');\r\n            }\r\n            jsAudioNode.disconnect();\r\n            recording = false;\r\n        }\r\n\r\n        if (!recording) {\r\n            if (audioInput) {\r\n                audioInput.disconnect();\r\n                audioInput = null;\r\n            }\r\n            return;\r\n        }\r\n\r\n        /**\r\n         * This method is called on \"onaudioprocess\" event's first invocation.\r\n         * @method {function} onAudioProcessStarted\r\n         * @memberof StereoAudioRecorder\r\n         * @example\r\n         * recorder.onAudioProcessStarted: function() { };\r\n         */\r\n        if (!isAudioProcessStarted) {\r\n            isAudioProcessStarted = true;\r\n            if (config.onAudioProcessStarted) {\r\n                config.onAudioProcessStarted();\r\n            }\r\n\r\n            if (config.initCallback) {\r\n                config.initCallback();\r\n            }\r\n        }\r\n\r\n        var left = e.inputBuffer.getChannelData(0);\r\n\r\n        // we clone the samples\r\n        var chLeft = new Float32Array(left);\r\n        leftchannel.push(chLeft);\r\n\r\n        if (numberOfAudioChannels === 2) {\r\n            var right = e.inputBuffer.getChannelData(1);\r\n            var chRight = new Float32Array(right);\r\n            rightchannel.push(chRight);\r\n        }\r\n\r\n        recordingLength += bufferSize;\r\n\r\n        // export raw PCM\r\n        self.recordingLength = recordingLength;\r\n\r\n        if (typeof config.timeSlice !== 'undefined') {\r\n            intervalsBasedBuffers.recordingLength += bufferSize;\r\n            intervalsBasedBuffers.left.push(chLeft);\r\n\r\n            if (numberOfAudioChannels === 2) {\r\n                intervalsBasedBuffers.right.push(chRight);\r\n            }\r\n        }\r\n    }\r\n\r\n    jsAudioNode.onaudioprocess = onAudioProcessDataAvailable;\r\n\r\n    // to prevent self audio to be connected with speakers\r\n    if (context.createMediaStreamDestination) {\r\n        jsAudioNode.connect(context.createMediaStreamDestination());\r\n    } else {\r\n        jsAudioNode.connect(context.destination);\r\n    }\r\n\r\n    // export raw PCM\r\n    this.leftchannel = leftchannel;\r\n    this.rightchannel = rightchannel;\r\n    this.numberOfAudioChannels = numberOfAudioChannels;\r\n    this.desiredSampRate = desiredSampRate;\r\n    this.sampleRate = sampleRate;\r\n    self.recordingLength = recordingLength;\r\n\r\n    // helper for intervals based blobs\r\n    var intervalsBasedBuffers = {\r\n        left: [],\r\n        right: [],\r\n        recordingLength: 0\r\n    };\r\n\r\n    // this looper is used to support intervals based blobs (via timeSlice+ondataavailable)\r\n    function looper() {\r\n        if (!recording || typeof config.ondataavailable !== 'function' || typeof config.timeSlice === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (intervalsBasedBuffers.left.length) {\r\n            mergeLeftRightBuffers({\r\n                desiredSampRate: desiredSampRate,\r\n                sampleRate: sampleRate,\r\n                numberOfAudioChannels: numberOfAudioChannels,\r\n                internalInterleavedLength: intervalsBasedBuffers.recordingLength,\r\n                leftBuffers: intervalsBasedBuffers.left,\r\n                rightBuffers: numberOfAudioChannels === 1 ? [] : intervalsBasedBuffers.right\r\n            }, function(buffer, view) {\r\n                var blob = new Blob([view], {\r\n                    type: 'audio/wav'\r\n                });\r\n                config.ondataavailable(blob);\r\n\r\n                setTimeout(looper, config.timeSlice);\r\n            });\r\n\r\n            intervalsBasedBuffers = {\r\n                left: [],\r\n                right: [],\r\n                recordingLength: 0\r\n            };\r\n        } else {\r\n            setTimeout(looper, config.timeSlice);\r\n        }\r\n    }\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.StereoAudioRecorder = StereoAudioRecorder;\r\n}\n\r\n// _________________\r\n// CanvasRecorder.js\r\n\r\n/**\r\n * CanvasRecorder is a standalone class used by {@link RecordRTC} to bring HTML5-Canvas recording into video WebM. It uses HTML2Canvas library and runs top over {@link Whammy}.\r\n * @summary HTML2Canvas recording into video WebM.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef CanvasRecorder\r\n * @class\r\n * @example\r\n * var recorder = new CanvasRecorder(htmlElement, { disableLogs: true, useWhammyRecorder: true });\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {HTMLElement} htmlElement - querySelector/getElementById/getElementsByTagName[0]/etc.\r\n * @param {object} config - {disableLogs:true, initCallback: function}\r\n */\r\n\r\nfunction CanvasRecorder(htmlElement, config) {\r\n    if (typeof html2canvas === 'undefined') {\r\n        throw 'Please link: https://www.webrtc-experiment.com/screenshot.js';\r\n    }\r\n\r\n    config = config || {};\r\n    if (!config.frameInterval) {\r\n        config.frameInterval = 10;\r\n    }\r\n\r\n    // via DetectRTC.js\r\n    var isCanvasSupportsStreamCapturing = false;\r\n    ['captureStream', 'mozCaptureStream', 'webkitCaptureStream'].forEach(function(item) {\r\n        if (item in document.createElement('canvas')) {\r\n            isCanvasSupportsStreamCapturing = true;\r\n        }\r\n    });\r\n\r\n    var _isChrome = (!!window.webkitRTCPeerConnection || !!window.webkitGetUserMedia) && !!window.chrome;\r\n\r\n    var chromeVersion = 50;\r\n    var matchArray = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\r\n    if (_isChrome && matchArray && matchArray[2]) {\r\n        chromeVersion = parseInt(matchArray[2], 10);\r\n    }\r\n\r\n    if (_isChrome && chromeVersion < 52) {\r\n        isCanvasSupportsStreamCapturing = false;\r\n    }\r\n\r\n    if (config.useWhammyRecorder) {\r\n        isCanvasSupportsStreamCapturing = false;\r\n    }\r\n\r\n    var globalCanvas, mediaStreamRecorder;\r\n\r\n    if (isCanvasSupportsStreamCapturing) {\r\n        if (!config.disableLogs) {\r\n            console.log('Your browser supports both MediRecorder API and canvas.captureStream!');\r\n        }\r\n\r\n        if (htmlElement instanceof HTMLCanvasElement) {\r\n            globalCanvas = htmlElement;\r\n        } else if (htmlElement instanceof CanvasRenderingContext2D) {\r\n            globalCanvas = htmlElement.canvas;\r\n        } else {\r\n            throw 'Please pass either HTMLCanvasElement or CanvasRenderingContext2D.';\r\n        }\r\n    } else if (!!navigator.mozGetUserMedia) {\r\n        if (!config.disableLogs) {\r\n            console.error('Canvas recording is NOT supported in Firefox.');\r\n        }\r\n    }\r\n\r\n    var isRecording;\r\n\r\n    /**\r\n     * This method records Canvas.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        isRecording = true;\r\n\r\n        if (isCanvasSupportsStreamCapturing && !config.useWhammyRecorder) {\r\n            // CanvasCaptureMediaStream\r\n            var canvasMediaStream;\r\n            if ('captureStream' in globalCanvas) {\r\n                canvasMediaStream = globalCanvas.captureStream(25); // 25 FPS\r\n            } else if ('mozCaptureStream' in globalCanvas) {\r\n                canvasMediaStream = globalCanvas.mozCaptureStream(25);\r\n            } else if ('webkitCaptureStream' in globalCanvas) {\r\n                canvasMediaStream = globalCanvas.webkitCaptureStream(25);\r\n            }\r\n\r\n            try {\r\n                var mdStream = new MediaStream();\r\n                mdStream.addTrack(getTracks(canvasMediaStream, 'video')[0]);\r\n                canvasMediaStream = mdStream;\r\n            } catch (e) {}\r\n\r\n            if (!canvasMediaStream) {\r\n                throw 'captureStream API are NOT available.';\r\n            }\r\n\r\n            // Note: Jan 18, 2016 status is that, \r\n            // Firefox MediaRecorder API can't record CanvasCaptureMediaStream object.\r\n            mediaStreamRecorder = new MediaStreamRecorder(canvasMediaStream, {\r\n                mimeType: config.mimeType || 'video/webm'\r\n            });\r\n            mediaStreamRecorder.record();\r\n        } else {\r\n            whammy.frames = [];\r\n            lastTime = new Date().getTime();\r\n            drawCanvasFrame();\r\n        }\r\n\r\n        if (config.initCallback) {\r\n            config.initCallback();\r\n        }\r\n    };\r\n\r\n    this.getWebPImages = function(callback) {\r\n        if (htmlElement.nodeName.toLowerCase() !== 'canvas') {\r\n            callback();\r\n            return;\r\n        }\r\n\r\n        var framesLength = whammy.frames.length;\r\n        whammy.frames.forEach(function(frame, idx) {\r\n            var framesRemaining = framesLength - idx;\r\n            if (!config.disableLogs) {\r\n                console.log(framesRemaining + '/' + framesLength + ' frames remaining');\r\n            }\r\n\r\n            if (config.onEncodingCallback) {\r\n                config.onEncodingCallback(framesRemaining, framesLength);\r\n            }\r\n\r\n            var webp = frame.image.toDataURL('image/webp', 1);\r\n            whammy.frames[idx].image = webp;\r\n        });\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('Generating WebM');\r\n        }\r\n\r\n        callback();\r\n    };\r\n\r\n    /**\r\n     * This method stops recording Canvas.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        isRecording = false;\r\n\r\n        var that = this;\r\n\r\n        if (isCanvasSupportsStreamCapturing && mediaStreamRecorder) {\r\n            mediaStreamRecorder.stop(callback);\r\n            return;\r\n        }\r\n\r\n        this.getWebPImages(function() {\r\n            /**\r\n             * @property {Blob} blob - Recorded frames in video/webm blob.\r\n             * @memberof CanvasRecorder\r\n             * @example\r\n             * recorder.stop(function() {\r\n             *     var blob = recorder.blob;\r\n             * });\r\n             */\r\n            whammy.compile(function(blob) {\r\n                if (!config.disableLogs) {\r\n                    console.log('Recording finished!');\r\n                }\r\n\r\n                that.blob = blob;\r\n\r\n                if (that.blob.forEach) {\r\n                    that.blob = new Blob([], {\r\n                        type: 'video/webm'\r\n                    });\r\n                }\r\n\r\n                if (callback) {\r\n                    callback(that.blob);\r\n                }\r\n\r\n                whammy.frames = [];\r\n            });\r\n        });\r\n    };\r\n\r\n    var isPausedRecording = false;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPausedRecording = true;\r\n\r\n        if (mediaStreamRecorder instanceof MediaStreamRecorder) {\r\n            mediaStreamRecorder.pause();\r\n            return;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPausedRecording = false;\r\n\r\n        if (mediaStreamRecorder instanceof MediaStreamRecorder) {\r\n            mediaStreamRecorder.resume();\r\n            return;\r\n        }\r\n\r\n        if (!isRecording) {\r\n            this.record();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof CanvasRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (isRecording) {\r\n            this.stop(clearRecordedDataCB);\r\n        }\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        whammy.frames = [];\r\n        isRecording = false;\r\n        isPausedRecording = false;\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'CanvasRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    function cloneCanvas() {\r\n        //create a new canvas\r\n        var newCanvas = document.createElement('canvas');\r\n        var context = newCanvas.getContext('2d');\r\n\r\n        //set dimensions\r\n        newCanvas.width = htmlElement.width;\r\n        newCanvas.height = htmlElement.height;\r\n\r\n        //apply the old canvas to the new one\r\n        context.drawImage(htmlElement, 0, 0);\r\n\r\n        //return the new canvas\r\n        return newCanvas;\r\n    }\r\n\r\n    function drawCanvasFrame() {\r\n        if (isPausedRecording) {\r\n            lastTime = new Date().getTime();\r\n            return setTimeout(drawCanvasFrame, 500);\r\n        }\r\n\r\n        if (htmlElement.nodeName.toLowerCase() === 'canvas') {\r\n            var duration = new Date().getTime() - lastTime;\r\n            // via #206, by Jack i.e. @Seymourr\r\n            lastTime = new Date().getTime();\r\n\r\n            whammy.frames.push({\r\n                image: cloneCanvas(),\r\n                duration: duration\r\n            });\r\n\r\n            if (isRecording) {\r\n                setTimeout(drawCanvasFrame, config.frameInterval);\r\n            }\r\n            return;\r\n        }\r\n\r\n        html2canvas(htmlElement, {\r\n            grabMouse: typeof config.showMousePointer === 'undefined' || config.showMousePointer,\r\n            onrendered: function(canvas) {\r\n                var duration = new Date().getTime() - lastTime;\r\n                if (!duration) {\r\n                    return setTimeout(drawCanvasFrame, config.frameInterval);\r\n                }\r\n\r\n                // via #206, by Jack i.e. @Seymourr\r\n                lastTime = new Date().getTime();\r\n\r\n                whammy.frames.push({\r\n                    image: canvas.toDataURL('image/webp', 1),\r\n                    duration: duration\r\n                });\r\n\r\n                if (isRecording) {\r\n                    setTimeout(drawCanvasFrame, config.frameInterval);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    var lastTime = new Date().getTime();\r\n\r\n    var whammy = new Whammy.Video(100);\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.CanvasRecorder = CanvasRecorder;\r\n}\n\r\n// _________________\r\n// WhammyRecorder.js\r\n\r\n/**\r\n * WhammyRecorder is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It runs top over {@link Whammy}.\r\n * @summary Video recording feature in Chrome.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef WhammyRecorder\r\n * @class\r\n * @example\r\n * var recorder = new WhammyRecorder(mediaStream);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {disableLogs: true, initCallback: function, video: HTMLVideoElement, etc.}\r\n */\r\n\r\nfunction WhammyRecorder(mediaStream, config) {\r\n\r\n    config = config || {};\r\n\r\n    if (!config.frameInterval) {\r\n        config.frameInterval = 10;\r\n    }\r\n\r\n    if (!config.disableLogs) {\r\n        console.log('Using frames-interval:', config.frameInterval);\r\n    }\r\n\r\n    /**\r\n     * This method records video.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        if (!config.width) {\r\n            config.width = 320;\r\n        }\r\n\r\n        if (!config.height) {\r\n            config.height = 240;\r\n        }\r\n\r\n        if (!config.video) {\r\n            config.video = {\r\n                width: config.width,\r\n                height: config.height\r\n            };\r\n        }\r\n\r\n        if (!config.canvas) {\r\n            config.canvas = {\r\n                width: config.width,\r\n                height: config.height\r\n            };\r\n        }\r\n\r\n        canvas.width = config.canvas.width || 320;\r\n        canvas.height = config.canvas.height || 240;\r\n\r\n        context = canvas.getContext('2d');\r\n\r\n        // setting defaults\r\n        if (config.video && config.video instanceof HTMLVideoElement) {\r\n            video = config.video.cloneNode();\r\n\r\n            if (config.initCallback) {\r\n                config.initCallback();\r\n            }\r\n        } else {\r\n            video = document.createElement('video');\r\n\r\n            setSrcObject(mediaStream, video);\r\n\r\n            video.onloadedmetadata = function() { // \"onloadedmetadata\" may NOT work in FF?\r\n                if (config.initCallback) {\r\n                    config.initCallback();\r\n                }\r\n            };\r\n\r\n            video.width = config.video.width;\r\n            video.height = config.video.height;\r\n        }\r\n\r\n        video.muted = true;\r\n        video.play();\r\n\r\n        lastTime = new Date().getTime();\r\n        whammy = new Whammy.Video();\r\n\r\n        if (!config.disableLogs) {\r\n            console.log('canvas resolutions', canvas.width, '*', canvas.height);\r\n            console.log('video width/height', video.width || canvas.width, '*', video.height || canvas.height);\r\n        }\r\n\r\n        drawFrames(config.frameInterval);\r\n    };\r\n\r\n    /**\r\n     * Draw and push frames to Whammy\r\n     * @param {integer} frameInterval - set minimum interval (in milliseconds) between each time we push a frame to Whammy\r\n     */\r\n    function drawFrames(frameInterval) {\r\n        frameInterval = typeof frameInterval !== 'undefined' ? frameInterval : 10;\r\n\r\n        var duration = new Date().getTime() - lastTime;\r\n        if (!duration) {\r\n            return setTimeout(drawFrames, frameInterval, frameInterval);\r\n        }\r\n\r\n        if (isPausedRecording) {\r\n            lastTime = new Date().getTime();\r\n            return setTimeout(drawFrames, 100);\r\n        }\r\n\r\n        // via #206, by Jack i.e. @Seymourr\r\n        lastTime = new Date().getTime();\r\n\r\n        if (video.paused) {\r\n            // via: https://github.com/muaz-khan/WebRTC-Experiment/pull/316\r\n            // Tweak for Android Chrome\r\n            video.play();\r\n        }\r\n\r\n        context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n        whammy.frames.push({\r\n            duration: duration,\r\n            image: canvas.toDataURL('image/webp')\r\n        });\r\n\r\n        if (!isStopDrawing) {\r\n            setTimeout(drawFrames, frameInterval, frameInterval);\r\n        }\r\n    }\r\n\r\n    function asyncLoop(o) {\r\n        var i = -1,\r\n            length = o.length;\r\n\r\n        (function loop() {\r\n            i++;\r\n            if (i === length) {\r\n                o.callback();\r\n                return;\r\n            }\r\n\r\n            // \"setTimeout\" added by Jim McLeod\r\n            setTimeout(function() {\r\n                o.functionToLoop(loop, i);\r\n            }, 1);\r\n        })();\r\n    }\r\n\r\n\r\n    /**\r\n     * remove black frames from the beginning to the specified frame\r\n     * @param {Array} _frames - array of frames to be checked\r\n     * @param {number} _framesToCheck - number of frame until check will be executed (-1 - will drop all frames until frame not matched will be found)\r\n     * @param {number} _pixTolerance - 0 - very strict (only black pixel color) ; 1 - all\r\n     * @param {number} _frameTolerance - 0 - very strict (only black frame color) ; 1 - all\r\n     * @returns {Array} - array of frames\r\n     */\r\n    // pull#293 by @volodalexey\r\n    function dropBlackFrames(_frames, _framesToCheck, _pixTolerance, _frameTolerance, callback) {\r\n        var localCanvas = document.createElement('canvas');\r\n        localCanvas.width = canvas.width;\r\n        localCanvas.height = canvas.height;\r\n        var context2d = localCanvas.getContext('2d');\r\n        var resultFrames = [];\r\n\r\n        var checkUntilNotBlack = _framesToCheck === -1;\r\n        var endCheckFrame = (_framesToCheck && _framesToCheck > 0 && _framesToCheck <= _frames.length) ?\r\n            _framesToCheck : _frames.length;\r\n        var sampleColor = {\r\n            r: 0,\r\n            g: 0,\r\n            b: 0\r\n        };\r\n        var maxColorDifference = Math.sqrt(\r\n            Math.pow(255, 2) +\r\n            Math.pow(255, 2) +\r\n            Math.pow(255, 2)\r\n        );\r\n        var pixTolerance = _pixTolerance && _pixTolerance >= 0 && _pixTolerance <= 1 ? _pixTolerance : 0;\r\n        var frameTolerance = _frameTolerance && _frameTolerance >= 0 && _frameTolerance <= 1 ? _frameTolerance : 0;\r\n        var doNotCheckNext = false;\r\n\r\n        asyncLoop({\r\n            length: endCheckFrame,\r\n            functionToLoop: function(loop, f) {\r\n                var matchPixCount, endPixCheck, maxPixCount;\r\n\r\n                var finishImage = function() {\r\n                    if (!doNotCheckNext && maxPixCount - matchPixCount <= maxPixCount * frameTolerance) {\r\n                        // console.log('removed black frame : ' + f + ' ; frame duration ' + _frames[f].duration);\r\n                    } else {\r\n                        // console.log('frame is passed : ' + f);\r\n                        if (checkUntilNotBlack) {\r\n                            doNotCheckNext = true;\r\n                        }\r\n                        resultFrames.push(_frames[f]);\r\n                    }\r\n                    loop();\r\n                };\r\n\r\n                if (!doNotCheckNext) {\r\n                    var image = new Image();\r\n                    image.onload = function() {\r\n                        context2d.drawImage(image, 0, 0, canvas.width, canvas.height);\r\n                        var imageData = context2d.getImageData(0, 0, canvas.width, canvas.height);\r\n                        matchPixCount = 0;\r\n                        endPixCheck = imageData.data.length;\r\n                        maxPixCount = imageData.data.length / 4;\r\n\r\n                        for (var pix = 0; pix < endPixCheck; pix += 4) {\r\n                            var currentColor = {\r\n                                r: imageData.data[pix],\r\n                                g: imageData.data[pix + 1],\r\n                                b: imageData.data[pix + 2]\r\n                            };\r\n                            var colorDifference = Math.sqrt(\r\n                                Math.pow(currentColor.r - sampleColor.r, 2) +\r\n                                Math.pow(currentColor.g - sampleColor.g, 2) +\r\n                                Math.pow(currentColor.b - sampleColor.b, 2)\r\n                            );\r\n                            // difference in color it is difference in color vectors (r1,g1,b1) <=> (r2,g2,b2)\r\n                            if (colorDifference <= maxColorDifference * pixTolerance) {\r\n                                matchPixCount++;\r\n                            }\r\n                        }\r\n                        finishImage();\r\n                    };\r\n                    image.src = _frames[f].image;\r\n                } else {\r\n                    finishImage();\r\n                }\r\n            },\r\n            callback: function() {\r\n                resultFrames = resultFrames.concat(_frames.slice(endCheckFrame));\r\n\r\n                if (resultFrames.length <= 0) {\r\n                    // at least one last frame should be available for next manipulation\r\n                    // if total duration of all frames will be < 1000 than ffmpeg doesn't work well...\r\n                    resultFrames.push(_frames[_frames.length - 1]);\r\n                }\r\n                callback(resultFrames);\r\n            }\r\n        });\r\n    }\r\n\r\n    var isStopDrawing = false;\r\n\r\n    /**\r\n     * This method stops recording video.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        isStopDrawing = true;\r\n\r\n        var _this = this;\r\n        // analyse of all frames takes some time!\r\n        setTimeout(function() {\r\n            // e.g. dropBlackFrames(frames, 10, 1, 1) - will cut all 10 frames\r\n            // e.g. dropBlackFrames(frames, 10, 0.5, 0.5) - will analyse 10 frames\r\n            // e.g. dropBlackFrames(frames, 10) === dropBlackFrames(frames, 10, 0, 0) - will analyse 10 frames with strict black color\r\n            dropBlackFrames(whammy.frames, -1, null, null, function(frames) {\r\n                whammy.frames = frames;\r\n\r\n                // to display advertisement images!\r\n                if (config.advertisement && config.advertisement.length) {\r\n                    whammy.frames = config.advertisement.concat(whammy.frames);\r\n                }\r\n\r\n                /**\r\n                 * @property {Blob} blob - Recorded frames in video/webm blob.\r\n                 * @memberof WhammyRecorder\r\n                 * @example\r\n                 * recorder.stop(function() {\r\n                 *     var blob = recorder.blob;\r\n                 * });\r\n                 */\r\n                whammy.compile(function(blob) {\r\n                    _this.blob = blob;\r\n\r\n                    if (_this.blob.forEach) {\r\n                        _this.blob = new Blob([], {\r\n                            type: 'video/webm'\r\n                        });\r\n                    }\r\n\r\n                    if (callback) {\r\n                        callback(_this.blob);\r\n                    }\r\n                });\r\n            });\r\n        }, 10);\r\n    };\r\n\r\n    var isPausedRecording = false;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPausedRecording = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPausedRecording = false;\r\n\r\n        if (isStopDrawing) {\r\n            this.record();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof WhammyRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (!isStopDrawing) {\r\n            this.stop(clearRecordedDataCB);\r\n        }\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        whammy.frames = [];\r\n        isStopDrawing = true;\r\n        isPausedRecording = false;\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'WhammyRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    var canvas = document.createElement('canvas');\r\n    var context = canvas.getContext('2d');\r\n\r\n    var video;\r\n    var lastTime;\r\n    var whammy;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.WhammyRecorder = WhammyRecorder;\r\n}\n\r\n// https://github.com/antimatter15/whammy/blob/master/LICENSE\r\n// _________\r\n// Whammy.js\r\n\r\n// todo: Firefox now supports webp for webm containers!\r\n// their MediaRecorder implementation works well!\r\n// should we provide an option to record via Whammy.js or MediaRecorder API is a better solution?\r\n\r\n/**\r\n * Whammy is a standalone class used by {@link RecordRTC} to bring video recording in Chrome. It is written by {@link https://github.com/antimatter15|antimatter15}\r\n * @summary A real time javascript webm encoder based on a canvas hack.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef Whammy\r\n * @class\r\n * @example\r\n * var recorder = new Whammy().Video(15);\r\n * recorder.add(context || canvas || dataURL);\r\n * var output = recorder.compile();\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\n\r\nvar Whammy = (function() {\r\n    // a more abstract-ish API\r\n\r\n    function WhammyVideo(duration) {\r\n        this.frames = [];\r\n        this.duration = duration || 1;\r\n        this.quality = 0.8;\r\n    }\r\n\r\n    /**\r\n     * Pass Canvas or Context or image/webp(string) to {@link Whammy} encoder.\r\n     * @method\r\n     * @memberof Whammy\r\n     * @example\r\n     * recorder = new Whammy().Video(0.8, 100);\r\n     * recorder.add(canvas || context || 'image/webp');\r\n     * @param {string} frame - Canvas || Context || image/webp\r\n     * @param {number} duration - Stick a duration (in milliseconds)\r\n     */\r\n    WhammyVideo.prototype.add = function(frame, duration) {\r\n        if ('canvas' in frame) { //CanvasRenderingContext2D\r\n            frame = frame.canvas;\r\n        }\r\n\r\n        if ('toDataURL' in frame) {\r\n            frame = frame.toDataURL('image/webp', this.quality);\r\n        }\r\n\r\n        if (!(/^data:image\\/webp;base64,/ig).test(frame)) {\r\n            throw 'Input must be formatted properly as a base64 encoded DataURI of type image/webp';\r\n        }\r\n        this.frames.push({\r\n            image: frame,\r\n            duration: duration || this.duration\r\n        });\r\n    };\r\n\r\n    function processInWebWorker(_function) {\r\n        var blob = URL.createObjectURL(new Blob([_function.toString(),\r\n            'this.onmessage =  function (eee) {' + _function.name + '(eee.data);}'\r\n        ], {\r\n            type: 'application/javascript'\r\n        }));\r\n\r\n        var worker = new Worker(blob);\r\n        URL.revokeObjectURL(blob);\r\n        return worker;\r\n    }\r\n\r\n    function whammyInWebWorker(frames) {\r\n        function ArrayToWebM(frames) {\r\n            var info = checkFrames(frames);\r\n            if (!info) {\r\n                return [];\r\n            }\r\n\r\n            var clusterMaxDuration = 30000;\r\n\r\n            var EBML = [{\r\n                'id': 0x1a45dfa3, // EBML\r\n                'data': [{\r\n                    'data': 1,\r\n                    'id': 0x4286 // EBMLVersion\r\n                }, {\r\n                    'data': 1,\r\n                    'id': 0x42f7 // EBMLReadVersion\r\n                }, {\r\n                    'data': 4,\r\n                    'id': 0x42f2 // EBMLMaxIDLength\r\n                }, {\r\n                    'data': 8,\r\n                    'id': 0x42f3 // EBMLMaxSizeLength\r\n                }, {\r\n                    'data': 'webm',\r\n                    'id': 0x4282 // DocType\r\n                }, {\r\n                    'data': 2,\r\n                    'id': 0x4287 // DocTypeVersion\r\n                }, {\r\n                    'data': 2,\r\n                    'id': 0x4285 // DocTypeReadVersion\r\n                }]\r\n            }, {\r\n                'id': 0x18538067, // Segment\r\n                'data': [{\r\n                    'id': 0x1549a966, // Info\r\n                    'data': [{\r\n                        'data': 1e6, //do things in millisecs (num of nanosecs for duration scale)\r\n                        'id': 0x2ad7b1 // TimecodeScale\r\n                    }, {\r\n                        'data': 'whammy',\r\n                        'id': 0x4d80 // MuxingApp\r\n                    }, {\r\n                        'data': 'whammy',\r\n                        'id': 0x5741 // WritingApp\r\n                    }, {\r\n                        'data': doubleToString(info.duration),\r\n                        'id': 0x4489 // Duration\r\n                    }]\r\n                }, {\r\n                    'id': 0x1654ae6b, // Tracks\r\n                    'data': [{\r\n                        'id': 0xae, // TrackEntry\r\n                        'data': [{\r\n                            'data': 1,\r\n                            'id': 0xd7 // TrackNumber\r\n                        }, {\r\n                            'data': 1,\r\n                            'id': 0x73c5 // TrackUID\r\n                        }, {\r\n                            'data': 0,\r\n                            'id': 0x9c // FlagLacing\r\n                        }, {\r\n                            'data': 'und',\r\n                            'id': 0x22b59c // Language\r\n                        }, {\r\n                            'data': 'V_VP8',\r\n                            'id': 0x86 // CodecID\r\n                        }, {\r\n                            'data': 'VP8',\r\n                            'id': 0x258688 // CodecName\r\n                        }, {\r\n                            'data': 1,\r\n                            'id': 0x83 // TrackType\r\n                        }, {\r\n                            'id': 0xe0, // Video\r\n                            'data': [{\r\n                                'data': info.width,\r\n                                'id': 0xb0 // PixelWidth\r\n                            }, {\r\n                                'data': info.height,\r\n                                'id': 0xba // PixelHeight\r\n                            }]\r\n                        }]\r\n                    }]\r\n                }]\r\n            }];\r\n\r\n            //Generate clusters (max duration)\r\n            var frameNumber = 0;\r\n            var clusterTimecode = 0;\r\n            while (frameNumber < frames.length) {\r\n\r\n                var clusterFrames = [];\r\n                var clusterDuration = 0;\r\n                do {\r\n                    clusterFrames.push(frames[frameNumber]);\r\n                    clusterDuration += frames[frameNumber].duration;\r\n                    frameNumber++;\r\n                } while (frameNumber < frames.length && clusterDuration < clusterMaxDuration);\r\n\r\n                var clusterCounter = 0;\r\n                var cluster = {\r\n                    'id': 0x1f43b675, // Cluster\r\n                    'data': getClusterData(clusterTimecode, clusterCounter, clusterFrames)\r\n                }; //Add cluster to segment\r\n                EBML[1].data.push(cluster);\r\n                clusterTimecode += clusterDuration;\r\n            }\r\n\r\n            return generateEBML(EBML);\r\n        }\r\n\r\n        function getClusterData(clusterTimecode, clusterCounter, clusterFrames) {\r\n            return [{\r\n                'data': clusterTimecode,\r\n                'id': 0xe7 // Timecode\r\n            }].concat(clusterFrames.map(function(webp) {\r\n                var block = makeSimpleBlock({\r\n                    discardable: 0,\r\n                    frame: webp.data.slice(4),\r\n                    invisible: 0,\r\n                    keyframe: 1,\r\n                    lacing: 0,\r\n                    trackNum: 1,\r\n                    timecode: Math.round(clusterCounter)\r\n                });\r\n                clusterCounter += webp.duration;\r\n                return {\r\n                    data: block,\r\n                    id: 0xa3\r\n                };\r\n            }));\r\n        }\r\n\r\n        // sums the lengths of all the frames and gets the duration\r\n\r\n        function checkFrames(frames) {\r\n            if (!frames[0]) {\r\n                postMessage({\r\n                    error: 'Something went wrong. Maybe WebP format is not supported in the current browser.'\r\n                });\r\n                return;\r\n            }\r\n\r\n            var width = frames[0].width,\r\n                height = frames[0].height,\r\n                duration = frames[0].duration;\r\n\r\n            for (var i = 1; i < frames.length; i++) {\r\n                duration += frames[i].duration;\r\n            }\r\n            return {\r\n                duration: duration,\r\n                width: width,\r\n                height: height\r\n            };\r\n        }\r\n\r\n        function numToBuffer(num) {\r\n            var parts = [];\r\n            while (num > 0) {\r\n                parts.push(num & 0xff);\r\n                num = num >> 8;\r\n            }\r\n            return new Uint8Array(parts.reverse());\r\n        }\r\n\r\n        function strToBuffer(str) {\r\n            return new Uint8Array(str.split('').map(function(e) {\r\n                return e.charCodeAt(0);\r\n            }));\r\n        }\r\n\r\n        function bitsToBuffer(bits) {\r\n            var data = [];\r\n            var pad = (bits.length % 8) ? (new Array(1 + 8 - (bits.length % 8))).join('0') : '';\r\n            bits = pad + bits;\r\n            for (var i = 0; i < bits.length; i += 8) {\r\n                data.push(parseInt(bits.substr(i, 8), 2));\r\n            }\r\n            return new Uint8Array(data);\r\n        }\r\n\r\n        function generateEBML(json) {\r\n            var ebml = [];\r\n            for (var i = 0; i < json.length; i++) {\r\n                var data = json[i].data;\r\n\r\n                if (typeof data === 'object') {\r\n                    data = generateEBML(data);\r\n                }\r\n\r\n                if (typeof data === 'number') {\r\n                    data = bitsToBuffer(data.toString(2));\r\n                }\r\n\r\n                if (typeof data === 'string') {\r\n                    data = strToBuffer(data);\r\n                }\r\n\r\n                var len = data.size || data.byteLength || data.length;\r\n                var zeroes = Math.ceil(Math.ceil(Math.log(len) / Math.log(2)) / 8);\r\n                var sizeToString = len.toString(2);\r\n                var padded = (new Array((zeroes * 7 + 7 + 1) - sizeToString.length)).join('0') + sizeToString;\r\n                var size = (new Array(zeroes)).join('0') + '1' + padded;\r\n\r\n                ebml.push(numToBuffer(json[i].id));\r\n                ebml.push(bitsToBuffer(size));\r\n                ebml.push(data);\r\n            }\r\n\r\n            return new Blob(ebml, {\r\n                type: 'video/webm'\r\n            });\r\n        }\r\n\r\n        function toBinStrOld(bits) {\r\n            var data = '';\r\n            var pad = (bits.length % 8) ? (new Array(1 + 8 - (bits.length % 8))).join('0') : '';\r\n            bits = pad + bits;\r\n            for (var i = 0; i < bits.length; i += 8) {\r\n                data += String.fromCharCode(parseInt(bits.substr(i, 8), 2));\r\n            }\r\n            return data;\r\n        }\r\n\r\n        function makeSimpleBlock(data) {\r\n            var flags = 0;\r\n\r\n            if (data.keyframe) {\r\n                flags |= 128;\r\n            }\r\n\r\n            if (data.invisible) {\r\n                flags |= 8;\r\n            }\r\n\r\n            if (data.lacing) {\r\n                flags |= (data.lacing << 1);\r\n            }\r\n\r\n            if (data.discardable) {\r\n                flags |= 1;\r\n            }\r\n\r\n            if (data.trackNum > 127) {\r\n                throw 'TrackNumber > 127 not supported';\r\n            }\r\n\r\n            var out = [data.trackNum | 0x80, data.timecode >> 8, data.timecode & 0xff, flags].map(function(e) {\r\n                return String.fromCharCode(e);\r\n            }).join('') + data.frame;\r\n\r\n            return out;\r\n        }\r\n\r\n        function parseWebP(riff) {\r\n            var VP8 = riff.RIFF[0].WEBP[0];\r\n\r\n            var frameStart = VP8.indexOf('\\x9d\\x01\\x2a'); // A VP8 keyframe starts with the 0x9d012a header\r\n            for (var i = 0, c = []; i < 4; i++) {\r\n                c[i] = VP8.charCodeAt(frameStart + 3 + i);\r\n            }\r\n\r\n            var width, height, tmp;\r\n\r\n            //the code below is literally copied verbatim from the bitstream spec\r\n            tmp = (c[1] << 8) | c[0];\r\n            width = tmp & 0x3FFF;\r\n            tmp = (c[3] << 8) | c[2];\r\n            height = tmp & 0x3FFF;\r\n            return {\r\n                width: width,\r\n                height: height,\r\n                data: VP8,\r\n                riff: riff\r\n            };\r\n        }\r\n\r\n        function getStrLength(string, offset) {\r\n            return parseInt(string.substr(offset + 4, 4).split('').map(function(i) {\r\n                var unpadded = i.charCodeAt(0).toString(2);\r\n                return (new Array(8 - unpadded.length + 1)).join('0') + unpadded;\r\n            }).join(''), 2);\r\n        }\r\n\r\n        function parseRIFF(string) {\r\n            var offset = 0;\r\n            var chunks = {};\r\n\r\n            while (offset < string.length) {\r\n                var id = string.substr(offset, 4);\r\n                var len = getStrLength(string, offset);\r\n                var data = string.substr(offset + 4 + 4, len);\r\n                offset += 4 + 4 + len;\r\n                chunks[id] = chunks[id] || [];\r\n\r\n                if (id === 'RIFF' || id === 'LIST') {\r\n                    chunks[id].push(parseRIFF(data));\r\n                } else {\r\n                    chunks[id].push(data);\r\n                }\r\n            }\r\n            return chunks;\r\n        }\r\n\r\n        function doubleToString(num) {\r\n            return [].slice.call(\r\n                new Uint8Array((new Float64Array([num])).buffer), 0).map(function(e) {\r\n                return String.fromCharCode(e);\r\n            }).reverse().join('');\r\n        }\r\n\r\n        var webm = new ArrayToWebM(frames.map(function(frame) {\r\n            var webp = parseWebP(parseRIFF(atob(frame.image.slice(23))));\r\n            webp.duration = frame.duration;\r\n            return webp;\r\n        }));\r\n\r\n        postMessage(webm);\r\n    }\r\n\r\n    /**\r\n     * Encodes frames in WebM container. It uses WebWorkinvoke to invoke 'ArrayToWebM' method.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof Whammy\r\n     * @example\r\n     * recorder = new Whammy().Video(0.8, 100);\r\n     * recorder.compile(function(blob) {\r\n     *    // blob.size - blob.type\r\n     * });\r\n     */\r\n    WhammyVideo.prototype.compile = function(callback) {\r\n        var webWorker = processInWebWorker(whammyInWebWorker);\r\n\r\n        webWorker.onmessage = function(event) {\r\n            if (event.data.error) {\r\n                console.error(event.data.error);\r\n                return;\r\n            }\r\n            callback(event.data);\r\n        };\r\n\r\n        webWorker.postMessage(this.frames);\r\n    };\r\n\r\n    return {\r\n        /**\r\n         * A more abstract-ish API.\r\n         * @method\r\n         * @memberof Whammy\r\n         * @example\r\n         * recorder = new Whammy().Video(0.8, 100);\r\n         * @param {?number} speed - 0.8\r\n         * @param {?number} quality - 100\r\n         */\r\n        Video: WhammyVideo\r\n    };\r\n})();\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.Whammy = Whammy;\r\n}\n\r\n// ______________ (indexed-db)\r\n// DiskStorage.js\r\n\r\n/**\r\n * DiskStorage is a standalone object used by {@link RecordRTC} to store recorded blobs in IndexedDB storage.\r\n * @summary Writing blobs into IndexedDB.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @example\r\n * DiskStorage.Store({\r\n *     audioBlob: yourAudioBlob,\r\n *     videoBlob: yourVideoBlob,\r\n *     gifBlob  : yourGifBlob\r\n * });\r\n * DiskStorage.Fetch(function(dataURL, type) {\r\n *     if(type === 'audioBlob') { }\r\n *     if(type === 'videoBlob') { }\r\n *     if(type === 'gifBlob')   { }\r\n * });\r\n * // DiskStorage.dataStoreName = 'recordRTC';\r\n * // DiskStorage.onError = function(error) { };\r\n * @property {function} init - This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.\r\n * @property {function} Fetch - This method fetches stored blobs from IndexedDB.\r\n * @property {function} Store - This method stores blobs in IndexedDB.\r\n * @property {function} onError - This function is invoked for any known/unknown error.\r\n * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n */\r\n\r\n\r\nvar DiskStorage = {\r\n    /**\r\n     * This method must be called once to initialize IndexedDB ObjectStore. Though, it is auto-used internally.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.init();\r\n     */\r\n    init: function() {\r\n        var self = this;\r\n\r\n        if (typeof indexedDB === 'undefined' || typeof indexedDB.open === 'undefined') {\r\n            console.error('IndexedDB API are not available in this browser.');\r\n            return;\r\n        }\r\n\r\n        var dbVersion = 1;\r\n        var dbName = this.dbName || location.href.replace(/\\/|:|#|%|\\.|\\[|\\]/g, ''),\r\n            db;\r\n        var request = indexedDB.open(dbName, dbVersion);\r\n\r\n        function createObjectStore(dataBase) {\r\n            dataBase.createObjectStore(self.dataStoreName);\r\n        }\r\n\r\n        function putInDB() {\r\n            var transaction = db.transaction([self.dataStoreName], 'readwrite');\r\n\r\n            if (self.videoBlob) {\r\n                transaction.objectStore(self.dataStoreName).put(self.videoBlob, 'videoBlob');\r\n            }\r\n\r\n            if (self.gifBlob) {\r\n                transaction.objectStore(self.dataStoreName).put(self.gifBlob, 'gifBlob');\r\n            }\r\n\r\n            if (self.audioBlob) {\r\n                transaction.objectStore(self.dataStoreName).put(self.audioBlob, 'audioBlob');\r\n            }\r\n\r\n            function getFromStore(portionName) {\r\n                transaction.objectStore(self.dataStoreName).get(portionName).onsuccess = function(event) {\r\n                    if (self.callback) {\r\n                        self.callback(event.target.result, portionName);\r\n                    }\r\n                };\r\n            }\r\n\r\n            getFromStore('audioBlob');\r\n            getFromStore('videoBlob');\r\n            getFromStore('gifBlob');\r\n        }\r\n\r\n        request.onerror = self.onError;\r\n\r\n        request.onsuccess = function() {\r\n            db = request.result;\r\n            db.onerror = self.onError;\r\n\r\n            if (db.setVersion) {\r\n                if (db.version !== dbVersion) {\r\n                    var setVersion = db.setVersion(dbVersion);\r\n                    setVersion.onsuccess = function() {\r\n                        createObjectStore(db);\r\n                        putInDB();\r\n                    };\r\n                } else {\r\n                    putInDB();\r\n                }\r\n            } else {\r\n                putInDB();\r\n            }\r\n        };\r\n        request.onupgradeneeded = function(event) {\r\n            createObjectStore(event.target.result);\r\n        };\r\n    },\r\n    /**\r\n     * This method fetches stored blobs from IndexedDB.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.Fetch(function(dataURL, type) {\r\n     *     if(type === 'audioBlob') { }\r\n     *     if(type === 'videoBlob') { }\r\n     *     if(type === 'gifBlob')   { }\r\n     * });\r\n     */\r\n    Fetch: function(callback) {\r\n        this.callback = callback;\r\n        this.init();\r\n\r\n        return this;\r\n    },\r\n    /**\r\n     * This method stores blobs in IndexedDB.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.Store({\r\n     *     audioBlob: yourAudioBlob,\r\n     *     videoBlob: yourVideoBlob,\r\n     *     gifBlob  : yourGifBlob\r\n     * });\r\n     */\r\n    Store: function(config) {\r\n        this.audioBlob = config.audioBlob;\r\n        this.videoBlob = config.videoBlob;\r\n        this.gifBlob = config.gifBlob;\r\n\r\n        this.init();\r\n\r\n        return this;\r\n    },\r\n    /**\r\n     * This function is invoked for any known/unknown error.\r\n     * @method\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.onError = function(error){\r\n     *     alerot( JSON.stringify(error) );\r\n     * };\r\n     */\r\n    onError: function(error) {\r\n        console.error(JSON.stringify(error, null, '\\t'));\r\n    },\r\n\r\n    /**\r\n     * @property {string} dataStoreName - Name of the ObjectStore created in IndexedDB storage.\r\n     * @memberof DiskStorage\r\n     * @internal\r\n     * @example\r\n     * DiskStorage.dataStoreName = 'recordRTC';\r\n     */\r\n    dataStoreName: 'recordRTC',\r\n    dbName: null\r\n};\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.DiskStorage = DiskStorage;\r\n}\n\r\n// ______________\r\n// GifRecorder.js\r\n\r\n/**\r\n * GifRecorder is standalone calss used by {@link RecordRTC} to record video or canvas into animated gif.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef GifRecorder\r\n * @class\r\n * @example\r\n * var recorder = new GifRecorder(mediaStream || canvas || context, { onGifPreview: function, onGifRecordingStarted: function, width: 1280, height: 720, frameRate: 200, quality: 10 });\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     img.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object or HTMLCanvasElement or CanvasRenderingContext2D.\r\n * @param {object} config - {disableLogs:true, initCallback: function, width: 320, height: 240, frameRate: 200, quality: 10}\r\n */\r\n\r\nfunction GifRecorder(mediaStream, config) {\r\n    if (typeof GIFEncoder === 'undefined') {\r\n        var script = document.createElement('script');\r\n        script.src = 'https://www.webrtc-experiment.com/gif-recorder.js';\r\n        (document.body || document.documentElement).appendChild(script);\r\n    }\r\n\r\n    config = config || {};\r\n\r\n    var isHTMLObject = mediaStream instanceof CanvasRenderingContext2D || mediaStream instanceof HTMLCanvasElement;\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        if (typeof GIFEncoder === 'undefined') {\r\n            setTimeout(self.record, 1000);\r\n            return;\r\n        }\r\n\r\n        if (!isLoadedMetaData) {\r\n            setTimeout(self.record, 1000);\r\n            return;\r\n        }\r\n\r\n        if (!isHTMLObject) {\r\n            if (!config.width) {\r\n                config.width = video.offsetWidth || 320;\r\n            }\r\n\r\n            if (!config.height) {\r\n                config.height = video.offsetHeight || 240;\r\n            }\r\n\r\n            if (!config.video) {\r\n                config.video = {\r\n                    width: config.width,\r\n                    height: config.height\r\n                };\r\n            }\r\n\r\n            if (!config.canvas) {\r\n                config.canvas = {\r\n                    width: config.width,\r\n                    height: config.height\r\n                };\r\n            }\r\n\r\n            canvas.width = config.canvas.width || 320;\r\n            canvas.height = config.canvas.height || 240;\r\n\r\n            video.width = config.video.width || 320;\r\n            video.height = config.video.height || 240;\r\n        }\r\n\r\n        // external library to record as GIF images\r\n        gifEncoder = new GIFEncoder();\r\n\r\n        // void setRepeat(int iter) \r\n        // Sets the number of times the set of GIF frames should be played. \r\n        // Default is 1; 0 means play indefinitely.\r\n        gifEncoder.setRepeat(0);\r\n\r\n        // void setFrameRate(Number fps) \r\n        // Sets frame rate in frames per second. \r\n        // Equivalent to setDelay(1000/fps).\r\n        // Using \"setDelay\" instead of \"setFrameRate\"\r\n        gifEncoder.setDelay(config.frameRate || 200);\r\n\r\n        // void setQuality(int quality) \r\n        // Sets quality of color quantization (conversion of images to the \r\n        // maximum 256 colors allowed by the GIF specification). \r\n        // Lower values (minimum = 1) produce better colors, \r\n        // but slow processing significantly. 10 is the default, \r\n        // and produces good color mapping at reasonable speeds. \r\n        // Values greater than 20 do not yield significant improvements in speed.\r\n        gifEncoder.setQuality(config.quality || 10);\r\n\r\n        // Boolean start() \r\n        // This writes the GIF Header and returns false if it fails.\r\n        gifEncoder.start();\r\n\r\n        if (typeof config.onGifRecordingStarted === 'function') {\r\n            config.onGifRecordingStarted();\r\n        }\r\n\r\n        startTime = Date.now();\r\n\r\n        function drawVideoFrame(time) {\r\n            if (self.clearedRecordedData === true) {\r\n                return;\r\n            }\r\n\r\n            if (isPausedRecording) {\r\n                return setTimeout(function() {\r\n                    drawVideoFrame(time);\r\n                }, 100);\r\n            }\r\n\r\n            lastAnimationFrame = requestAnimationFrame(drawVideoFrame);\r\n\r\n            if (typeof lastFrameTime === undefined) {\r\n                lastFrameTime = time;\r\n            }\r\n\r\n            // ~10 fps\r\n            if (time - lastFrameTime < 90) {\r\n                return;\r\n            }\r\n\r\n            if (!isHTMLObject && video.paused) {\r\n                // via: https://github.com/muaz-khan/WebRTC-Experiment/pull/316\r\n                // Tweak for Android Chrome\r\n                video.play();\r\n            }\r\n\r\n            if (!isHTMLObject) {\r\n                context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n            }\r\n\r\n            if (config.onGifPreview) {\r\n                config.onGifPreview(canvas.toDataURL('image/png'));\r\n            }\r\n\r\n            gifEncoder.addFrame(context);\r\n            lastFrameTime = time;\r\n        }\r\n\r\n        lastAnimationFrame = requestAnimationFrame(drawVideoFrame);\r\n\r\n        if (config.initCallback) {\r\n            config.initCallback();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     img.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        callback = callback || function() {};\r\n\r\n        if (lastAnimationFrame) {\r\n            cancelAnimationFrame(lastAnimationFrame);\r\n        }\r\n\r\n        endTime = Date.now();\r\n\r\n        /**\r\n         * @property {Blob} blob - The recorded blob object.\r\n         * @memberof GifRecorder\r\n         * @example\r\n         * recorder.stop(function(){\r\n         *     var blob = recorder.blob;\r\n         * });\r\n         */\r\n        this.blob = new Blob([new Uint8Array(gifEncoder.stream().bin)], {\r\n            type: 'image/gif'\r\n        });\r\n\r\n        callback(this.blob);\r\n\r\n        // bug: find a way to clear old recorded blobs\r\n        gifEncoder.stream().bin = [];\r\n    };\r\n\r\n    var isPausedRecording = false;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPausedRecording = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPausedRecording = false;\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof GifRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        self.clearedRecordedData = true;\r\n        clearRecordedDataCB();\r\n    };\r\n\r\n    function clearRecordedDataCB() {\r\n        if (gifEncoder) {\r\n            gifEncoder.stream().bin = [];\r\n        }\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'GifRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    var canvas = document.createElement('canvas');\r\n    var context = canvas.getContext('2d');\r\n\r\n    if (isHTMLObject) {\r\n        if (mediaStream instanceof CanvasRenderingContext2D) {\r\n            context = mediaStream;\r\n            canvas = context.canvas;\r\n        } else if (mediaStream instanceof HTMLCanvasElement) {\r\n            context = mediaStream.getContext('2d');\r\n            canvas = mediaStream;\r\n        }\r\n    }\r\n\r\n    var isLoadedMetaData = true;\r\n\r\n    if (!isHTMLObject) {\r\n        var video = document.createElement('video');\r\n        video.muted = true;\r\n        video.autoplay = true;\r\n        video.playsInline = true;\r\n\r\n        isLoadedMetaData = false;\r\n        video.onloadedmetadata = function() {\r\n            isLoadedMetaData = true;\r\n        };\r\n\r\n        setSrcObject(mediaStream, video);\r\n\r\n        video.play();\r\n    }\r\n\r\n    var lastAnimationFrame = null;\r\n    var startTime, endTime, lastFrameTime;\r\n\r\n    var gifEncoder;\r\n\r\n    var self = this;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.GifRecorder = GifRecorder;\r\n}\n\r\n// Last time updated: 2019-06-21 4:09:42 AM UTC\r\n\r\n// ________________________\r\n// MultiStreamsMixer v1.2.2\r\n\r\n// Open-Sourced: https://github.com/muaz-khan/MultiStreamsMixer\r\n\r\n// --------------------------------------------------\r\n// Muaz Khan     - www.MuazKhan.com\r\n// MIT License   - www.WebRTC-Experiment.com/licence\r\n// --------------------------------------------------\r\n\r\nfunction MultiStreamsMixer(arrayOfMediaStreams, elementClass) {\r\n\r\n    var browserFakeUserAgent = 'Fake/5.0 (FakeOS) AppleWebKit/123 (KHTML, like Gecko) Fake/12.3.4567.89 Fake/123.45';\r\n\r\n    (function(that) {\r\n        if (typeof RecordRTC !== 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (!that) {\r\n            return;\r\n        }\r\n\r\n        if (typeof window !== 'undefined') {\r\n            return;\r\n        }\r\n\r\n        if (typeof global === 'undefined') {\r\n            return;\r\n        }\r\n\r\n        global.navigator = {\r\n            userAgent: browserFakeUserAgent,\r\n            getUserMedia: function() {}\r\n        };\r\n\r\n        if (!global.console) {\r\n            global.console = {};\r\n        }\r\n\r\n        if (typeof global.console.log === 'undefined' || typeof global.console.error === 'undefined') {\r\n            global.console.error = global.console.log = global.console.log || function() {\r\n                console.log(arguments);\r\n            };\r\n        }\r\n\r\n        if (typeof document === 'undefined') {\r\n            /*global document:true */\r\n            that.document = {\r\n                documentElement: {\r\n                    appendChild: function() {\r\n                        return '';\r\n                    }\r\n                }\r\n            };\r\n\r\n            document.createElement = document.captureStream = document.mozCaptureStream = function() {\r\n                var obj = {\r\n                    getContext: function() {\r\n                        return obj;\r\n                    },\r\n                    play: function() {},\r\n                    pause: function() {},\r\n                    drawImage: function() {},\r\n                    toDataURL: function() {\r\n                        return '';\r\n                    },\r\n                    style: {}\r\n                };\r\n                return obj;\r\n            };\r\n\r\n            that.HTMLVideoElement = function() {};\r\n        }\r\n\r\n        if (typeof location === 'undefined') {\r\n            /*global location:true */\r\n            that.location = {\r\n                protocol: 'file:',\r\n                href: '',\r\n                hash: ''\r\n            };\r\n        }\r\n\r\n        if (typeof screen === 'undefined') {\r\n            /*global screen:true */\r\n            that.screen = {\r\n                width: 0,\r\n                height: 0\r\n            };\r\n        }\r\n\r\n        if (typeof URL === 'undefined') {\r\n            /*global screen:true */\r\n            that.URL = {\r\n                createObjectURL: function() {\r\n                    return '';\r\n                },\r\n                revokeObjectURL: function() {\r\n                    return '';\r\n                }\r\n            };\r\n        }\r\n\r\n        /*global window:true */\r\n        that.window = global;\r\n    })(typeof global !== 'undefined' ? global : null);\r\n\r\n    // requires: chrome://flags/#enable-experimental-web-platform-features\r\n\r\n    elementClass = elementClass || 'multi-streams-mixer';\r\n\r\n    var videos = [];\r\n    var isStopDrawingFrames = false;\r\n\r\n    var canvas = document.createElement('canvas');\r\n    var context = canvas.getContext('2d');\r\n    canvas.style.opacity = 0;\r\n    canvas.style.position = 'absolute';\r\n    canvas.style.zIndex = -1;\r\n    canvas.style.top = '-1000em';\r\n    canvas.style.left = '-1000em';\r\n    canvas.className = elementClass;\r\n    (document.body || document.documentElement).appendChild(canvas);\r\n\r\n    this.disableLogs = false;\r\n    this.frameInterval = 10;\r\n\r\n    this.width = 360;\r\n    this.height = 240;\r\n\r\n    // use gain node to prevent echo\r\n    this.useGainNode = true;\r\n\r\n    var self = this;\r\n\r\n    // _____________________________\r\n    // Cross-Browser-Declarations.js\r\n\r\n    // WebAudio API representer\r\n    var AudioContext = window.AudioContext;\r\n\r\n    if (typeof AudioContext === 'undefined') {\r\n        if (typeof webkitAudioContext !== 'undefined') {\r\n            /*global AudioContext:true */\r\n            AudioContext = webkitAudioContext;\r\n        }\r\n\r\n        if (typeof mozAudioContext !== 'undefined') {\r\n            /*global AudioContext:true */\r\n            AudioContext = mozAudioContext;\r\n        }\r\n    }\r\n\r\n    /*jshint -W079 */\r\n    var URL = window.URL;\r\n\r\n    if (typeof URL === 'undefined' && typeof webkitURL !== 'undefined') {\r\n        /*global URL:true */\r\n        URL = webkitURL;\r\n    }\r\n\r\n    if (typeof navigator !== 'undefined' && typeof navigator.getUserMedia === 'undefined') { // maybe window.navigator?\r\n        if (typeof navigator.webkitGetUserMedia !== 'undefined') {\r\n            navigator.getUserMedia = navigator.webkitGetUserMedia;\r\n        }\r\n\r\n        if (typeof navigator.mozGetUserMedia !== 'undefined') {\r\n            navigator.getUserMedia = navigator.mozGetUserMedia;\r\n        }\r\n    }\r\n\r\n    var MediaStream = window.MediaStream;\r\n\r\n    if (typeof MediaStream === 'undefined' && typeof webkitMediaStream !== 'undefined') {\r\n        MediaStream = webkitMediaStream;\r\n    }\r\n\r\n    /*global MediaStream:true */\r\n    if (typeof MediaStream !== 'undefined') {\r\n        // override \"stop\" method for all browsers\r\n        if (typeof MediaStream.prototype.stop === 'undefined') {\r\n            MediaStream.prototype.stop = function() {\r\n                this.getTracks().forEach(function(track) {\r\n                    track.stop();\r\n                });\r\n            };\r\n        }\r\n    }\r\n\r\n    var Storage = {};\r\n\r\n    if (typeof AudioContext !== 'undefined') {\r\n        Storage.AudioContext = AudioContext;\r\n    } else if (typeof webkitAudioContext !== 'undefined') {\r\n        Storage.AudioContext = webkitAudioContext;\r\n    }\r\n\r\n    function setSrcObject(stream, element) {\r\n        if ('srcObject' in element) {\r\n            element.srcObject = stream;\r\n        } else if ('mozSrcObject' in element) {\r\n            element.mozSrcObject = stream;\r\n        } else {\r\n            element.srcObject = stream;\r\n        }\r\n    }\r\n\r\n    this.startDrawingFrames = function() {\r\n        drawVideosToCanvas();\r\n    };\r\n\r\n    function drawVideosToCanvas() {\r\n        if (isStopDrawingFrames) {\r\n            return;\r\n        }\r\n\r\n        var videosLength = videos.length;\r\n\r\n        var fullcanvas = false;\r\n        var remaining = [];\r\n        videos.forEach(function(video) {\r\n            if (!video.stream) {\r\n                video.stream = {};\r\n            }\r\n\r\n            if (video.stream.fullcanvas) {\r\n                fullcanvas = video;\r\n            } else {\r\n                // todo: video.stream.active or video.stream.live to fix blank frames issues?\r\n                remaining.push(video);\r\n            }\r\n        });\r\n\r\n        if (fullcanvas) {\r\n            canvas.width = fullcanvas.stream.width;\r\n            canvas.height = fullcanvas.stream.height;\r\n        } else if (remaining.length) {\r\n            canvas.width = videosLength > 1 ? remaining[0].width * 2 : remaining[0].width;\r\n\r\n            var height = 1;\r\n            if (videosLength === 3 || videosLength === 4) {\r\n                height = 2;\r\n            }\r\n            if (videosLength === 5 || videosLength === 6) {\r\n                height = 3;\r\n            }\r\n            if (videosLength === 7 || videosLength === 8) {\r\n                height = 4;\r\n            }\r\n            if (videosLength === 9 || videosLength === 10) {\r\n                height = 5;\r\n            }\r\n            canvas.height = remaining[0].height * height;\r\n        } else {\r\n            canvas.width = self.width || 360;\r\n            canvas.height = self.height || 240;\r\n        }\r\n\r\n        if (fullcanvas && fullcanvas instanceof HTMLVideoElement) {\r\n            drawImage(fullcanvas);\r\n        }\r\n\r\n        remaining.forEach(function(video, idx) {\r\n            drawImage(video, idx);\r\n        });\r\n\r\n        setTimeout(drawVideosToCanvas, self.frameInterval);\r\n    }\r\n\r\n    function drawImage(video, idx) {\r\n        if (isStopDrawingFrames) {\r\n            return;\r\n        }\r\n\r\n        var x = 0;\r\n        var y = 0;\r\n        var width = video.width;\r\n        var height = video.height;\r\n\r\n        if (idx === 1) {\r\n            x = video.width;\r\n        }\r\n\r\n        if (idx === 2) {\r\n            y = video.height;\r\n        }\r\n\r\n        if (idx === 3) {\r\n            x = video.width;\r\n            y = video.height;\r\n        }\r\n\r\n        if (idx === 4) {\r\n            y = video.height * 2;\r\n        }\r\n\r\n        if (idx === 5) {\r\n            x = video.width;\r\n            y = video.height * 2;\r\n        }\r\n\r\n        if (idx === 6) {\r\n            y = video.height * 3;\r\n        }\r\n\r\n        if (idx === 7) {\r\n            x = video.width;\r\n            y = video.height * 3;\r\n        }\r\n\r\n        if (typeof video.stream.left !== 'undefined') {\r\n            x = video.stream.left;\r\n        }\r\n\r\n        if (typeof video.stream.top !== 'undefined') {\r\n            y = video.stream.top;\r\n        }\r\n\r\n        if (typeof video.stream.width !== 'undefined') {\r\n            width = video.stream.width;\r\n        }\r\n\r\n        if (typeof video.stream.height !== 'undefined') {\r\n            height = video.stream.height;\r\n        }\r\n\r\n        context.drawImage(video, x, y, width, height);\r\n\r\n        if (typeof video.stream.onRender === 'function') {\r\n            video.stream.onRender(context, x, y, width, height, idx);\r\n        }\r\n    }\r\n\r\n    function getMixedStream() {\r\n        isStopDrawingFrames = false;\r\n        var mixedVideoStream = getMixedVideoStream();\r\n\r\n        var mixedAudioStream = getMixedAudioStream();\r\n        if (mixedAudioStream) {\r\n            mixedAudioStream.getTracks().filter(function(t) {\r\n                return t.kind === 'audio';\r\n            }).forEach(function(track) {\r\n                mixedVideoStream.addTrack(track);\r\n            });\r\n        }\r\n\r\n        var fullcanvas;\r\n        arrayOfMediaStreams.forEach(function(stream) {\r\n            if (stream.fullcanvas) {\r\n                fullcanvas = true;\r\n            }\r\n        });\r\n\r\n        // mixedVideoStream.prototype.appendStreams = appendStreams;\r\n        // mixedVideoStream.prototype.resetVideoStreams = resetVideoStreams;\r\n        // mixedVideoStream.prototype.clearRecordedData = clearRecordedData;\r\n\r\n        return mixedVideoStream;\r\n    }\r\n\r\n    function getMixedVideoStream() {\r\n        resetVideoStreams();\r\n\r\n        var capturedStream;\r\n\r\n        if ('captureStream' in canvas) {\r\n            capturedStream = canvas.captureStream();\r\n        } else if ('mozCaptureStream' in canvas) {\r\n            capturedStream = canvas.mozCaptureStream();\r\n        } else if (!self.disableLogs) {\r\n            console.error('Upgrade to latest Chrome or otherwise enable this flag: chrome://flags/#enable-experimental-web-platform-features');\r\n        }\r\n\r\n        var videoStream = new MediaStream();\r\n\r\n        capturedStream.getTracks().filter(function(t) {\r\n            return t.kind === 'video';\r\n        }).forEach(function(track) {\r\n            videoStream.addTrack(track);\r\n        });\r\n\r\n        canvas.stream = videoStream;\r\n\r\n        return videoStream;\r\n    }\r\n\r\n    function getMixedAudioStream() {\r\n        // via: @pehrsons\r\n        if (!Storage.AudioContextConstructor) {\r\n            Storage.AudioContextConstructor = new Storage.AudioContext();\r\n        }\r\n\r\n        self.audioContext = Storage.AudioContextConstructor;\r\n\r\n        self.audioSources = [];\r\n\r\n        if (self.useGainNode === true) {\r\n            self.gainNode = self.audioContext.createGain();\r\n            self.gainNode.connect(self.audioContext.destination);\r\n            self.gainNode.gain.value = 0; // don't hear self\r\n        }\r\n\r\n        var audioTracksLength = 0;\r\n        arrayOfMediaStreams.forEach(function(stream) {\r\n            if (!stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'audio';\r\n                }).length) {\r\n                return;\r\n            }\r\n\r\n            audioTracksLength++;\r\n\r\n            var audioSource = self.audioContext.createMediaStreamSource(stream);\r\n\r\n            if (self.useGainNode === true) {\r\n                audioSource.connect(self.gainNode);\r\n            }\r\n\r\n            self.audioSources.push(audioSource);\r\n        });\r\n\r\n        if (!audioTracksLength) {\r\n            // because \"self.audioContext\" is not initialized\r\n            // that's why we've to ignore rest of the code\r\n            return;\r\n        }\r\n\r\n        self.audioDestination = self.audioContext.createMediaStreamDestination();\r\n        self.audioSources.forEach(function(audioSource) {\r\n            audioSource.connect(self.audioDestination);\r\n        });\r\n        return self.audioDestination.stream;\r\n    }\r\n\r\n    function getVideo(stream) {\r\n        var video = document.createElement('video');\r\n\r\n        setSrcObject(stream, video);\r\n\r\n        video.className = elementClass;\r\n\r\n        video.muted = true;\r\n        video.volume = 0;\r\n\r\n        video.width = stream.width || self.width || 360;\r\n        video.height = stream.height || self.height || 240;\r\n\r\n        video.play();\r\n\r\n        return video;\r\n    }\r\n\r\n    this.appendStreams = function(streams) {\r\n        if (!streams) {\r\n            throw 'First parameter is required.';\r\n        }\r\n\r\n        if (!(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        streams.forEach(function(stream) {\r\n            var newStream = new MediaStream();\r\n\r\n            if (stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'video';\r\n                }).length) {\r\n                var video = getVideo(stream);\r\n                video.stream = stream;\r\n                videos.push(video);\r\n\r\n                newStream.addTrack(stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'video';\r\n                })[0]);\r\n            }\r\n\r\n            if (stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'audio';\r\n                }).length) {\r\n                var audioSource = self.audioContext.createMediaStreamSource(stream);\r\n                self.audioDestination = self.audioContext.createMediaStreamDestination();\r\n                audioSource.connect(self.audioDestination);\r\n\r\n                newStream.addTrack(self.audioDestination.stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'audio';\r\n                })[0]);\r\n            }\r\n\r\n            arrayOfMediaStreams.push(newStream);\r\n        });\r\n    };\r\n\r\n    this.releaseStreams = function() {\r\n        videos = [];\r\n        isStopDrawingFrames = true;\r\n\r\n        if (self.gainNode) {\r\n            self.gainNode.disconnect();\r\n            self.gainNode = null;\r\n        }\r\n\r\n        if (self.audioSources.length) {\r\n            self.audioSources.forEach(function(source) {\r\n                source.disconnect();\r\n            });\r\n            self.audioSources = [];\r\n        }\r\n\r\n        if (self.audioDestination) {\r\n            self.audioDestination.disconnect();\r\n            self.audioDestination = null;\r\n        }\r\n\r\n        if (self.audioContext) {\r\n            self.audioContext.close();\r\n        }\r\n\r\n        self.audioContext = null;\r\n\r\n        context.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        if (canvas.stream) {\r\n            canvas.stream.stop();\r\n            canvas.stream = null;\r\n        }\r\n    };\r\n\r\n    this.resetVideoStreams = function(streams) {\r\n        if (streams && !(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        resetVideoStreams(streams);\r\n    };\r\n\r\n    function resetVideoStreams(streams) {\r\n        videos = [];\r\n        streams = streams || arrayOfMediaStreams;\r\n\r\n        // via: @adrian-ber\r\n        streams.forEach(function(stream) {\r\n            if (!stream.getTracks().filter(function(t) {\r\n                    return t.kind === 'video';\r\n                }).length) {\r\n                return;\r\n            }\r\n\r\n            var video = getVideo(stream);\r\n            video.stream = stream;\r\n            videos.push(video);\r\n        });\r\n    }\r\n\r\n    // for debugging\r\n    this.name = 'MultiStreamsMixer';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    this.getMixedStream = getMixedStream;\r\n\r\n}\r\n\r\nif (typeof RecordRTC === 'undefined') {\r\n    if (typeof module !== 'undefined' /* && !!module.exports*/ ) {\r\n        module.exports = MultiStreamsMixer;\r\n    }\r\n\r\n    if (typeof define === 'function' && define.amd) {\r\n        define('MultiStreamsMixer', [], function() {\r\n            return MultiStreamsMixer;\r\n        });\r\n    }\r\n}\n\r\n// ______________________\r\n// MultiStreamRecorder.js\r\n\r\n/*\r\n * Video conference recording, using captureStream API along with WebAudio and Canvas2D API.\r\n */\r\n\r\n/**\r\n * MultiStreamRecorder can record multiple videos in single container.\r\n * @summary Multi-videos recorder.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef MultiStreamRecorder\r\n * @class\r\n * @example\r\n * var options = {\r\n *     mimeType: 'video/webm'\r\n * }\r\n * var recorder = new MultiStreamRecorder(ArrayOfMediaStreams, options);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n *\r\n *     // or\r\n *     var blob = recorder.blob;\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStreams} mediaStreams - Array of MediaStreams.\r\n * @param {object} config - {disableLogs:true, frameInterval: 1, mimeType: \"video/webm\"}\r\n */\r\n\r\nfunction MultiStreamRecorder(arrayOfMediaStreams, options) {\r\n    arrayOfMediaStreams = arrayOfMediaStreams || [];\r\n    var self = this;\r\n\r\n    var mixer;\r\n    var mediaRecorder;\r\n\r\n    options = options || {\r\n        elementClass: 'multi-streams-mixer',\r\n        mimeType: 'video/webm',\r\n        video: {\r\n            width: 360,\r\n            height: 240\r\n        }\r\n    };\r\n\r\n    if (!options.frameInterval) {\r\n        options.frameInterval = 10;\r\n    }\r\n\r\n    if (!options.video) {\r\n        options.video = {};\r\n    }\r\n\r\n    if (!options.video.width) {\r\n        options.video.width = 360;\r\n    }\r\n\r\n    if (!options.video.height) {\r\n        options.video.height = 240;\r\n    }\r\n\r\n    /**\r\n     * This method records all MediaStreams.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        // github/muaz-khan/MultiStreamsMixer\r\n        mixer = new MultiStreamsMixer(arrayOfMediaStreams, options.elementClass || 'multi-streams-mixer');\r\n\r\n        if (getAllVideoTracks().length) {\r\n            mixer.frameInterval = options.frameInterval || 10;\r\n            mixer.width = options.video.width || 360;\r\n            mixer.height = options.video.height || 240;\r\n            mixer.startDrawingFrames();\r\n        }\r\n\r\n        if (options.previewStream && typeof options.previewStream === 'function') {\r\n            options.previewStream(mixer.getMixedStream());\r\n        }\r\n\r\n        // record using MediaRecorder API\r\n        mediaRecorder = new MediaStreamRecorder(mixer.getMixedStream(), options);\r\n        mediaRecorder.record();\r\n    };\r\n\r\n    function getAllVideoTracks() {\r\n        var tracks = [];\r\n        arrayOfMediaStreams.forEach(function(stream) {\r\n            getTracks(stream, 'video').forEach(function(track) {\r\n                tracks.push(track);\r\n            });\r\n        });\r\n        return tracks;\r\n    }\r\n\r\n    /**\r\n     * This method stops recording MediaStream.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        if (!mediaRecorder) {\r\n            return;\r\n        }\r\n\r\n        mediaRecorder.stop(function(blob) {\r\n            self.blob = blob;\r\n\r\n            callback(blob);\r\n\r\n            self.clearRecordedData();\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        if (mediaRecorder) {\r\n            mediaRecorder.pause();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        if (mediaRecorder) {\r\n            mediaRecorder.resume();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        if (mediaRecorder) {\r\n            mediaRecorder.clearRecordedData();\r\n            mediaRecorder = null;\r\n        }\r\n\r\n        if (mixer) {\r\n            mixer.releaseStreams();\r\n            mixer = null;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Add extra media-streams to existing recordings.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @param {MediaStreams} mediaStreams - Array of MediaStreams\r\n     * @example\r\n     * recorder.addStreams([newAudioStream, newVideoStream]);\r\n     */\r\n    this.addStreams = function(streams) {\r\n        if (!streams) {\r\n            throw 'First parameter is required.';\r\n        }\r\n\r\n        if (!(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        arrayOfMediaStreams.concat(streams);\r\n\r\n        if (!mediaRecorder || !mixer) {\r\n            return;\r\n        }\r\n\r\n        mixer.appendStreams(streams);\r\n\r\n        if (options.previewStream && typeof options.previewStream === 'function') {\r\n            options.previewStream(mixer.getMixedStream());\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Reset videos during live recording. Replace old videos e.g. replace cameras with full-screen.\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @param {MediaStreams} mediaStreams - Array of MediaStreams\r\n     * @example\r\n     * recorder.resetVideoStreams([newVideo1, newVideo2]);\r\n     */\r\n    this.resetVideoStreams = function(streams) {\r\n        if (!mixer) {\r\n            return;\r\n        }\r\n\r\n        if (streams && !(streams instanceof Array)) {\r\n            streams = [streams];\r\n        }\r\n\r\n        mixer.resetVideoStreams(streams);\r\n    };\r\n\r\n    /**\r\n     * Returns MultiStreamsMixer\r\n     * @method\r\n     * @memberof MultiStreamRecorder\r\n     * @example\r\n     * let mixer = recorder.getMixer();\r\n     * mixer.appendStreams([newStream]);\r\n     */\r\n    this.getMixer = function() {\r\n        return mixer;\r\n    };\r\n\r\n    // for debugging\r\n    this.name = 'MultiStreamRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.MultiStreamRecorder = MultiStreamRecorder;\r\n}\n\r\n// _____________________\r\n// RecordRTC.promises.js\r\n\r\n/**\r\n * RecordRTCPromisesHandler adds promises support in {@link RecordRTC}. Try a {@link https://github.com/muaz-khan/RecordRTC/blob/master/simple-demos/RecordRTCPromisesHandler.html|demo here}\r\n * @summary Promises for {@link RecordRTC}\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef RecordRTCPromisesHandler\r\n * @class\r\n * @example\r\n * var recorder = new RecordRTCPromisesHandler(mediaStream, options);\r\n * recorder.startRecording()\r\n *         .then(successCB)\r\n *         .catch(errorCB);\r\n * // Note: You can access all RecordRTC API using \"recorder.recordRTC\" e.g. \r\n * recorder.recordRTC.onStateChanged = function(state) {};\r\n * recorder.recordRTC.setRecordingDuration(5000);\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - Single media-stream object, array of media-streams, html-canvas-element, etc.\r\n * @param {object} config - {type:\"video\", recorderType: MediaStreamRecorder, disableLogs: true, numberOfAudioChannels: 1, bufferSize: 0, sampleRate: 0, video: HTMLVideoElement, etc.}\r\n * @throws Will throw an error if \"new\" keyword is not used to initiate \"RecordRTCPromisesHandler\". Also throws error if first argument \"MediaStream\" is missing.\r\n * @requires {@link RecordRTC}\r\n */\r\n\r\nfunction RecordRTCPromisesHandler(mediaStream, options) {\r\n    if (!this) {\r\n        throw 'Use \"new RecordRTCPromisesHandler()\"';\r\n    }\r\n\r\n    if (typeof mediaStream === 'undefined') {\r\n        throw 'First argument \"MediaStream\" is required.';\r\n    }\r\n\r\n    var self = this;\r\n\r\n    /**\r\n     * @property {Blob} blob - Access/reach the native {@link RecordRTC} object.\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * let internal = recorder.recordRTC.getInternalRecorder();\r\n     * alert(internal instanceof MediaStreamRecorder);\r\n     * recorder.recordRTC.onStateChanged = function(state) {};\r\n     */\r\n    self.recordRTC = new RecordRTC(mediaStream, options);\r\n\r\n    /**\r\n     * This method records MediaStream.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.startRecording()\r\n     *         .then(successCB)\r\n     *         .catch(errorCB);\r\n     */\r\n    this.startRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.startRecording();\r\n                resolve();\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method stops the recording.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.stopRecording().then(function() {\r\n     *     var blob = recorder.getBlob();\r\n     * }).catch(errorCB);\r\n     */\r\n    this.stopRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.stopRecording(function(url) {\r\n                    self.blob = self.recordRTC.getBlob();\r\n\r\n                    if (!self.blob || !self.blob.size) {\r\n                        reject('Empty blob.', self.blob);\r\n                        return;\r\n                    }\r\n\r\n                    resolve(url);\r\n                });\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method pauses the recording. You can resume recording using \"resumeRecording\" method.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.pauseRecording()\r\n     *         .then(successCB)\r\n     *         .catch(errorCB);\r\n     */\r\n    this.pauseRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.pauseRecording();\r\n                resolve();\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.resumeRecording()\r\n     *         .then(successCB)\r\n     *         .catch(errorCB);\r\n     */\r\n    this.resumeRecording = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.resumeRecording();\r\n                resolve();\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method returns data-url for the recorded blob.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.stopRecording().then(function() {\r\n     *     recorder.getDataURL().then(function(dataURL) {\r\n     *         window.open(dataURL);\r\n     *     }).catch(errorCB);;\r\n     * }).catch(errorCB);\r\n     */\r\n    this.getDataURL = function(callback) {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                self.recordRTC.getDataURL(function(dataURL) {\r\n                    resolve(dataURL);\r\n                });\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method returns the recorded blob.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.stopRecording().then(function() {\r\n     *     recorder.getBlob().then(function(blob) {})\r\n     * }).catch(errorCB);\r\n     */\r\n    this.getBlob = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.getBlob());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method returns the internal recording object.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * let internalRecorder = await recorder.getInternalRecorder();\r\n     * if(internalRecorder instanceof MultiStreamRecorder) {\r\n     *     internalRecorder.addStreams([newAudioStream]);\r\n     *     internalRecorder.resetVideoStreams([screenStream]);\r\n     * }\r\n     * @returns {Object} \r\n     */\r\n    this.getInternalRecorder = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.getInternalRecorder());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * This method resets the recorder. So that you can reuse single recorder instance many times.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * await recorder.reset();\r\n     * recorder.startRecording(); // record again\r\n     */\r\n    this.reset = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.reset());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Destroy RecordRTC instance. Clear all recorders and objects.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * recorder.destroy().then(successCB).catch(errorCB);\r\n     */\r\n    this.destroy = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.destroy());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Get recorder's readonly state.\r\n     * @method\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * let state = await recorder.getState();\r\n     * // or\r\n     * recorder.getState().then(state => { console.log(state); })\r\n     * @returns {String} Returns recording state.\r\n     */\r\n    this.getState = function() {\r\n        return new Promise(function(resolve, reject) {\r\n            try {\r\n                resolve(self.recordRTC.getState());\r\n            } catch (e) {\r\n                reject(e);\r\n            }\r\n        });\r\n    };\r\n\r\n    /**\r\n     * @property {Blob} blob - Recorded data as \"Blob\" object.\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @example\r\n     * await recorder.stopRecording();\r\n     * let blob = recorder.getBlob(); // or \"recorder.recordRTC.blob\"\r\n     * invokeSaveAsDialog(blob);\r\n     */\r\n    this.blob = null;\r\n\r\n    /**\r\n     * RecordRTC version number\r\n     * @property {String} version - Release version number.\r\n     * @memberof RecordRTCPromisesHandler\r\n     * @static\r\n     * @readonly\r\n     * @example\r\n     * alert(recorder.version);\r\n     */\r\n    this.version = '5.6.1';\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.RecordRTCPromisesHandler = RecordRTCPromisesHandler;\r\n}\n\r\n// ______________________\r\n// WebAssemblyRecorder.js\r\n\r\n/**\r\n * WebAssemblyRecorder lets you create webm videos in JavaScript via WebAssembly. The library consumes raw RGBA32 buffers (4 bytes per pixel) and turns them into a webm video with the given framerate and quality. This makes it compatible out-of-the-box with ImageData from a CANVAS. With realtime mode you can also use webm-wasm for streaming webm videos.\r\n * @summary Video recording feature in Chrome, Firefox and maybe Edge.\r\n * @license {@link https://github.com/muaz-khan/RecordRTC/blob/master/LICENSE|MIT}\r\n * @author {@link https://MuazKhan.com|Muaz Khan}\r\n * @typedef WebAssemblyRecorder\r\n * @class\r\n * @example\r\n * var recorder = new WebAssemblyRecorder(mediaStream);\r\n * recorder.record();\r\n * recorder.stop(function(blob) {\r\n *     video.src = URL.createObjectURL(blob);\r\n * });\r\n * @see {@link https://github.com/muaz-khan/RecordRTC|RecordRTC Source Code}\r\n * @param {MediaStream} mediaStream - MediaStream object fetched using getUserMedia API or generated using captureStreamUntilEnded or WebAudio API.\r\n * @param {object} config - {webAssemblyPath:'webm-wasm.wasm',workerPath: 'webm-worker.js', frameRate: 30, width: 1920, height: 1080, bitrate: 1024, realtime: true}\r\n */\r\nfunction WebAssemblyRecorder(stream, config) {\r\n    // based on: github.com/GoogleChromeLabs/webm-wasm\r\n\r\n    if (typeof ReadableStream === 'undefined' || typeof WritableStream === 'undefined') {\r\n        // because it fixes readable/writable streams issues\r\n        console.error('Following polyfill is strongly recommended: https://unpkg.com/@mattiasbuelens/web-streams-polyfill/dist/polyfill.min.js');\r\n    }\r\n\r\n    config = config || {};\r\n\r\n    config.width = config.width || 640;\r\n    config.height = config.height || 480;\r\n    config.frameRate = config.frameRate || 30;\r\n    config.bitrate = config.bitrate || 1200;\r\n    config.realtime = config.realtime || true;\r\n\r\n    function createBufferURL(buffer, type) {\r\n        return URL.createObjectURL(new Blob([buffer], {\r\n            type: type || ''\r\n        }));\r\n    }\r\n\r\n    var finished;\r\n\r\n    function cameraStream() {\r\n        return new ReadableStream({\r\n            start: function(controller) {\r\n                var cvs = document.createElement('canvas');\r\n                var video = document.createElement('video');\r\n                var first = true;\r\n                video.srcObject = stream;\r\n                video.muted = true;\r\n                video.height = config.height;\r\n                video.width = config.width;\r\n                video.volume = 0;\r\n                video.onplaying = function() {\r\n                    cvs.width = config.width;\r\n                    cvs.height = config.height;\r\n                    var ctx = cvs.getContext('2d');\r\n                    var frameTimeout = 1000 / config.frameRate;\r\n                    var cameraTimer = setInterval(function f() {\r\n                        if (finished) {\r\n                            clearInterval(cameraTimer);\r\n                            controller.close();\r\n                        }\r\n\r\n                        if (first) {\r\n                            first = false;\r\n                            if (config.onVideoProcessStarted) {\r\n                                config.onVideoProcessStarted();\r\n                            }\r\n                        }\r\n\r\n                        ctx.drawImage(video, 0, 0);\r\n                        if (controller._controlledReadableStream.state !== 'closed') {\r\n                            try {\r\n                                controller.enqueue(\r\n                                    ctx.getImageData(0, 0, config.width, config.height)\r\n                                );\r\n                            } catch (e) {}\r\n                        }\r\n                    }, frameTimeout);\r\n                };\r\n                video.play();\r\n            }\r\n        });\r\n    }\r\n\r\n    var worker;\r\n\r\n    function startRecording(stream, buffer) {\r\n        if (!config.workerPath && !buffer) {\r\n            finished = false;\r\n\r\n            // is it safe to use @latest ?\r\n\r\n            fetch(\r\n                'https://unpkg.com/webm-wasm@latest/dist/webm-worker.js'\r\n            ).then(function(r) {\r\n                r.arrayBuffer().then(function(buffer) {\r\n                    startRecording(stream, buffer);\r\n                });\r\n            });\r\n            return;\r\n        }\r\n\r\n        if (!config.workerPath && buffer instanceof ArrayBuffer) {\r\n            var blob = new Blob([buffer], {\r\n                type: 'text/javascript'\r\n            });\r\n            config.workerPath = URL.createObjectURL(blob);\r\n        }\r\n\r\n        if (!config.workerPath) {\r\n            console.error('workerPath parameter is missing.');\r\n        }\r\n\r\n        worker = new Worker(config.workerPath);\r\n\r\n        worker.postMessage(config.webAssemblyPath || 'https://unpkg.com/webm-wasm@latest/dist/webm-wasm.wasm');\r\n        worker.addEventListener('message', function(event) {\r\n            if (event.data === 'READY') {\r\n                worker.postMessage({\r\n                    width: config.width,\r\n                    height: config.height,\r\n                    bitrate: config.bitrate || 1200,\r\n                    timebaseDen: config.frameRate || 30,\r\n                    realtime: config.realtime\r\n                });\r\n\r\n                cameraStream().pipeTo(new WritableStream({\r\n                    write: function(image) {\r\n                        if (finished) {\r\n                            console.error('Got image, but recorder is finished!');\r\n                            return;\r\n                        }\r\n\r\n                        worker.postMessage(image.data.buffer, [image.data.buffer]);\r\n                    }\r\n                }));\r\n            } else if (!!event.data) {\r\n                if (!isPaused) {\r\n                    arrayOfBuffers.push(event.data);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This method records video.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.record();\r\n     */\r\n    this.record = function() {\r\n        arrayOfBuffers = [];\r\n        isPaused = false;\r\n        this.blob = null;\r\n        startRecording(stream);\r\n\r\n        if (typeof config.initCallback === 'function') {\r\n            config.initCallback();\r\n        }\r\n    };\r\n\r\n    var isPaused;\r\n\r\n    /**\r\n     * This method pauses the recording process.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.pause();\r\n     */\r\n    this.pause = function() {\r\n        isPaused = true;\r\n    };\r\n\r\n    /**\r\n     * This method resumes the recording process.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.resume();\r\n     */\r\n    this.resume = function() {\r\n        isPaused = false;\r\n    };\r\n\r\n    function terminate(callback) {\r\n        if (!worker) {\r\n            if (callback) {\r\n                callback();\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        // Wait for null event data to indicate that the encoding is complete\r\n        worker.addEventListener('message', function(event) {\r\n            if (event.data === null) {\r\n                worker.terminate();\r\n                worker = null;\r\n\r\n                if (callback) {\r\n                    callback();\r\n                }\r\n            }\r\n        });\r\n\r\n        worker.postMessage(null);\r\n    }\r\n\r\n    var arrayOfBuffers = [];\r\n\r\n    /**\r\n     * This method stops recording video.\r\n     * @param {function} callback - Callback function, that is used to pass recorded blob back to the callee.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.stop(function(blob) {\r\n     *     video.src = URL.createObjectURL(blob);\r\n     * });\r\n     */\r\n    this.stop = function(callback) {\r\n        finished = true;\r\n\r\n        var recorder = this;\r\n\r\n        terminate(function() {\r\n            recorder.blob = new Blob(arrayOfBuffers, {\r\n                type: 'video/webm'\r\n            });\r\n\r\n            callback(recorder.blob);\r\n        });\r\n    };\r\n\r\n    // for debugging\r\n    this.name = 'WebAssemblyRecorder';\r\n    this.toString = function() {\r\n        return this.name;\r\n    };\r\n\r\n    /**\r\n     * This method resets currently recorded data.\r\n     * @method\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.clearRecordedData();\r\n     */\r\n    this.clearRecordedData = function() {\r\n        arrayOfBuffers = [];\r\n        isPaused = false;\r\n        this.blob = null;\r\n\r\n        // todo: if recording-ON then STOP it first\r\n    };\r\n\r\n    /**\r\n     * @property {Blob} blob - The recorded blob object.\r\n     * @memberof WebAssemblyRecorder\r\n     * @example\r\n     * recorder.stop(function(){\r\n     *     var blob = recorder.blob;\r\n     * });\r\n     */\r\n    this.blob = null;\r\n}\r\n\r\nif (typeof RecordRTC !== 'undefined') {\r\n    RecordRTC.WebAssemblyRecorder = WebAssemblyRecorder;\r\n}\r\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Record.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Record.vue?vue&type=style&index=0&lang=css&\"","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n"],"sourceRoot":""}