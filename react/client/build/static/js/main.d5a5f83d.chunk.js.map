{"version":3,"sources":["reportWebVitals.js","store/reducers/demoStart/actionTypes.js","store/reducers/demoStart/reducer.js","store/index.js","router.js","styles/variables.js","screens/LandingPage/styles.js","store/reducers/demoStart/actions.js","screens/LandingPage/index.js","store/reducers/demoStart/selectors.js","hooks/demoStart.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","DEMO_START_ACTION","initialState","demoStartReducer","createReducer","actionTypes","state","data","demoStartInfo","reducer","action","demoStartService","Router","routes","map","route","i","exact","path","component","commonVariables","white","black","MainContainer","styled","div","Title","h1","demoStartAction","dispatch","type","DemoStart","createSelector","demoStart","info","useDispatch","actions","useMemo","bindActionCreators","demoStartActions","useCallback","useDemoStartActions","useEffect","localStorage","clear","App","LandingPage","document","getElementById","style","maxWidth","globalStore","reducers","combineReducers","middleware","thunk","enhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistedStore","stateStr","getItem","JSON","parse","undefined","e","console","error","loadFromLocalStorage","store","createStore","applyMiddleware","subscribe","setItem","stringify","saveToLocalStorage","getState","configureStore","app","root","ReactDOM","render"],"mappings":"4MAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,uBCNDQ,EAAoB,oB,QCE3BC,EAAe,GAEfC,EAAmBC,YAAcF,EAAD,eACnCG,GAAgC,SAACC,EAAOC,GAEvCD,EAAME,cAAgBD,MAIX,SAASE,IAA0C,IAAlCH,EAAiC,uDAAzBJ,EAAcQ,EAAW,uDAAJ,GAC3D,MAAO,CACLC,iBAAkBR,EAAiBG,EAAMK,iBAAkBD,ICT/D,I,4BCaeE,EAdA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACGA,EAAOC,KAAI,SAACC,EAAOC,GAClB,OACE,cAAC,IAAD,CAAeC,OAAK,EAACC,KAAMH,EAAMG,KAAMC,UAAWJ,EAAMI,WAA5CH,W,gBCVXI,EAAkB,CAQ7BC,MAAO,UACPC,MAAO,WCNIC,EAAgBC,IAAOC,IAAV,iNAQJL,QARI,IAQJA,OARI,EAQJA,EAAiBC,OAW1BK,GARUF,IAAOC,IAAV,sIAQCD,IAAOG,GAAV,qECpBZC,EAAkB,SAACrB,GACvB,OAAO,SAACsB,GACNA,EAAS,CACPC,KAAMzB,EACNE,W,QCkBSwB,GCtBYC,YAAe,CACxC,SAAC1B,GAAD,sBAAWA,QAAX,IAAWA,GAAX,UAAWA,EAAO2B,iBAAlB,iBAAW,EAAkBtB,wBAA7B,aAAW,EAAoCH,iBAE/C,SAAA0B,GAAI,OAAIA,KDCQ,WAChB,IAAQD,EEDyB,WACjC,IAAMJ,EAAWM,cAEXC,EAAUC,mBACd,kBAAMC,YACJ,CACEL,UAAWM,EAAiBX,iBAE9BC,KACC,CAACA,IAON,MAAO,CACLI,UALgBO,uBAAY,SAACjC,GAC7B6B,EAAQH,UAAU1B,KACjB,CAAC6B,KFbkBK,GAAdR,UAQR,OANAS,qBAAU,WAERC,aAAaC,QACbX,EAAU,sBACT,IAGD,cAAC,EAAD,UACE,cAAC,EAAD,8DGISY,MAff,WAEE,IAMMhC,EAAS,CACb,CAAEK,KANW,IAMcC,UAAW2B,IAGxC,OAAO,cAAC,EAAD,CAAQjC,OAAQA,KCVzBkC,SAASC,eAAe,QAAQC,MAAMC,SAAW,QAEjD,IAAMC,ETawB,WAE5B,IAAMC,EAAWC,YAAgB,CAC/BpB,UAAW9B,IAGPmD,EAAa,CAACC,KAEdC,EAAYC,OAAOC,sCAAwCC,IAC3DC,EAnBqB,WAC3B,IACE,IAAMC,EAAWlB,aAAamB,QAAQ,SACtC,OAAOD,EAAWE,KAAKC,MAAMH,QAAYI,EACzC,MAAOC,GAEP,YADAC,QAAQC,MAAMF,IAcOG,GAEjBC,EAAQC,YACZnB,EACAQ,EACAJ,EAAUgB,IAAe,WAAf,EAAmBlB,KAO/B,OAJAgB,EAAMG,WAAU,YAnCS,SAACnE,GAC1B,IACEqC,aAAa+B,QAAQ,QAASX,KAAKY,UAAUrE,IAC7C,MAAO4D,GACPC,QAAQC,MAAMF,IAgCdU,CAAmBN,EAAMO,eAGpBP,ESlCWQ,GACdC,EACJ,cAAC,IAAD,CAAUT,MAAOnB,EAAjB,SACE,cAAC,EAAD,MAGE6B,EAAOjC,SAASC,eAAe,QAErCiC,IAASC,OAAOH,EAAKC,GAKrBxF,M","file":"static/js/main.d5a5f83d.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// WHITHOUT REQUESTS\nexport const DEMO_START_ACTION = \"DEMO_START_ACTION\"","import * as actionTypes from './actionTypes'\nimport { createReducer } from '@reduxjs/toolkit'\n\nconst initialState = {}\n\nconst demoStartReducer = createReducer(initialState, {\n  [actionTypes.DEMO_START_ACTION]: (state, data) => {\n\n    state.demoStartInfo = data\n  },\n})\n\nexport default function reducer(state = initialState, action={}) {\n  return {\n    demoStartService: demoStartReducer(state.demoStartService, action),\n  }\n}","import { createStore, applyMiddleware, combineReducers, compose } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport demoStartReducer from './reducers/demoStart/reducer'\n\nconst saveToLocalStorage = (state) => {\n  try {\n    localStorage.setItem('state', JSON.stringify(state));\n  } catch (e) {\n    console.error(e)\n  }\n}\n\nconst loadFromLocalStorage = () => {\n  try {\n    const stateStr = localStorage.getItem('state')\n    return stateStr ? JSON.parse(stateStr) : undefined\n  } catch (e) {\n    console.error(e)\n    return undefined\n  }\n}\n\nexport const configureStore = () => {\n\n  const reducers = combineReducers({\n    demoStart: demoStartReducer,\n  })\n\n  const middleware = [thunk]\n\n  const enhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n  const persistedStore = loadFromLocalStorage()\n\n  const store = createStore(\n    reducers,\n    persistedStore,\n    enhancers(applyMiddleware(...middleware))\n  )\n  \n  store.subscribe(() => {\n    saveToLocalStorage(store.getState())\n  })\n\n  return store\n}","import React from 'react'\n\nimport { Switch, Route, HashRouter } from \"react-router-dom\"\n\nconst Router = ({ routes }) => {\n  return (\n    <HashRouter>\n      <Switch>\n        {routes.map((route, i) => {\n          return (\n            <Route key={i} exact path={route.path} component={route.component} />\n          )\n        })}\n      </Switch>\n    </HashRouter>\n  )\n}\n\nexport default Router","export const commonVariables = {\n  // Fonts\n\n  // Margins\n\n  // Dimensions\n\n  // Basic Colors\n  white: '#FFFFFF',\n  black: '#000000',\n}","import styled from 'styled-components'\nimport {Â commonVariables } from '../../styles/variables'\n\nexport const MainContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  width: 100vw;\n  height: 100vh;\n  align-items: center;\n  justify-content: center;\n  background-color: ${commonVariables?.white};\n`\n\nexport const MainDiv = styled.div`\n  width: 45vw;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n`\n\nexport const Title = styled.h1`\n  font-size: 4em;\n  font-weight: 500;\n`\n","import * as actionTypes from './actionTypes'\n\nconst demoStartAction = (data) => {\n  return (dispatch) => {\n    dispatch({\n      type: actionTypes.DEMO_START_ACTION,\n      data\n    })\n  }\n}\n\nexport {Â demoStartAction }","import React, {Â useEffect }Â from 'react'\n\nimport * as TL from './styles' // Stands for \"Truth Loop\"\n\nimport {Â useDemoStartActions } from '../../hooks/demoStart'\n\nconst DemoStart = () => {\n  const { demoStartÂ } = useDemoStartActions()\n\n  useEffect(() => {\n    // Just to don't persist that data on Storage.\n    localStorage.clear()\n    demoStart('Hello from REDUX')\n  }, [])\n\n  return (\n    <TL.MainContainer>\n      <TL.Title>\n        Hey folks, Hello from React!!! ðŸ˜Ž\n      </TL.Title>\n    </TL.MainContainer>\n  )\n}\n\nexport default DemoStart","import { createSelector } from 'reselect'\n\nexport const getDemoInfo = createSelector([\n  (state) => state?.demoStart?.demoStartService?.demoStartInfo,\n],\n  info => info\n)\n\n\n","import { useMemo, useCallback } from 'react'\nimport { actions as demoStartActions } from '../store/reducers/demoStart/index'\n\nimport { useDispatch } from 'react-redux' \nimport { bindActionCreators } from 'redux'\n\nexport const useDemoStartActions = () => {\n  const dispatch = useDispatch()\n\n  const actions = useMemo(\n    () => bindActionCreators(\n      {\n        demoStart: demoStartActions.demoStartAction,\n      },\n      dispatch\n    ), [dispatch]\n  )\n\n  const demoStart = useCallback((data) => {\n    actions.demoStart(data)\n  }, [actions])\n\n  return {\n    demoStart\n  }\n}","import React from 'react'\n\nimport Router from './router'\n\nimport LandingPage from './screens/LandingPage/index'\n\nfunction App() {\n  // Add as many paths as you need.\n  const paths = {\n    landingPage: '/',\n  }\n  \n\n  // Add as many routes as you need.\n  const routes = [\n    { path: paths.landingPage, component: LandingPage },\n  ]\n\n  return <Router routes={routes} />\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport reportWebVitals from './reportWebVitals'\n\nimport { configureStore } from './store/index'\nimport App from './App'\n\ndocument.getElementById('root').style.maxWidth = '100vw'\n\nconst globalStore = configureStore()\nconst app = \n  <Provider store={globalStore}>\n    <App />\n  </Provider>\n\nconst root = document.getElementById('root')\n\nReactDOM.render(app, root)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint.\nreportWebVitals();\n"],"sourceRoot":""}